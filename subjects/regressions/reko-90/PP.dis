void fn0800_0150(byte al)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ss
// LiveOut:
// Trashed: SCZO ah ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: di si sp
fn0800_0150_entry:
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0150:
	fn0800_01E6(al, 0x2714, 0x2714, Mem0[0x0800:0x025A:selector])
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0150_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid> si:si di:di ah:<invalid> dx:<invalid> bx:<invalid> -4(fp):di -2(fp):si



void fn0800_0163()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0800_0163_entry:
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_0163:
	return
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0163_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0800_0164(byte al, byte bArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0002(8)
// Terminates process
fn0800_0164_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0800_0164_entry:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(8)

l0800_0164:
	msdos_terminate(bArg02)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0800_0176(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds
// LiveOut:
// Trashed: ah al ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: ds sp
fn0800_0176_entry:
// DataOut: cs ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0176:
	word32 es_bx_7 = msdos_get_interrupt_vector(0x00)
	Mem10[ds:0x005B:word16] = (word16) es_bx_7
	Mem11[ds:0x005D:word16] = SLICE(es_bx_7, selector, 16)
	word32 es_bx_14 = msdos_get_interrupt_vector(0x04)
	Mem17[ds:0x005F:word16] = (word16) es_bx_14
	Mem18[ds:0x0061:word16] = SLICE(es_bx_14, selector, 16)
	word32 es_bx_21 = msdos_get_interrupt_vector(0x05)
	Mem24[ds:0x0063:word16] = (word16) es_bx_21
	Mem25[ds:0x0065:word16] = SLICE(es_bx_21, selector, 16)
	word32 es_bx_28 = msdos_get_interrupt_vector(0x06)
	Mem31[ds:0x0067:word16] = (word16) es_bx_28
	Mem32[ds:0x0069:word16] = SLICE(es_bx_28, selector, 16)
	msdos_set_interrupt_vector(0x00, SEQ(cs, 0x016D))
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0176_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:0x2500 Sequence es:bx:<invalid> dx:0x016D ds:ds -2(fp):ds



byte fn0800_01B9(selector ds, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al dl
// Trashed: ah al ax dh dl ds dx eax edx rax rdx
// Preserved: ds sp
fn0800_01B9_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01B9:
	msdos_set_interrupt_vector(0x00, Mem0[ds:0x005B:segptr32])
	msdos_set_interrupt_vector(0x04, Mem0[ds:0x005F:segptr32])
	msdos_set_interrupt_vector(0x05, Mem0[ds:0x0063:segptr32])
	ptr32 ds_dx_29 = Mem0[ds:0x0067:segptr32]
	msdos_set_interrupt_vector(0x06, ds_dx_29)
	byte dl_31
	*dlOut = (byte) ds_dx_29
	return 0x06
// DataOut: al di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_01B9_exit:
// DataOut: al dl
// DataOut (flags): 
// SymbolicIn: sp:fp ax:0x2506 Sequence ds:dx:<invalid> ds:ds -2(fp):ds



void fn0800_01E6(byte al, word16 si, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al di es si ss
// LiveOut:
// Trashed: SCZO ah ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: sp
fn0800_01E6_entry:
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01E6:
	byte ah_111
	branch si == 0x26FC l0800_01F0
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01F0:
	ah_111 = 0xFF
// DataOut: ah al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01EC:
	ah_111 = 0x00
// DataOut: ah al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01F2:
	word16 dx_31 = di
	word16 bx_32 = si
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01F6:
	branch bx_32 == di l0800_021D
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_021D:
	branch dx_31 == di l0800_023C
// DataOut: al di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_023C:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>

fn0800_01E6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>

l0800_0221:
	Mem76[es:dx_31:byte] = 0xFF
	branch Mem0[es:dx_31:byte] == 0x00 l0800_0235
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0235:
	word16 sp_95
	byte SCZO_97
	bool Z_98
	byte ah_99
	byte SZO_100
	bool C_101
	word16 dx_102
	word16 bx_104
	selector es_105
	selector ss_106
	byte CZ_107
	byte al_108
	call SEQ(0x0800, Mem76[es:dx_31 + 0x0002:word16]) (retsize: 2; depth: 4)
		uses: ah_36,al_13,bx_73,C_34,CZ_35,di_15,dx_37,es_17,SCZO_74,si_16,sp_77,ss_14,SZO_33,wLoc02_78,Z_75
		defs: ah_99,al_108,bx_104,C_101,CZ_107,di_103,dx_102,es_105,SCZO_97,si_96,sp_95,ss_106,SZO_100,Z_98
	es = Mem76[ss_106:sp_95:selector]
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_022E:
	word16 sp_79
	byte SCZO_81
	bool Z_82
	byte ah_83
	byte SZO_84
	bool C_85
	word16 dx_86
	word16 bx_88
	selector es_89
	selector ss_90
	byte CZ_91
	byte al_92
	call Mem76[es:dx_31 + 0x0002:ptr32] (retsize: 4; depth: 6)
		uses: ah_36,al_13,bx_73,C_34,CZ_35,di_15,dx_37,es_17,SCZO_74,si_16,sp_77,ss_14,SZO_33,wLoc02_78,Z_75
		defs: ah_83,al_92,bx_88,C_85,CZ_91,di_87,dx_86,es_89,SCZO_81,si_80,sp_79,ss_90,SZO_84,Z_82
	es = Mem76[ss_90:sp_79:selector]
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01FA:
	branch Mem0[es:bx_32:byte] == 0xFF l0800_0218
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0200:
	byte CZ_57
	branch si == 0x26FC l0800_020C
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_020C:
	CZ_57 = cond(Mem0[es:bx_32 + 0x0001:byte] - ah_111) (alias)
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0206:
	CZ_57 = cond(ah_111 - Mem0[es:bx_32 + 0x0001:byte]) (alias)
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0210:
	branch CZ_57 l0800_0218
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0212:
	ah_111 = Mem0[es:bx_32 + 0x0001:byte]
	dx_31 = bx_32
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0218:
	bx_32 = bx_32 + 0x0006
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)



void fn0800_023D(byte al, word16 cx, word16 dx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al cx ds dx
// LiveOut:
// Trashed: C ah ax bh bl bx eax ebx rax rbx
// Preserved: sp
fn0800_023D_entry:
// DataOut: al cx ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_023D:
	word16 ax_8
	msdos_write_file(0x0002, cx, ds_dx, out ax_8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_023D_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ah:0x40 bx:0x0002



void main(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
main_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_025E:
	Mem11[ds:0x2A27:word16] = 0x0001
	Mem13[ds:0x2E4D:word16] = 0x0000
	Mem14[ds:0x2A1F:word16] = 0x0000
	Mem15[ds:0x2E4F:word16] = 0x0000
	Mem16[ds:0x2A1D:word16] = 0x0000
	Mem17[ds:0x2A17:word16] = 0x0000
	Mem18[ds:0x2A1B:word16] = 0x0000
	Mem19[ds:0x2A11:word16] = 0x0000
	Mem20[ds:0x2A0F:word16] = 0x0000
	Mem21[ds:0x2A0D:word16] = 0x0000
	Mem22[ds:0x2A0B:word16] = 0x3000
	Mem23[ds:0x2E31:word16] = 0x8000
	Mem24[ds:0x2E2F:word16] = 0x1000
	Mem25[ds:0x2A21:word16] = 0x0001
	Mem26[ds:0x29F5:word16] = 0x0000
	Mem27[ds:0x29F3:word16] = 0x0000
	Mem28[ds:0x29F1:word16] = 0x0000
	Mem29[ds:0x29EF:word16] = 0x0000
	Mem30[ds:0x2A13:word16] = 0x0000
	Mem31[ds:0x2A23:word16] = 0x0001
	fn0800_2C9A(ds)
	word16 di_42
	word16 si_290 = fn0800_B2EF(ds, 0x07E8, ds, out di_42)
	selector ds_47
	byte dl_48 = fn0800_0541(fp - 2, di_42, fn0800_0402(ds), out ds_47)
	Mem53[ss:fp - 0x000A:word16] = 0x0001
	Mem56[ss:fp - 0x000C:word16] = 0x0001
	fn0800_2DBF(ds_47, wArg00, wArg02)
	Mem64[ss:fp - 0x000A:word16] = 0x0000
	Mem66[ss:fp - 0x000C:word16] = 0x0000
	word16 dx_279 = DPB(dx, dl_48, 0)
	word16 di_69
	byte dl_278
	selector ds_277
	word16 ax_71 = fn0800_9764(dl_48, ds_47, ptrArg00, wArg02, out dl_278, out di_69, out ds_277)
	Mem74[ss:fp - 0x0004:word16] = dx_279
	Mem75[ss:fp - 0x0006:word16] = ax_71
	word16 bp_276 = fp - 2
	word16 bx_76 = Mem75[ds_277:0x2A25:word16]
	branch bx_76 >u 0x0008 l0800_0338
// DataOut: bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_031A:
	switch (bx_76 << 0x0001) { l0800_0321 l0800_0330 l0800_0330 l0800_0326 l0800_0326 l0800_032B l0800_0335 l0800_0335 l0800_0335 }
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> di:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0335:
	dl_278 = fn0800_19EE(fp - 2, ds_277, out ds_277)
	dx_279 = DPB(dx, dl_278, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> di:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_032B:
	dl_278 = fn0800_18D9(fp - 2, ds_277, out si_290, out ds_277)
	dx_279 = DPB(dx, dl_278, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> di:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0326:
	dl_278 = fn0800_12E2(fp - 2, ds_277, out ds_277)
	dx_279 = DPB(dx, dl_278, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> di:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0330:
	dl_278 = fn0800_112D(fp - 2, si_290, ds_277, out bp_276, out ds_277)
	dx_279 = DPB(dx, dl_278, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> di:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0321:
	dl_278 = fn0800_0DE8(fp - 2, si_290, ds_277, out bp_276, out ds_277)
	dx_279 = DPB(dx, dl_278, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> di:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0338:
	Mem88[ss:fp - 0x000A:word16] = 0x0000
	Mem90[ss:fp - 0x000C:word16] = 0x0000
	byte dl_91
	word16 di_92
	selector ds_93
	word16 ax_96 = fn0800_9764(dl_278, ds_277, ptrArg00, wArg02, out dl_91, out di_92, out ds_93) - Mem90[ss:bp_276 - 0x0004:word16]
	Mem101[ss:bp_276 - 0x0002:word16] = dx_279 - Mem90[ss:bp_276 - 0x0002:word16] - (ax_96 <u 0x0000)
	Mem102[ss:bp_276 - 0x0004:word16] = ax_96
	Mem105[ss:fp - 0x000A:word16] = Mem102[ds_93:0x29F1:word16]
	Mem108[ss:fp - 0x000C:word16] = Mem105[ds_93:0x29EF:word16]
	Mem111[ss:fp - 0x000E:word16] = Mem108[ds_93:0x29F5:word16]
	Mem114[ss:fp - 0x0010:word16] = Mem111[ds_93:0x29F3:word16]
	word16 di_117
	word16 ax_118 = fn0800_0B79(bp_276, si_290, di_92, wArg00, wArg02, wArg04, wArg06, out di_117)
	Mem126[ss:fp - 0x000A:word16] = 0x0000
	Mem128[ss:fp - 0x000C:word16] = 0x003C
	Mem131[ss:fp - 0x000E:word16] = Mem128[ss:bp_276 - 0x0002:word16]
	Mem134[ss:fp - 0x0010:word16] = Mem131[ss:bp_276 - 0x0004:word16]
	word16 dx_135
	word16 bp_136
	word16 si_137
	word16 di_138
	word16 ax_139 = fn0800_8BCA(bp_276, ax_118, di_117, bp, out dx_135, out bp_136, out si_137, out di_138)
	Mem141[ss:fp - 0x0012:word16] = dx_135
	Mem143[ss:fp - 0x0014:word16] = ax_139
	Mem149[ss:fp - 0x0016:word16] = 0x0000
	Mem151[ss:fp - 0x0018:word16] = 0x003C
	Mem154[ss:fp - 0x001A:word16] = 0x0000
	Mem156[ss:fp - 0x001C:word16] = 0x0E10
	Mem159[ss:fp - 0x001E:word16] = Mem156[ss:bp_136 - 0x0002:word16]
	Mem162[ss:fp - 0x0020:word16] = Mem159[ss:bp_136 - 0x0004:word16]
	word16 dx_163
	word16 bp_164
	word16 si_165
	word16 di_166
	word16 ax_167 = fn0800_8BCA(bp_136, si_137, di_138, bp, out dx_163, out bp_164, out si_165, out di_166)
	Mem169[ss:fp - 0x0022:word16] = dx_163
	Mem171[ss:fp - 0x0024:word16] = ax_167
	word16 dx_172
	word16 bp_173
	word16 si_174
	word16 di_175
	word16 ax_176 = fn0800_8BBB(bp_164, si_165, di_166, bp, out dx_172, out bp_173, out si_174, out di_175)
	Mem178[ss:fp - 0x0026:word16] = dx_172
	Mem180[ss:fp - 0x0028:word16] = ax_176
	Mem186[ss:fp - 0x002A:word16] = 0x0000
	Mem188[ss:fp - 0x002C:word16] = 0x0E10
	Mem191[ss:fp - 0x002E:word16] = 0x0000
	Mem193[ss:fp - 0x0030:word16] = 0x5180
	Mem196[ss:fp - 0x0032:word16] = Mem193[ss:bp_173 - 0x0002:word16]
	Mem199[ss:fp - 0x0034:word16] = Mem196[ss:bp_173 - 0x0004:word16]
	word16 dx_200
	word16 bp_201
	word16 si_202
	word16 di_203
	word16 ax_204 = fn0800_8BCA(bp_173, si_174, di_175, bp, out dx_200, out bp_201, out si_202, out di_203)
	Mem206[ss:fp - 0x0036:word16] = dx_200
	Mem208[ss:fp - 0x0038:word16] = ax_204
	word16 dx_209
	word16 bp_210
	word16 si_211
	word16 di_212
	word16 ax_213 = fn0800_8BBB(bp_201, si_202, di_203, bp, out dx_209, out bp_210, out si_211, out di_212)
	Mem215[ss:fp - 0x003A:word16] = dx_209
	Mem217[ss:fp - 0x003C:word16] = ax_213
	Mem226[ss:fp - 0x003E:word16] = (uint16) ((uint32) (uint16) si_211 % 0x0064)
	Mem235[ss:fp - 0x0040:word16] = (uint16) ((uint32) (uint16) si_211 /u 0x0064)
	Mem238[ss:fp - 0x0042:word16] = Mem235[ds_93:0x29F1:word16]
	Mem241[ss:fp - 0x0044:word16] = Mem238[ds_93:0x29EF:word16]
	Mem244[ss:fp - 0x0046:word16] = Mem241[ds_93:0x29F5:word16]
	Mem247[ss:fp - 0x0048:word16] = Mem244[ds_93:0x29F3:word16]
	Mem249[ss:fp - 0x004A:word16] = ds_93
	Mem252[ss:fp - 0x004C:word16] = 0x05DC
	Mem255[ss:fp - 0x004E:word16] = 0x0008
	Mem258[ss:fp - 0x0050:word16] = Mem255[ds_93:0x2A13:word16]
	Mem260[ss:fp - 0x0052:word16] = ds_93
	Mem263[ss:fp - 0x0054:word16] = 0x07EB
	word16 di_264
	fn0800_B2EF(ds_93, wArg00, wArg02, out di_264)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ds:<invalid> dx:<invalid> al:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> di:<invalid> si:<invalid> ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ds:<invalid> al:<invalid> dh:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -84(fp):0x07EB -82(fp):ds -80(fp):<invalid> -78(fp):0x0008 -76(fp):0x05DC -74(fp):ds -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x0000 -58(fp):0x5180 -56(fp):0x0000 -54(fp):0x5180 -52(fp):0x0000 -50(fp):<invalid> -48(fp):0x5180 -46(fp):0x0000 -44(fp):0x0E10 -42(fp):0x0000 -40(fp):0x0000 -38(fp):0x0E10 -36(fp):0x0000 -34(fp):0x0E10 -32(fp):0x0000 -30(fp):<invalid> -28(fp):0x0E10 -26(fp):0x0000 -24(fp):0x003C -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x003C -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_0402(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: di si sp
fn0800_0402_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Local -000C(16)

l0800_0402:
	branch Mem0[ds:0x2A27:word16] != Mem0[ds:0x269A:word16] l0800_0410
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Local -000C(16)

l0800_040D:
	word16 di_384
	fn0800_0DCE(ds, out di_384, out ds)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 ax:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -000A(16) Local -000C(16)

l0800_0410:
	ptr32 es_bx_19 = Mem0[ds:0x269C:segptr32]
	selector es_21 = SLICE(es_bx_19, selector, 16)
	word16 bx_22 = (word16) es_bx_19 + (Mem0[ds:0x2A27:word16] << 0x0002)
	segptr32 ptrLoc08_31 = DPB(ptrLoc08, Mem0[es_21:bx_22:word16], 0)
	branch fn0800_BFC7(ptrLoc08_31, Mem0[es_21:bx_22 + 0x0002:word16]) <=u 0x0001 l0800_044D
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> si:<invalid> al:<invalid> ah:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -000C(16)

l0800_042F:
	ptr32 es_bx_363 = Mem0[ds:0x269C:segptr32]
	selector es_365 = SLICE(es_bx_363, selector, 16)
	word16 bx_366 = (word16) es_bx_363 + (Mem0[ds:0x2A27:word16] << 0x0002)
	ptrLoc08_31 = DPB(ptrLoc08, Mem0[es_365:bx_366:word16], 0) (alias)
	word16 si_378
	word16 di_379
	fn0800_0D24(ds, 0x0001, ptrLoc08_31, Mem0[es_365:bx_366 + 0x0002:word16], out si_378, out di_379, out ds)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:0x0000 ds:<invalid> dx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -000C(16)

l0800_044D:
	byte dl_60
	word16 ax_61 = fn0800_0C29(ds, 0x0829, ds, Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]:byte], out dl_60)
	Mem63[ds:0x2A25:word16] = ax_61
	branch ax_61 < 0x0009 l0800_0492
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -000C(16)

l0800_0474:
	ptr32 es_bx_339 = Mem63[ds:0x269C:segptr32]
	selector es_341 = SLICE(es_bx_339, selector, 16)
	word16 bx_342 = (word16) es_bx_339 + (Mem63[ds:0x2A27:word16] << 0x0002)
	ptrLoc08_31 = DPB(ptrLoc08_31, Mem63[es_341:bx_342:word16], 0) (alias)
	word16 si_354
	word16 di_355
	fn0800_0D24(ds, 0x0001, ptrLoc08_31, Mem63[es_341:bx_342 + 0x0002:word16], out si_354, out di_355, out ds)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x0829 -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_0492:
	Mem80[ds:0x2A27:word16] = Mem63[ds:0x2A27:word16] + 0x0001
	branch Mem80[ds:0x2A25:word16] > 0x0002 l0800_04A0
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_04A0:
	branch Mem80[ds:0x2A27:word16] != Mem80[ds:0x269A:word16] l0800_04AC
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_04A9:
	word16 di_333
	fn0800_0DCE(ds, out di_333, out ds)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_04AC:
	word16 ax_118 = Mem80[ds:0x2A27:word16]
	Mem120[ds:0x2A27:word16] = Mem80[ds:0x2A27:word16] + 0x0001
	ptr32 es_bx_123 = Mem120[ds:0x269C:segptr32]
	fn0800_BF9E(DPB(ptrLoc0C, 0x4348, 0), ds, DPB(ptrLoc08_31, Mem120[SLICE(es_bx_123, selector, 16):(word16) es_bx_123 + (ax_118 << 0x0002):word16], 0))
	fn0800_0C6C(ds, DPB(ptrLoc08_31, 0x4348, 0))
	word16 di_156 = 0x4348
	word16 cx_161 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> ds:<invalid> cx:<invalid> ah:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_04E4:
	branch cx_161 == 0x0000 l0800_04E6
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_04E4_1:
	di_156 = di_156 + 0x0001
	cx_161 = cx_161 - 0x0001
	branch 0x00 == Mem120[ds:di_156:byte] l0800_04E4
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_04E6:
	word16 di_170 = di_156 - 0x0001
	word16 cx_168 = ~cx_161
	bool Z_175 = (bool) cond(di_170)
// DataOut: bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_04ED:
	branch cx_168 == 0x0000 l0800_04EF
// DataOut: bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_04ED_2:
	Z_175 = (bool) cond(0x2E - Mem120[ds:di_170:byte]) (alias)
	di_170 = di_170 - 0x0001
	cx_168 = cx_168 - 0x0001
	branch 0x2E == Mem120[ds:di_170:byte] l0800_04ED
// DataOut: bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_04EF:
	branch Z_175 l0800_04F8
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_04F1:
	di_170 = 0xFFFF
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_04F8:
	word16 di_195 = di_170 + 0x0001
	word16 di_205 = 0x4348
	word16 cx_210 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_0507:
	branch cx_210 == 0x0000 l0800_0509
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_0507_1:
	di_205 = di_205 + 0x0001
	cx_210 = cx_210 - 0x0001
	branch 0x00 == Mem120[ds:di_205:byte] l0800_0507
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_0509:
	word16 cx_217 = ~cx_210
	word16 di_219 = di_205 - cx_217
	bool Z_221 = (bool) cond(di_219)
// DataOut: bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_0510:
	branch cx_217 == 0x0000 l0800_0512
// DataOut: bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_0510_2:
	Z_221 = (bool) cond(0x5C - Mem120[ds:di_219:byte]) (alias)
	di_219 = di_219 + 0x0001
	cx_217 = cx_217 - 0x0001
	branch 0x5C == Mem120[ds:di_219:byte] l0800_0510
// DataOut: bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_0512:
	branch Z_221 l0800_051B
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_0514:
	di_219 = 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_051B:
	branch di_195 >u di_219 - 0x0001 l0800_0538
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_0523:
	word16 di_270 = 0x4348
	word16 si_271 = 0x0833
	word16 cx_272 = 0xFFFF
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_0530:
	branch cx_272 == 0x0000 l0800_0532
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_0530_1:
	di_270 = di_270 + 0x0001
	cx_272 = cx_272 - 0x0001
	branch 0x00 == Mem120[ds:di_270:byte] l0800_0530
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_0532:
	word16 di_284 = di_270 - 0x0001
	word16 cx_286 = 0x0005
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_0536:
	branch cx_286 == 0x0000 l0800_0538
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_0538:
	Mem264[ds:0x2A19:word16] = 0x0001
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_0536_2:
	Mem291[ds:di_284:byte] = Mem120[ds:si_271:byte]
	si_271 = si_271 + 0x0001
	di_284 = di_284 + 0x0001
	cx_286 = cx_286 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):0x4348 -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_049D:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_053E:
	return ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

fn0800_0402_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:di si:si cl:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si



byte fn0800_0541(word16 bp, word16 di, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_0541_entry:
	*dsOut = ds
// DataOut: bp di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0541:
	word16 ax_15 = Mem0[ds:0x2A27:word16]
	branch ax_15 != Mem0[ds:0x269A:word16] l0800_0555
// DataOut: ax bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_0555:
	branch Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (ax_15 << 0x0002):segptr32]:byte] != 0x2D l0800_056B
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_056B:
	branch Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2F l0800_0584
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_0584:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp

l0800_0581:
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0568:
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_086D:
	branch Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2D l0800_0886
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0886:
	branch Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2F l0800_089F
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_089F:
	word16 ax_831 = Mem0[ds:0x2A21:word16]
	branch ax_831 == 0x0001 l0800_08AE
// DataOut: ax bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08AE:
	Mem1067[ss:fp - 0x000C:word16] = ds
	selector es_1068 = Mem1067[ss:fp - 0x000C:selector]
	word16 di_1071 = 0x4271
	word16 si_1073 = 0x085B
	word16 cx_1074 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BB:
	branch cx_1074 == 0x0000 l0800_08BD
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BB_1:
	di_1071 = di_1071 + 0x0001
	cx_1074 = cx_1074 - 0x0001
	branch 0x00 == Mem1067[es_1068:di_1071:byte] l0800_08BB
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BD:
	word16 di_1087 = di_1071 - 0x0001
	word16 cx_1090 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C1:
	branch cx_1090 == 0x0000 l0800_08C3
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C3:
	branch Mem1067[ds:0x2E31:word16] <=u 0x8000 l0800_08D1
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08CB:
	Mem1104[ds:0x2E31:word16] = 0x8000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08D1:
	Mem1103[ds:0x2E2F:word16] = 0x1000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C1_2:
	Mem1096[es_1068:di_1087:byte] = Mem1067[ds:si_1073:byte]
	si_1073 = si_1073 + 0x0001
	di_1087 = di_1087 + 0x0001
	cx_1090 = cx_1090 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08A7:
	branch ax_831 == 0x0002 l0800_08D9
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08D9:
	Mem1023[ss:fp - 0x000C:word16] = ds
	selector es_1024 = Mem1023[ss:fp - 0x000C:selector]
	word16 di_1027 = 0x4271
	word16 si_1029 = 0x085D
	word16 cx_1030 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E6:
	branch cx_1030 == 0x0000 l0800_08E8
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E6_1:
	di_1027 = di_1027 + 0x0001
	cx_1030 = cx_1030 - 0x0001
	branch 0x00 == Mem1023[es_1024:di_1027:byte] l0800_08E6
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E8:
	word16 di_1043 = di_1027 - 0x0001
	word16 cx_1046 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EC:
	branch cx_1046 == 0x0000 l0800_08EE
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EE:
	branch Mem1023[ds:0x2E31:word16] <=u 0x1000 l0800_08FC
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08F6:
	Mem1060[ds:0x2E31:word16] = 0x1000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08FC:
	Mem1059[ds:0x2E2F:word16] = 0x00FF
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EC_2:
	Mem1052[es_1024:di_1043:byte] = Mem1023[ds:si_1029:byte]
	si_1029 = si_1029 + 0x0001
	di_1043 = di_1043 + 0x0001
	cx_1046 = cx_1046 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08AC:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0902:
	branch Mem0[ds:0x2A23:word16] != 0x0002 l0800_0911
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0909:
	Mem1018[ds:0x2A1D:word16] = 0x0000
	Mem1019[ds:0x2E4F:word16] = 0x0000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0911:
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_092D
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0918:
	Mem976[ss:fp - 0x000C:word16] = ds
	selector es_977 = Mem976[ss:fp - 0x000C:selector]
	word16 di_1012 = 0x4271
	word16 si_1003 = 0x0653
	word16 cx_1014 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0925:
	branch cx_1014 == 0x0000 l0800_0927
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0925_1:
	di_1012 = di_1012 + 0x0001
	cx_1014 = cx_1014 - 0x0001
	branch 0x00 == Mem976[es_977:di_1012:byte] l0800_0925
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0927:
	word16 di_1002 = di_1012 - 0x0001
	word16 cx_1001 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092B:
	branch cx_1001 == 0x0000 l0800_092D
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092D:
	branch Mem0[ds:0x2A1D:word16] == 0x0000 l0800_0949
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0934:
	Mem936[ss:fp - 0x000C:word16] = ds
	selector es_937 = Mem936[ss:fp - 0x000C:selector]
	word16 di_1135 = 0x4271
	word16 si_942 = 0x085F
	word16 cx_943 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0941:
	branch cx_943 == 0x0000 l0800_0943
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0941_1:
	di_1135 = di_1135 + 0x0001
	cx_943 = cx_943 - 0x0001
	branch 0x00 == Mem936[es_937:di_1135:byte] l0800_0941
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0943:
	word16 di_956 = di_1135 - 0x0001
	word16 cx_959 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0947:
	branch cx_959 == 0x0000 l0800_0949
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0949:
	Mem871[ss:fp - 0x000C:word16] = ds
	selector es_872 = Mem871[ss:fp - 0x000C:selector]
	word16 di_1134 = 0x4271
	word16 si_877 = 0x0861
	word16 cx_878 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0956:
	branch cx_878 == 0x0000 l0800_0958
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0956_1:
	di_1134 = di_1134 + 0x0001
	cx_878 = cx_878 - 0x0001
	branch 0x00 == Mem871[es_872:di_1134:byte] l0800_0956
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0958:
	word16 di_891 = di_1134 - 0x0001
	word16 cx_894 = 0x0005
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095C:
	branch cx_894 == 0x0000 l0800_095E
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095E:
	branch Mem871[ds:0x2A25:word16] != 0x0000 l0800_0987
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0965:
	branch Mem871[Mem871[ds:(Mem871[ds:0x2A23:word16] << 0x0002) + 0x0545:segptr32]:byte] == 0x00 l0800_0987
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0977:
	Mem916[ss:fp - 0x000C:word16] = ds
	Mem919[ss:fp - 0x000E:word16] = 0x2E75
	Mem921[ss:fp - 0x0010:word16] = ds
	Mem924[ss:fp - 0x0012:word16] = 0x4271
	selector ds_925
	dl = fn0800_09A3(fp - 2, ds, out ds_925)
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095C_2:
	Mem900[es_872:di_891:byte] = Mem871[ds:si_877:byte]
	si_877 = si_877 + 0x0001
	di_891 = di_891 + 0x0001
	cx_894 = cx_894 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0947_2:
	Mem965[es_937:di_956:byte] = Mem936[ds:si_942:byte]
	si_942 = si_942 + 0x0001
	di_956 = di_956 + 0x0001
	cx_959 = cx_959 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092B_2:
	Mem1005[es_977:di_1002:byte] = Mem976[ds:si_1003:byte]
	si_1003 = si_1003 + 0x0001
	di_1002 = di_1002 + 0x0001
	cx_1001 = cx_1001 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_089C:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0883:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_058A:
	word16 ax_110 = Mem0[ds:0x2A27:word16]
	Mem123[ss:fp - 0x000C:word16] = DPB(ax_110 << 0x0002, Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (ax_110 << 0x0002):segptr32] + 0x0001:byte], 0)
	Mem125[ss:fp - 0x000E:word16] = ds
	Mem128[ss:fp - 0x0010:word16] = 0x0838
	word16 ax_133 = fn0800_0C29(ds, wArg00, wArg02, bArg04, out dl)
	word16 si_135 = ax_133
	branch ax_133 < 0x000B l0800_05CF
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05B1:
	ptr32 es_bx_799 = Mem128[ds:0x269C:segptr32]
	selector es_801 = SLICE(es_bx_799, selector, 16)
	word16 bx_802 = (word16) es_bx_799 + (Mem128[ds:0x2A27:word16] << 0x0002)
	Mem806[ss:fp - 0x000C:word16] = Mem128[es_801:bx_802 + 0x0002:word16]
	Mem809[ss:fp - 0x000E:word16] = Mem806[es_801:bx_802:word16]
	Mem812[ss:fp - 0x0010:word16] = 0x0002
	dl = fn0800_0D24(ds, wArg00, ptrArg02, wArg04, out si_135, out di, out ds)
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05CF:
	branch si_135 < 0x0006 l0800_05D7
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05D7:
	ptr32 es_bx_713 = Mem128[ds:0x269C:segptr32]
	selector es_715 = SLICE(es_bx_713, selector, 16)
	word16 bx_716 = (word16) es_bx_713 + (Mem128[ds:0x2A27:word16] << 0x0002)
	Mem720[ss:fp - 0x000C:word16] = Mem128[es_715:bx_716 + 0x0002:word16]
	Mem723[ss:fp - 0x000E:word16] = Mem720[es_715:bx_716:word16]
	branch fn0800_BFC7(ptrArg00, wArg02) != 0x0002 l0800_0622
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0622:
	ptr32 es_bx_785 = Mem723[ds:0x269C:segptr32]
	selector es_787 = SLICE(es_bx_785, selector, 16)
	word16 bx_788 = (word16) es_bx_785 + (Mem723[ds:0x2A27:word16] << 0x0002)
	word16 dx_790 = Mem723[es_787:bx_788:word16]
	Mem794[ss:fp - 0x0004:word16] = Mem723[es_787:bx_788 + 0x0002:word16]
	Mem795[ss:fp - 0x0006:word16] = dx_790 + 0x0002
	dl = (byte) (dx_790 + 0x0002) (alias)
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05F6:
	Mem759[ds:0x2A27:word16] = Mem723[ds:0x2A27:word16] + 0x0001
	branch Mem759[ds:0x2A27:word16] != Mem759[ds:0x269A:word16] l0800_0606
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0603:
	si_135 = fn0800_0DCE(ds, out di, out ds)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0606:
	ptr32 es_bx_769 = Mem759[ds:0x269C:segptr32]
	selector es_771 = SLICE(es_bx_769, selector, 16)
	word16 bx_772 = (word16) es_bx_769 + (Mem759[ds:0x2A27:word16] << 0x0002)
	word16 dx_775 = Mem759[es_771:bx_772:word16]
	Mem777[ss:fp - 0x0004:word16] = Mem759[es_771:bx_772 + 0x0002:word16]
	Mem778[ss:fp - 0x0006:word16] = dx_775
	dl = (byte) dx_775 (alias)
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_063F:
	branch (int16) Mem723[Mem723[ss:fp - 0x0006:segptr32]:byte] != 0x0000 l0800_0659
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_064A:
	Mem744[ss:fp - 0x000C:word16] = ds
	Mem747[ss:fp - 0x000E:word16] = 0x05DC
	Mem750[ss:fp - 0x0010:word16] = 0x0002
	dl = fn0800_0D24(ds, wArg00, ptrArg02, wArg04, out si_135, out di, out ds)
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05D4:
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0659:
	branch si_135 <=u 0x000A l0800_0663
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0663:
	word16 bx_187 = si_135 << 0x0001
	switch (bx_187) { l0800_069D l0800_0716 l0800_0765 l0800_080A l0800_07A9 l0800_074C l0800_066A l0800_0682 l0800_0679 l0800_068B l0800_0694 }
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0694:
	Mem709[ds:0x2A15:word16] = 0x0001
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_068B:
	Mem708[ds:0x2A17:word16] = 0x0001
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0679:
	Mem707[ds:0x2A1D:word16] = 0x0001
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0682:
	Mem706[ds:0x2A1B:word16] = 0x0001
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_066A:
	Mem704[ds:0x2A1F:word16] = 0x0001
	Mem705[ds:0x2E4F:word16] = 0x0000
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_074C:
	Mem684[ss:fp - 0x000C:word16] = ds
	Mem687[ss:fp - 0x000E:word16] = 0x2A0F
	Mem689[ss:fp - 0x0010:word16] = ds
	Mem692[ss:fp - 0x0012:word16] = 0x0853
	Mem695[ss:fp - 0x0014:word16] = Mem692[ss:fp - 0x0004:word16]
	Mem698[ss:fp - 0x0016:word16] = Mem695[ss:fp - 0x0006:word16]
	dl = fn0800_BF18(bx_187, di, ds, wArg04, wArg06, out di)
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_07A9:
	Mem539[ss:fp - 0x000C:word16] = ds
	Mem544[ss:fp - 0x000C:word16] = Mem539[ss:fp - 0x000C:selector]
	selector es_545 = Mem544[ss:fp - 0x0004:selector]
	Mem548[ss:fp - 0x000E:word16] = 0x42E3
	word16 di_1131 = Mem548[ss:fp - 0x0006:word16]
	word16 cx_555 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_07BB:
	branch cx_555 == 0x0000 l0800_07BD
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_07BB_1:
	di_1131 = di_1131 + 0x0001
	cx_555 = cx_555 - 0x0001
	branch 0x00 == Mem548[es_545:di_1131:byte] l0800_07BB
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_07BD:
	word16 di_573 = Mem548[ss:fp - 0x000E:word16]
	selector es_576 = Mem548[ss:fp - 0x000C:selector]
	Mem581[ss:fp - 0x000C:word16] = ds
	word16 cx_563 = ~cx_555
	word16 cx_565 = cx_563 >>u 0x0001
	word16 si_572 = di_1131 - cx_563
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_07CC:
	branch cx_565 == 0x0000 l0800_07CE
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_07CE:
	word16 cx_593 = cx_565 * 0x0002 + (cx_563 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_07D0:
	branch cx_593 == 0x0000 l0800_07D2
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_07D2:
	ds = Mem581[ss:fp - 0x000C:selector]
	*dsOut = ds
	Mem608[ss:fp - 0x000C:word16] = ds
	Mem611[ss:fp - 0x000E:word16] = 0x42E3
	dl = fn0800_0C6C(ds, ptrArg00)
	Mem616[ss:fp - 0x000C:word16] = ds
	selector es_617 = Mem616[ss:fp - 0x000C:selector]
	di = 0x42E3
	word16 cx_626 = 0xFFFF
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_07E8:
	branch cx_626 == 0x0000 l0800_07EA
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_07E8_1:
	di = di + 0x0001
	cx_626 = cx_626 - 0x0001
	branch 0x00 == Mem616[es_617:di:byte] l0800_07E8
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_07EA:
	branch Mem616[ds:~cx_626 + 0x42E1:byte] == 0x5C l0800_0869
// DataOut: al bp di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_07F7:
	word16 di_1133 = 0x42E3
	word16 si_644 = 0x0859
	word16 cx_645 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0800:
	branch cx_645 == 0x0000 l0800_0802
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:0x0859 di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0800_2:
	di_1133 = di_1133 + 0x0001
	cx_645 = cx_645 - 0x0001
	branch 0x00 == Mem616[es_617:di_1133:byte] l0800_0800
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:0x0859 di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0802:
	di = di_1133 - 0x0001
	word16 cx_657 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:0x0859 di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0806:
	branch cx_657 == 0x0000 l0800_0808
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0808:
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0806_3:
	Mem663[es_617:di:byte] = Mem616[ds:si_644:byte]
	si_644 = si_644 + 0x0001
	di = di + 0x0001
	cx_657 = cx_657 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_07D0_1:
	Mem600[es_576:di_573:byte] = Mem581[es_545:si_572:byte]
	si_572 = si_572 + 0x0001
	di_573 = di_573 + 0x0001
	cx_593 = cx_593 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_07CC_2:
	Mem588[es_576:di_573:word16] = Mem581[es_545:si_572:word16]
	si_572 = si_572 + 0x0002
	di_573 = di_573 + 0x0002
	cx_565 = cx_565 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_080A:
	Mem394[ss:fp - 0x000C:word16] = ds
	Mem399[ss:fp - 0x000C:word16] = Mem394[ss:fp - 0x000C:selector]
	selector es_400 = Mem399[ss:fp - 0x0004:selector]
	Mem403[ss:fp - 0x000E:word16] = 0x427E
	word16 di_1128 = Mem403[ss:fp - 0x0006:word16]
	word16 cx_410 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_081C:
	branch cx_410 == 0x0000 l0800_081E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_081C_1:
	di_1128 = di_1128 + 0x0001
	cx_410 = cx_410 - 0x0001
	branch 0x00 == Mem403[es_400:di_1128:byte] l0800_081C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_081E:
	word16 di_428 = Mem403[ss:fp - 0x000E:word16]
	selector es_431 = Mem403[ss:fp - 0x000C:selector]
	Mem436[ss:fp - 0x000C:word16] = ds
	word16 cx_418 = ~cx_410
	word16 cx_420 = cx_418 >>u 0x0001
	word16 si_427 = di_1128 - cx_418
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_082D:
	branch cx_420 == 0x0000 l0800_082F
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_082F:
	word16 cx_448 = cx_420 * 0x0002 + (cx_418 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0831:
	branch cx_448 == 0x0000 l0800_0833
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0833:
	ds = Mem436[ss:fp - 0x000C:selector]
	*dsOut = ds
	Mem463[ss:fp - 0x000C:word16] = ds
	Mem466[ss:fp - 0x000E:word16] = 0x427E
	dl = fn0800_0C6C(ds, ptrArg00)
	Mem471[ss:fp - 0x000C:word16] = ds
	selector es_472 = Mem471[ss:fp - 0x000C:selector]
	di = 0x427E
	word16 cx_481 = 0xFFFF
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0849:
	branch cx_481 == 0x0000 l0800_084B
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0849_1:
	di = di + 0x0001
	cx_481 = cx_481 - 0x0001
	branch 0x00 == Mem471[es_472:di:byte] l0800_0849
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_084B:
	branch Mem471[ds:~cx_481 + 0x427C:byte] == 0x5C l0800_0869
// DataOut: al bp di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0858:
	word16 di_1130 = 0x427E
	word16 si_499 = 0x0859
	word16 cx_500 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0861:
	branch cx_500 == 0x0000 l0800_0863
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:0x0859 di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0861_2:
	di_1130 = di_1130 + 0x0001
	cx_500 = cx_500 - 0x0001
	branch 0x00 == Mem471[es_472:di_1130:byte] l0800_0861
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:0x0859 di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0863:
	di = di_1130 - 0x0001
	word16 cx_512 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:0x0859 di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0867:
	branch cx_512 == 0x0000 l0800_0869
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0867_3:
	Mem518[es_472:di:byte] = Mem471[ds:si_499:byte]
	si_499 = si_499 + 0x0001
	di = di + 0x0001
	cx_512 = cx_512 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0831_1:
	Mem455[es_431:di_428:byte] = Mem436[es_400:si_427:byte]
	si_427 = si_427 + 0x0001
	di_428 = di_428 + 0x0001
	cx_448 = cx_448 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_082D_2:
	Mem443[es_431:di_428:word16] = Mem436[es_400:si_427:word16]
	si_427 = si_427 + 0x0002
	di_428 = di_428 + 0x0002
	cx_420 = cx_420 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0765:
	Mem351[ss:fp - 0x000C:word16] = ds
	Mem354[ss:fp - 0x000E:word16] = 0x2A21
	Mem356[ss:fp - 0x0010:word16] = ds
	Mem359[ss:fp - 0x0012:word16] = 0x0856
	Mem362[ss:fp - 0x0014:word16] = Mem359[ss:fp - 0x0004:word16]
	Mem365[ss:fp - 0x0016:word16] = Mem362[ss:fp - 0x0006:word16]
	dl = fn0800_BF18(bx_187, di, ds, wArg04, wArg06, out di)
	branch Mem365[ds:0x2A21:word16] > 0x0002 l0800_0796
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0782:
	branch Mem365[ds:0x2A21:word16] == 0x0000 l0800_078C
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ch:<invalid> Sequence es:di:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_078C:
	branch Mem365[ds:0x2A25:word16] == 0x0000 l0800_0796
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ch:<invalid> Sequence es:di:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0796:
	Mem375[ss:fp - 0x000C:word16] = Mem365[ss:fp - 0x0004:word16]
	Mem378[ss:fp - 0x000E:word16] = Mem375[ss:fp - 0x0006:word16]
	Mem381[ss:fp - 0x0010:word16] = 0x0005
	word16 si_382
	dl = fn0800_0D24(ds, wArg00, ptrArg02, wArg04, out si_382, out di, out ds)
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ch:<invalid> Sequence es:di:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0793:
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ch:<invalid> Sequence es:di:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0789:
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ch:<invalid> Sequence es:di:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0716:
	Mem304[ss:fp - 0x000C:word16] = ds
	Mem307[ss:fp - 0x000E:word16] = 0x2E4F
	Mem309[ss:fp - 0x0010:word16] = ds
	Mem312[ss:fp - 0x0012:word16] = 0x084F
	Mem315[ss:fp - 0x0014:word16] = Mem312[ss:fp - 0x0004:word16]
	Mem318[ss:fp - 0x0016:word16] = Mem315[ss:fp - 0x0006:word16]
	dl = fn0800_BF18(bx_187, di, ds, wArg04, wArg06, out di)
	branch Mem318[ds:0x2E4F:word16] != 0x0000 l0800_0743
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0733:
	Mem336[ss:fp - 0x000C:word16] = Mem318[ss:fp - 0x0004:word16]
	Mem339[ss:fp - 0x000E:word16] = Mem336[ss:fp - 0x0006:word16]
	Mem342[ss:fp - 0x0010:word16] = 0x0004
	word16 si_343
	dl = fn0800_0D24(ds, wArg00, ptrArg02, wArg04, out si_343, out di, out ds)
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ch:<invalid> Sequence es:di:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0743:
	Mem333[ds:0x2A1F:word16] = 0x0000
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ch:<invalid> Sequence es:di:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_069D:
	branch Mem128[ds:0x2A19:word16] == 0x0000 l0800_06A7
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_06A7:
	ptr32 es_di_192 = Mem128[ss:fp - 0x0006:segptr32]
	word16 di_193 = (word16) es_di_192
	selector es_194 = SLICE(es_di_192, selector, 16)
	word16 ax_195 = 0x0000
	word16 cx_199 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_06AF:
	branch cx_199 == 0x0000 l0800_06B1
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_06AF_1:
	di_193 = di_1127 + 0x0001
	cx_199 = cx_199 - 0x0001
	word16 di_1127 = di_193
	branch 0x00 == Mem128[es_194:di_1127:byte] l0800_06AF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_06B1:
	branch ~cx_199 <=u 0x0002 l0800_06C9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_06B9:
	Mem285[ss:fp - 0x000C:word16] = Mem128[ss:fp - 0x0004:word16]
	Mem288[ss:fp - 0x000E:word16] = Mem285[ss:fp - 0x0006:word16]
	Mem291[ss:fp - 0x0010:word16] = 0x0003
	word16 si_292
	word16 di_293
	fn0800_0D24(ds, wArg00, ptrArg02, wArg04, out si_292, out di_293, out ds)
	ax_195 = 0x0003
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_06C9:
	Mem224[ss:fp - 0x000C:word16] = DPB(ax_195, Mem128[Mem128[ss:fp - 0x0006:segptr32]:byte], 0)
	Mem226[ss:fp - 0x000E:word16] = ds
	Mem229[ss:fp - 0x0010:word16] = 0x0844
	byte dl_230
	word16 ax_231 = fn0800_0C29(ds, wArg00, wArg02, bArg04, out dl_230)
	Mem233[ds:0x2A23:word16] = ax_231
	branch ax_231 < 0x0006 l0800_06F3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_06E3:
	Mem269[ss:fp - 0x000C:word16] = Mem233[ss:fp - 0x0004:word16]
	Mem272[ss:fp - 0x000E:word16] = Mem269[ss:fp - 0x0006:word16]
	Mem275[ss:fp - 0x0010:word16] = 0x0003
	word16 si_277
	word16 di_278
	fn0800_0D24(ds, wArg00, ptrArg02, wArg04, out si_277, out di_278, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_06F3:
	word16 bx_238 = Mem233[ds:0x2A23:word16]
	Mem244[ss:fp - 0x000C:word16] = Mem233[ds:(bx_238 << 0x0002) + 0x0547:word16]
	Mem247[ss:fp - 0x000E:word16] = Mem244[ds:(bx_238 << 0x0002) + 0x0545:word16]
	Mem249[ss:fp - 0x0010:word16] = ds
	Mem252[ss:fp - 0x0012:word16] = 0x084B
	Mem254[ss:fp - 0x0014:word16] = ds
	Mem257[ss:fp - 0x0016:word16] = 0x4271
	word16 si_261
	dl = fn0800_BEA2(ds, ptrArg00, wArg04, wArg06, out si_261, out di)
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_06A4:
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0660:
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0869:
	Mem185[ds:0x2A27:word16] = Mem128[ds:0x2A27:word16] + 0x0001
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0552:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp

l0800_0987:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:0x00 dx:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> ah:<invalid> Sequence es:di:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0541_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:0x00 dx:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> ah:<invalid> Sequence es:di:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_09A3(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_09A3_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_09A3:
	word16 ax_34 = ((int16) Mem0[ds:0x0A74:byte] << 0x08) + DPB(bx, 0x00, 8)
	ui32 ax_dx_42 = SEQ(((int16) Mem0[ds:0x0A72:byte] << 0x08) + DPB(dx, 0x00, 8) + (ax_34 <u 0x0000), ax_34 + 0x0020)
	word16 ax_45 = SLICE(ax_dx_42 + 0x00000020, word16, 16)
	word16 dx_316 = (word16) (ax_dx_42 + 0x00000020)
	selector ds_52
	fn0800_4311(fp - 2, ds, dx_316, ax_45, out ds_52)
	Mem56[ss:fp - 0x0004:word16] = dx_316
	Mem58[ss:fp - 0x0006:word16] = ax_45
	Mem59[ss:fp - 0x0008:word16] = dx_316
	Mem60[ss:fp - 0x000A:word16] = ax_45
	Mem63[ss:fp - 0x0010:word16] = Mem60[ss:fp - 0x0004:word16]
	Mem65[ss:fp - 0x0012:word16] = ax_45
	Mem67[ss:fp - 0x0014:word16] = ds_52
	Mem70[ss:fp - 0x0016:word16] = 0x0A6E
	selector ds_145
	word16 bp_77 = fn0800_867A(wArg02, psegArg04, wArg06, psegArg08, out ds_145)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0A4F:
	word16 si_130 = Mem70[ss:bp_77 + 0x0004:word16]
	Mem93[ss:fp - 0x0012:word16] = ds_145
	ptr32 es_di_95 = Mem93[ss:bp_77 - 0x0008:segptr32]
	selector ds_94 = Mem93[ss:bp_77 + 0x0006:selector]
	word16 di_111 = (word16) es_di_95
	selector es_97 = SLICE(es_di_95, selector, 16)
	word16 ax_142 = 0x0000
	word16 cx_104 = 0xFFFF
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> Sequence es:di:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A5E:
	branch cx_104 == 0x0000 l0800_0A60
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A5E_1:
	di_111 = di_111 + 0x0001
	cx_104 = cx_104 - 0x0001
	branch 0x00 == Mem93[es_97:di_111:byte] l0800_0A5E
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A60:
	word16 cx_114 = ~cx_104
	word16 di_116 = di_111 - cx_114
	byte SCZO_118 = cond(di_116)
	bool Z_120 = (bool) SCZO_118
	bool C_121 = (bool) SCZO_118
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A64:
	branch cx_114 == 0x0000 l0800_0A66
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A64_2:
	byte SCZO_346 = cond(Mem93[ds_94:si_363:byte] - Mem93[es_97:di_362:byte])
	Z_120 = (bool) SCZO_346 (alias)
	C_121 = (bool) SCZO_346 (alias)
	si_130 = si_363 + 0x0001
	di_116 = di_362 + 0x0001
	cx_114 = cx_114 - 0x0001
	word16 di_362 = di_116
	word16 si_363 = si_130
	branch Mem93[ds_94:si_363:byte] != Mem93[es_97:di_362:byte] l0800_0A64
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A66:
	branch Z_120 l0800_0A6D
// DataOut: ax bp sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A68:
	word16 ax_338 = 0x0000 - C_121
	ax_142 = ax_338 - 0xFFFF - (ax_338 <u 0x0000)
// DataOut: ax bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A6D:
	ds_145 = Mem93[ss:fp - 0x0012:selector]
	branch ax_142 != 0x0000 l0800_09FF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_09FF:
	ptr32 es_di_230 = Mem93[ss:bp_77 - 0x0008:segptr32]
	word16 di_231 = (word16) es_di_230
	selector es_232 = SLICE(es_di_230, selector, 16)
	word16 cx_238 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A07:
	branch cx_238 == 0x0000 l0800_0A09
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A07_1:
	di_231 = di_365 + 0x0001
	cx_238 = cx_238 - 0x0001
	word16 di_365 = di_231
	branch 0x00 == Mem93[es_232:di_365:byte] l0800_0A07
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A09:
	word16 di_259 = Mem93[ss:bp_77 - 0x0008:word16]
	Mem262[ss:fp - 0x0012:word16] = (int16) Mem93[es_232:Mem93[ss:bp_77 - 0x0008:word16] + (~cx_238 - 0x0001) + 0x0001:byte] << 0x08
	word16 cx_268 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A25:
	branch cx_268 == 0x0000 l0800_0A27
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A25_2:
	di_259 = di_366 + 0x0001
	cx_268 = cx_268 - 0x0001
	word16 di_366 = di_259
	branch 0x00 == Mem262[es_232:di_366:byte] l0800_0A25
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A27:
	word16 dx_290 = Mem262[ss:fp - 0x0012:word16] + DPB(Mem262[ss:bp_77 - 0x0008:word16] + (~cx_268 - 0x0001), 0x00, 8)
	word16 di_293 = Mem262[ss:bp_77 - 0x0008:word16]
	word16 cx_300 = 0xFFFF
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A42:
	branch cx_300 == 0x0000 l0800_0A44
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A42_3:
	di_293 = di_367 + 0x0001
	cx_300 = cx_300 - 0x0001
	word16 di_367 = di_293
	branch 0x00 == Mem262[es_232:di_367:byte] l0800_0A42
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A44:
	word16 dx_315 = dx_290 + (~cx_300 - 0x0001)
	Mem318[ss:bp_77 - 0x0008:word16] = Mem262[ss:bp_77 - 0x0008:word16] + (dx_315 + 0x0003)
	dx_316 = dx_315 + 0x0003
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A72:
	ptr32 es_di_151 = Mem93[ss:bp_77 - 0x0008:segptr32]
	word16 di_152 = (word16) es_di_151
	selector es_153 = SLICE(es_di_151, selector, 16)
	word16 cx_159 = 0xFFFF
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7A:
	branch cx_159 == 0x0000 l0800_0A7C
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7A_1:
	di_152 = di_364 + 0x0001
	cx_159 = cx_159 - 0x0001
	word16 di_364 = di_152
	branch 0x00 == Mem93[es_153:di_364:byte] l0800_0A7A
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7C:
	Mem174[ss:bp_77 - 0x0008:word16] = Mem93[ss:bp_77 - 0x0008:word16] + ~cx_159
	ptr32 es_bx_175 = Mem174[ss:bp_77 - 0x0008:segptr32]
	Mem189[ss:fp - 0x0012:word16] = ((int16) Mem174[es_bx_175:byte] << 0x08) + DPB(dx_316, 0x00, 8) + 0x0002
	Mem192[ss:fp - 0x0014:word16] = Mem189[ss:bp_77 - 0x0006:word16]
	Mem194[ss:fp - 0x0016:word16] = (word16) es_bx_175
	Mem197[ss:fp - 0x0018:word16] = Mem194[ss:bp_77 + 0x000A:word16]
	Mem200[ss:fp - 0x001A:word16] = Mem197[ss:bp_77 + 0x0008:word16]
	selector ds_202 = fn0800_B0F3(wArg00, wArg02, psegArg04, wArg06, psegArg08)
	Mem207[ss:fp - 0x0012:word16] = Mem200[ss:bp_77 - 0x0002:word16]
	Mem210[ss:fp - 0x0014:word16] = Mem207[ss:bp_77 - 0x0004:word16]
	selector ds_211
	return fn0800_4346(ds_202, wArg00, wArg02, out ds_211)
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_09A3_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:0x00 dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> ch:<invalid> ah:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_0ABC(word16 bp, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_0ABC_entry:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0ABC:
	fn0800_35A3(fp - 0x0010, ss, wArg04, wArg06)
	word16 di_45
	word16 ax_46 = fn0800_0B79(fp - 2, wArg02, di, Mem0[ds:0x2A07:word16], Mem0[ds:0x2A09:word16], Mem0[ds:0x2A03:word16], Mem0[ds:0x2A05:word16], out di_45)
	Mem56[ss:fp - 0x0014:word16] = (uint16) ((uint32) (uint16) ax_46 % 0x0064)
	Mem65[ss:fp - 0x0016:word16] = (uint16) ((uint32) (uint16) ax_46 /u 0x0064)
	Mem68[ss:fp - 0x0018:word16] = Mem65[ds:0x2A05:word16]
	Mem71[ss:fp - 0x001A:word16] = Mem68[ds:0x2A03:word16]
	Mem74[ss:fp - 0x001C:word16] = Mem71[ds:0x2A09:word16]
	Mem77[ss:fp - 0x001E:word16] = Mem74[ds:0x2A07:word16]
	Mem79[ss:fp - 0x0020:word16] = ss
	Mem82[ss:fp - 0x0022:word16] = fp - 0x0010
	Mem85[ss:fp - 0x0024:word16] = 0x0014
	Mem87[ss:fp - 0x0026:word16] = 0x0014
	Mem89[ss:fp - 0x0028:word16] = ds
	Mem92[ss:fp - 0x002A:word16] = 0x0866
	word16 di_94
	word16 si_95 = fn0800_B2EF(ds, wArg00, wArg02, out di_94)
	branch Mem92[ds:0x2A25:word16] == 0x0002 l0800_0B2E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0B2A:
	branch si_95 == 0x0000 l0800_0B47
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0B2E:
	Mem146[ss:fp - 0x0014:word16] = Mem92[ds:(si_95 << 0x0002) + 0x059B:word16]
	Mem149[ss:fp - 0x0016:word16] = Mem146[ds:(si_95 << 0x0002) + 0x0599:word16]
	Mem151[ss:fp - 0x0018:word16] = ds
	Mem154[ss:fp - 0x001A:word16] = 0x0889
	word16 di_155
	fn0800_B2EF(ds, wArg00, wArg02, out di_155)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0B47:
	Mem105[ss:fp - 0x0014:word16] = ds
	Mem108[ss:fp - 0x0016:word16] = 0x0827
	word16 di_109
	fn0800_B2EF(ds, wArg00, wArg02, out di_109)
	word16 ax_112 = Mem108[ds:0x2A09:word16]
	word16 v30_114 = Mem108[ds:0x29F3:word16] + Mem108[ds:0x2A07:word16]
	Mem115[ds:0x29F3:word16] = v30_114
	Mem119[ds:0x29F5:word16] = Mem115[ds:0x29F5:word16] + ax_112 + (v30_114 <u 0x0000)
	word16 ax_120 = Mem119[ds:0x2A05:word16]
	word16 v32_122 = Mem119[ds:0x29EF:word16] + Mem119[ds:0x2A03:word16]
	Mem123[ds:0x29EF:word16] = v32_122
	Mem127[ds:0x29F1:word16] = Mem123[ds:0x29F1:word16] + ax_120 + (v32_122 <u 0x0000)
	Mem130[ds:0x2A13:word16] = Mem127[ds:0x2A13:word16] + 0x0001
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp

fn0800_0ABC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp



word16 fn0800_0B79(word16 bp, word16 si, word16 di, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax di
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_0B79_entry:
	*diOut = di
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B79:
	word16 bp_120 = fp - 2
	branch (wArg02 | wArg04) == 0x0000 l0800_0B9E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B84:
	branch (wArg06 | wArg08) == 0x0000 l0800_0B9E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B8C:
	branch wArg04 >u wArg08 l0800_0BCE
// DataOut: bp di ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0006(16)

l0800_0B97:
	branch wArg04 != wArg08 l0800_0B9E
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0006(16)

l0800_0B99:
	branch wArg02 >u wArg06 l0800_0BCE
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0BCE:
	ui32 ax_dx_73 = SEQ(Mem0[ss:bp_120 + 0x0006:word16], Mem0[ss:bp_120 + 0x0004:word16] - Mem0[ss:bp_120 + 0x0008:word16]) - Mem0[ss:bp_120 + 0x0008:ui32]
	word16 ax_74 = SLICE(ax_dx_73, word16, 16)
	word16 dx_75 = (word16) ax_dx_73
	branch ax_74 >u 0x0006 l0800_0BA2
// DataOut: bp di ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BDF:
	branch ax_74 != 0x0006 l0800_0BE7
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BE1:
	branch dx_75 >u 0x8DB8 l0800_0BA2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BA2:
	Mem88[ss:fp - 4:word16] = 0x0000
	Mem90[ss:fp - 6:word16] = 0x000A
	Mem93[ss:fp - 8:word16] = Mem90[ss:bp_120 + 0x0006:word16]
	Mem96[ss:fp - 10:word16] = Mem93[ss:bp_120 + 0x0004:word16]
	word16 dx_97
	word16 bp_98
	word16 si_99
	word16 di_100
	word16 ax_101 = fn0800_8BC2(bp_120, si, di, bp, out dx_97, out bp_98, out si_99, out di_100)
	Mem103[ss:bp_98 + 0x0006:word16] = dx_97
	Mem104[ss:bp_98 + 0x0004:word16] = ax_101
	Mem110[ss:fp - 4:word16] = 0x0000
	Mem112[ss:fp - 6:word16] = 0x000A
	Mem115[ss:fp - 8:word16] = Mem112[ss:bp_98 + 0x000A:word16]
	Mem118[ss:fp - 10:word16] = Mem115[ss:bp_98 + 0x0008:word16]
	word16 dx_119
	word16 ax_123 = fn0800_8BC2(bp_98, si_99, di_100, bp, out dx_119, out bp_120, out si, out di)
	Mem125[ss:bp_120 + 0x000A:word16] = dx_119
	Mem126[ss:bp_120 + 0x0008:word16] = ax_123
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BE7:
	Mem130[ss:fp - 4:word16] = Mem0[ss:bp_120 + 0x0006:word16]
	Mem133[ss:fp - 6:word16] = Mem130[ss:bp_120 + 0x0004:word16]
	ui32 cx_bx_139 = SEQ(Mem133[ss:bp_120 + 0x0006:word16], Mem133[ss:bp_120 + 0x0004:word16] - Mem133[ss:bp_120 + 0x0008:word16]) - Mem133[ss:bp_120 + 0x0008:ui32]
	word16 dx_146
	word16 ax_147 = fn0800_8F18(0x2710, SLICE(cx_bx_139, word16, 16), 0x0000, (word16) cx_bx_139, out dx_146)
	Mem149[ss:fp - 8:word16] = dx_146
	Mem151[ss:fp - 10:word16] = ax_147
	word16 dx_152
	word16 bp_153
	word16 si_154
	word16 di_155
	return fn0800_8BC2(bp_120, si, di, bp, out dx_152, out bp_153, out si_154, out di_155)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A

l0800_0B9E:
	return 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_0B79_exit:
// DataOut: ax di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> di:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A



word16 fn0800_0C08(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_0C08_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0C08:
	word16 si_10 = wArg02
	word16 cx_11 = 0x0001
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0C15:
	word16 ax_20 = (uint16) ((uint32) (uint16) si_10 /u 0x0002)
	si_10 = ax_20
	branch ax_20 != 0x0000 l0800_0C14
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> bx:0x0002 ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0C14:
	cx_11 = cx_11 + 0x0001
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> bx:0x0002 ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0C24:
	return cx_11
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> bx:0x0002 ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp

fn0800_0C08_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si cx:<invalid> bx:0x0002 ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp



word16 fn0800_0C29(selector ds, word16 wArg02, word16 wArg04, byte bArg06, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0006(8)
fn0800_0C29_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(8)

l0800_0C29:
	byte dl_15
	byte al_16 = fn0800_97CC(ds, (int16) bArg06, out dl_15)
	word16 wLoc06_25 = wArg02
// DataOut: cl di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16)

l0800_0C4F:
	branch Mem0[ptrLoc06:byte] == 0x00 l0800_0C5D
// DataOut: bx cl di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16)

l0800_0C58:
	branch Mem0[ptrLoc06:byte] != al_16 l0800_0C4C
// DataOut: cl di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16)

l0800_0C4C:
	wLoc06_25 = wLoc06_25 + 0x0001
// DataOut: cl di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16)

l0800_0C5D:
	word16 ax_39 = wLoc06_25 - wArg02
	byte dl_44
	*dlOut = (byte) (0x0000 - (ax_39 <u 0x0000))
	return ax_39
// DataOut: ax di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0C29_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_0C6C(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_0C6C_entry:
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C6C:
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C88:
	branch Mem0[ptrArg02:byte] != 0x00 l0800_0C71
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C71:
	Mem43[ptrArg02:byte] = fn0800_97CC(ds, (int16) Mem0[ptrArg02:byte], out dl)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C91:
	return dl
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>

fn0800_0C6C_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>



void fn0800_0C93(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_0C93_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_0C93:
	fn0800_3509(fp - 0x0068, ss, wArg02, wArg04)
	word16 si_202 = 0x2714
	word16 di_207 = fp - 0x0068
	word16 ax_195 = 0x0000
	word16 cx_208 = 0xFFFF
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0CB9:
	branch cx_208 == 0x0000 l0800_0CBB
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 ax:<invalid> si:0x2714 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0CB9_1:
	di_207 = di_207 + 0x0001
	cx_208 = cx_208 - 0x0001
	branch 0x00 == Mem0[ss:di_207:byte] l0800_0CB9
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 ax:<invalid> si:0x2714 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0CBB:
	word16 cx_204 = ~cx_208
	word16 di_203 = di_207 - cx_204
	byte SCZO_49 = cond(di_203)
	bool Z_200 = (bool) SCZO_49
	bool C_201 = (bool) SCZO_49
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 ax:<invalid> si:0x2714 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0CBF:
	branch cx_204 == 0x0000 l0800_0CC1
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 ax:<invalid> si:<invalid> es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0CBF_2:
	byte SCZO_198 = cond(Mem0[ds:si_210:byte] - Mem0[ss:di_211:byte])
	Z_200 = (bool) SCZO_198 (alias)
	C_201 = (bool) SCZO_198 (alias)
	si_202 = si_210 + 0x0001
	di_203 = di_211 + 0x0001
	cx_204 = cx_204 - 0x0001
	word16 si_210 = si_202
	word16 di_211 = di_203
	branch Mem0[ds:si_210:byte] != Mem0[ss:di_211:byte] l0800_0CBF
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 ax:<invalid> si:<invalid> es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0CC1:
	branch Z_200 l0800_0CC8
// DataOut: ax ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 ax:<invalid> si:<invalid> es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0CC3:
	word16 ax_192 = 0x0000 - C_201
	ax_195 = ax_192 - 0xFFFF - (ax_192 <u 0x0000)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 ax:<invalid> si:<invalid> es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0CC8:
	branch ax_195 == 0x0000 l0800_0D0D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 ax:<invalid> si:<invalid> es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0CCC:
	word16 di_114
	fn0800_B2EF(ds, 0x088F, ds, out di_114)
	word16 di_132 = fp - 0x0068
	word16 cx_144 = 0xFFFF
// DataOut: cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 ax:<invalid> si:<invalid> es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16)

l0800_0CF5:
	branch cx_144 == 0x0000 l0800_0CF7
// DataOut: cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 2 ax:0x0000 si:<invalid> es:ss di:<invalid> cx:<invalid> dx:ds al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):0x088F -114(fp):ds -112(fp):0x2714 -110(fp):ds -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16)

l0800_0CF5_1:
	di_132 = di_132 + 0x0001
	cx_144 = cx_144 - 0x0001
	branch 0x00 == Mem0[ss:di_132:byte] l0800_0CF5
// DataOut: cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 2 ax:0x0000 si:<invalid> es:ss di:<invalid> cx:<invalid> dx:ds al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):0x088F -114(fp):ds -112(fp):0x2714 -110(fp):ds -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16)

l0800_0CF7:
	word16 cx_151 = ~cx_144
	word16 cx_153 = cx_151 >>u 0x0001
	word16 si_158 = di_132 - cx_151
	word16 di_159 = 0x2714
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0070 bp:fp - 2 ax:0x0000 si:<invalid> es:ss di:<invalid> cx:<invalid> dx:ds al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):0x088F -114(fp):ds -112(fp):0x2714 -110(fp):ds -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16)

l0800_0D06:
	branch cx_153 == 0x0000 l0800_0D08
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 ax:ss si:<invalid> es:ds di:<invalid> cx:<invalid> dx:ds ds:ss al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):0x088F -114(fp):ds -112(fp):0x2714 -110(fp):ds -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16)

l0800_0D08:
	word16 cx_176 = cx_153 * 0x0002 + (cx_151 >>u 0x0001 <u 0x0000)
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 ax:ss si:<invalid> es:ds di:<invalid> cx:<invalid> dx:ds ds:ss al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):0x088F -114(fp):ds -112(fp):0x2714 -110(fp):ds -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16)

l0800_0D0A:
	branch cx_176 == 0x0000 l0800_0D0C
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 ax:ss si:<invalid> es:ds di:<invalid> cx:<invalid> dx:ds ds:ss al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):0x088F -114(fp):ds -112(fp):0x2714 -110(fp):ds -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16)

l0800_0D0C:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 ax:ss si:<invalid> es:ds di:<invalid> cx:<invalid> dx:ds ds:ss al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):0x088F -114(fp):ds -112(fp):0x2714 -110(fp):ds -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0D0D:
	word16 di_94
	fn0800_B2EF(ds, 0x089E, ds, out di_94)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:ds al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp

fn0800_0C93_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> si:si es:<invalid> di:di cx:<invalid> dx:<invalid> ds:ds al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):0x089E -114(fp):ds -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp

l0800_0D0A_1:
	Mem182[ds:di_159:byte] = Mem0[ss:si_158:byte]
	si_158 = si_158 + 0x0001
	di_159 = di_159 + 0x0001
	cx_176 = cx_176 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 ax:ss si:<invalid> es:ds di:<invalid> cx:<invalid> dx:ds ds:ss al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):0x088F -114(fp):ds -112(fp):0x2714 -110(fp):ds -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16)

l0800_0D06_2:
	Mem172[ds:di_159:word16] = Mem0[ss:si_158:word16]
	si_158 = si_158 + 0x0002
	di_159 = di_159 + 0x0002
	cx_153 = cx_153 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 ax:ss si:<invalid> es:ds di:<invalid> cx:<invalid> dx:ds ds:ss al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):0x088F -114(fp):ds -112(fp):0x2714 -110(fp):ds -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16)



byte fn0800_0D24(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg06, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di dl ds si
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_0D24_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32)

l0800_0D24:
	selector ds_19 = fn0800_0DA9(ds, Mem0[ds:0x29DB:word16], Mem0[ds:0x29DD:word16], 0x4477, ds)
	selector ds_33 = fn0800_0DA9(ds_19, Mem0[ds_19:0x29D7:word16], Mem0[ds_19:0x29D9:word16], 0x4412, ds_19)
	selector ds_47 = fn0800_0DA9(ds_33, Mem0[ds_33:0x29D3:word16], Mem0[ds_33:0x29D5:word16], 0x43AD, ds_33)
	word16 di_65
	fn0800_B2EF(ds_47, 0x08A2, ds_47, out di_65)
	branch Mem0[ptrArg04:byte] == 0x00 l0800_0D92
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16)

l0800_0D83:
	word16 di_108
	fn0800_B2EF(ds_47, 0x08A6, ds_47, out di_108)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x08A2 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_0D92:
	word16 di_81
	word16 si_82
	*siOut = fn0800_B2EF(ds_47, 0x0827, ds_47, out di_81)
	selector ds_88
	return fn0800_8B5A(ds_47, 0x0001, out ds_88)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0D24_exit:
// DataOut: di dl ds si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> ds:<invalid> dx:<invalid> es:<invalid> ah:<invalid> cx:<invalid> al:0x01 di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0827 -4(fp):0x0001 -2(fp):bp



selector fn0800_0DA9(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_0DA9_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0DA9:
	branch (wArg02 | wArg04) == 0x0000 l0800_0DCC
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0DB4:
	byte dl_38
	word16 di_39
	byte al_41 = fn0800_A614(ds, DPB(ptrLoc06, wArg02, 0), wArg04, out dl_38, out di_39, out ds)
	fn0800_8F7F(al_41, ds, DPB(ptrLoc06, wArg06, 0))
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> -2(fp):bp

l0800_0DCC:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0DA9_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_0DCE(selector ds, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: sp
fn0800_0DCE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0DCE:
	word16 di_13
	word16 si_14 = fn0800_B2EF(ds, 0x07E8, ds, out di_13)
	selector ds_21
	fn0800_8B5A(ds, 0x0000, out ds_21)
	return si_14
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0DCE_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> si:<invalid> al:<invalid> ah:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):0x07E8 -6(fp):ds -4(fp):0x0121 -2(fp):<invalid>



byte fn0800_0DE8(word16 bp, word16 si, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es rax rbp rbx rcx rdi rdx
// Preserved: si sp
fn0800_0DE8_entry:
	*bpOut = bp
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0DE8:
	word16 di_31
	fn0800_B2EF(ds, 0x08AC, ds, out di_31)
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_0E2A
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Local -000A(16) Local -000C(16)

l0800_0E1B:
	word16 di_570
	fn0800_B2EF(ds, 0x08BA, ds, out di_570)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Local -000C(16)

l0800_0E2A:
	branch Mem0[ds:0x2A1F:word16] == 0x0000 l0800_0E3C
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Local -000C(16)

l0800_0E31:
	word16 di_558
	fn0800_B2EF(ds, 0x08CF, ds, out di_558)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Local -000C(16)

l0800_0E3C:
	word16 di_50
	fn0800_B2EF(ds, 0x08DC, ds, out di_50)
	selector ds_61
	fn0800_3678(ds, DPB(ptrLoc06, 0x427E, 0), ds, out ds_61)
	word16 di_75
	word16 si_76 = fn0800_37BE(ds_61, 0x4477, ds_61, 0x08DF, ds_61, out di_75)
	word16 di_106
	selector ds_107
	word16 si_108 = fn0800_4234(si_76, di_75, ds_61, 0x4477, ds_61, 0x08EC, ds_61, out di_106, out ds_107)
	Mem95[ds_107:0x29DD:word16] = dx
	Mem96[ds_107:0x29DB:word16] = 0x4477
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10F4:
	Mem113[ss:fp - 0x0004:word16] = ds_107
	Mem117[ss:fp - 0x0006:word16] = 0x4541
	byte dl_120
	selector ds_121
	branch fn0800_2DE2(si_108, ds_107, ptrArg00, wArg02, out dl_120, out ds_121) == 0x0000 l0800_1106
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1106:
	Mem529[ss:fp - 0x0004:word16] = Mem117[ds_121:0x29DD:word16]
	Mem532[ss:fp - 0x0006:word16] = Mem529[ds_121:0x29DB:word16]
	byte dl_533
	word16 di_534
	selector ds_535
	fn0800_A614(ds_121, ptrArg00, wArg02, out dl_533, out di_534, out ds_535)
	Mem540[ss:fp - 0x0004:word16] = ds_535
	Mem544[ss:fp - 0x0006:word16] = 0x4477
	return fn0800_8F7F(0x77, ds_535, ptrArg00)
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

fn0800_0DE8_exit:
// DataOut: bp dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:si cx:<invalid> al:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x4477 -4(fp):<invalid> -2(fp):si

l0800_1103:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E7C:
	fn0800_3764(ds_121)
	branch fn0800_388C(si_108, di_106, ds_121, out si_108, out ds_107) != 0x0000 l0800_0E89
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E89:
	Mem136[ss:fp - 0x0004:word16] = ds_107
	Mem139[ss:fp - 0x0006:word16] = 0x4541
	fn0800_0C93(ds_107, wArg00, wArg02)
	Mem145[ss:fp - 0x0004:word16] = Mem139[ds_107:0x29E5:word16]
	Mem148[ss:fp - 0x0006:word16] = Mem145[ds_107:0x29E3:word16]
	selector ds_149
	word16 ax_150 = fn0800_4194(ds_107, wArg00, wArg02, out ds_149)
	Mem152[ds_149:0x2A09:word16] = dx
	Mem153[ds_149:0x2A07:word16] = ax_150
	Mem154[ds_149:0x2A05:word16] = dx
	Mem155[ds_149:0x2A03:word16] = ax_150
	si_108 = 0x0000
	branch Mem155[ds_149:0x2A09:word16] >u 0x0000 l0800_0ECF
// DataOut: bp ds si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EB9:
	branch Mem155[ds_149:0x2A09:word16] != 0x0000 l0800_0EC2
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EBB:
	branch Mem155[ds_149:0x2A07:word16] >u 0x0012 l0800_0ECF
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EC2:
	branch Mem155[ds_149:0x2A15:word16] != 0x0000 l0800_0ECF
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0ECF:
	word16 ax_292 = fn0800_3992(bp, 0x0000, ds_149, out ds_149)
	branch ax_292 == 0x0000 l0800_0EDC
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EDC:
	word16 bx_298 = Mem155[ds_149:0x2A23:word16]
	branch bx_298 <=u 0x0005 l0800_0EE8
// DataOut: bp bx ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EE8:
	switch (bx_298 << 0x0001) { l0800_0FF4 l0800_0EEF l0800_1002 l0800_0FFB l0800_0FCC l0800_0FED }
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0FED:
	si_108 = fn0800_67BF(bp, ds_149, out ds_149)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0FCC:
	Mem503[ss:fp - 0x0004:word16] = Mem155[ds_149:0x29E5:word16]
	Mem506[ss:fp - 0x0006:word16] = Mem503[ds_149:0x29E3:word16]
	selector ds_507
	branch fn0800_3F0A(ds_149, wArg00, wArg02, out ds_507) != 0x4D5A l0800_0FE6
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0FE6:
	si_108 = fn0800_669C(bp, ds_507, out ds_149)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> dx:<invalid> cl:0x08 ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0FDF:
	si_108 = fn0800_5E64(bp, ds_507, out ds_149)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> dx:<invalid> cl:0x08 ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0FFB:
	si_108 = fn0800_73AC(bp, ds_149, out bp, out ds_149)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1002:
	si_108 = fn0800_741D(bp, ds_149, out ds_149)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EEF:
	branch Mem155[ds_149:0x2A09:word16] <u 0x0000 l0800_0F1F
// DataOut: bp ds si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EF6:
	branch Mem155[ds_149:0x2A09:word16] != 0x0000 l0800_0EFF
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EF8:
	branch Mem155[ds_149:0x2A07:word16] <u 0x0012 l0800_0F1F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EFF:
	Mem474[ss:fp - 0x0004:word16] = Mem155[ds_149:0x29E5:word16]
	Mem477[ss:fp - 0x0006:word16] = Mem474[ds_149:0x29E3:word16]
	word16 di_478
	word16 ax_485 = fn0800_8CAA(ax_292, 0x08, fn0800_3F58(ds_149, wArg00, wArg02, out di_478, out ds_149), si, out dx)
	branch dx != 0x0052 l0800_0F1F
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F17:
	branch ax_485 != 0x4E43 l0800_0F1F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F1C:
	si_108 = 0x0004
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F1F:
	branch si_108 == 0x0000 l0800_0F26
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F26:
	Mem374[ss:fp - 0x0004:word16] = Mem155[ds_149:0x2A09:word16]
	Mem377[ss:fp - 0x0006:word16] = Mem374[ds_149:0x2A07:word16]
	Mem380[ss:fp - 0x0008:word16] = Mem377[ds_149:0x2A09:word16]
	Mem383[ss:fp - 0x000A:word16] = Mem380[ds_149:0x2A07:word16]
	ds_149 = fn0800_75EA(bp, ds_149, wArg00, wArg02, wArg04, wArg06)
	word16 ax_387 = Mem383[ds_149:0x2A05:word16]
	dx = Mem383[ds_149:0x2A03:word16]
	branch ax_387 >=u Mem383[ds_149:0x2A09:word16] l0800_0F4C
// DataOut: bp ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F4C:
	branch ax_387 != Mem383[ds_149:0x2A09:word16] l0800_0F57
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bp:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F4E:
	branch dx >=u Mem383[ds_149:0x2A07:word16] l0800_0F57
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bp:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F57:
	branch Mem383[ds_149:0x2A15:word16] != 0x0000 l0800_0F61
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bp:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F61:
	Mem400[ss:fp - 0x0004:word16] = Mem383[ds_149:0x29E5:word16]
	Mem403[ss:fp - 0x0006:word16] = Mem400[ds_149:0x29E3:word16]
	selector ds_404 = fn0800_BA67(ds_149, ptrArg00, wArg02)
	Mem409[ss:fp - 0x0004:word16] = Mem403[ds_404:0x29E1:word16]
	Mem412[ss:fp - 0x0006:word16] = Mem409[ds_404:0x29DF:word16]
	selector ds_413 = fn0800_BA67(ds_404, ptrArg00, wArg02)
	Mem418[ss:fp - 0x0004:word16] = Mem412[ds_413:0x29E1:word16]
	Mem421[ss:fp - 0x0006:word16] = Mem418[ds_413:0x29DF:word16]
	Mem425[ss:fp - 0x0008:word16] = 0x524E
	Mem427[ss:fp - 0x000A:word16] = 0x4300
	selector ds_428 = fn0800_409C(ds_413, wArg00, wArg02, wArg04, wArg06)
	Mem433[ss:fp - 0x0004:word16] = Mem427[ds_428:0x29E1:word16]
	Mem436[ss:fp - 0x0006:word16] = Mem433[ds_428:0x29DF:word16]
	Mem439[ss:fp - 0x0008:word16] = Mem436[ds_428:0x2A09:word16]
	Mem442[ss:fp - 0x000A:word16] = Mem439[ds_428:0x2A07:word16]
	selector ds_443 = fn0800_409C(ds_428, wArg00, wArg02, wArg04, wArg06)
	Mem448[ss:fp - 0x0004:word16] = Mem442[ds_443:0x2A09:word16]
	Mem451[ss:fp - 0x0006:word16] = Mem448[ds_443:0x2A07:word16]
	Mem454[ss:fp - 0x0008:word16] = Mem451[ds_443:0x29E1:word16]
	Mem457[ss:fp - 0x000A:word16] = Mem454[ds_443:0x29DF:word16]
	Mem460[ss:fp - 0x000C:word16] = Mem457[ds_443:0x29E5:word16]
	Mem463[ss:fp - 0x000E:word16] = Mem460[ds_443:0x29E3:word16]
	fn0800_3B0A(bp, ds_443, wArg08, wArg0A, out ds_149)
	dx = 0x4300
	si_108 = 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bp:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F5E:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bp:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F54:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bp:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F49:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bp:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F23:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0FF4:
	si_108 = fn0800_6AD4(ds_149, out ds_149)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EE5:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1007:
	Mem312[ss:fp - 0x0004:word16] = Mem155[ds_149:0x29E1:word16]
	Mem315[ss:fp - 0x0006:word16] = Mem312[ds_149:0x29DF:word16]
	word16 ax_317 = fn0800_4194(ds_149, wArg00, wArg02, out ds_149)
	Mem319[ds_149:0x2A05:word16] = dx
	Mem320[ds_149:0x2A03:word16] = ax_317
	word16 ax_321 = Mem320[ds_149:0x2A05:word16]
	dx = Mem320[ds_149:0x2A03:word16]
	branch ax_321 <u Mem320[ds_149:0x2A09:word16] l0800_1049
// DataOut: bp ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1029:
	branch ax_321 != Mem320[ds_149:0x2A09:word16] l0800_1031
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_102B:
	branch dx <u Mem320[ds_149:0x2A07:word16] l0800_1049
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1031:
	branch Mem320[ds_149:0x2A15:word16] != 0x0000 l0800_1049
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1038:
	dx = Mem320[ds_149:0x2A07:word16]
	Mem344[ds_149:0x2A05:word16] = Mem320[ds_149:0x2A09:word16]
	Mem345[ds_149:0x2A03:word16] = dx
	si_108 = 0x0003
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1049:
	branch si_108 != 0x0004 l0800_105C
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_104E:
	dx = Mem320[ds_149:0x2A07:word16]
	Mem337[ds_149:0x2A05:word16] = Mem320[ds_149:0x2A09:word16]
	Mem338[ds_149:0x2A03:word16] = dx
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0ED6:
	si_108 = 0x000E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EC9:
	si_108 = 0x0003
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_105C:
	branch Mem155[ds_149:0x427E:byte] == 0x00 l0800_10B7
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1063:
	branch si_108 == 0x0003 l0800_106D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1068:
	branch si_108 != 0x0004 l0800_10B7
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_106D:
	dx = Mem155[ds_149:0x2A07:word16]
	Mem241[ds_149:0x2A05:word16] = Mem155[ds_149:0x2A09:word16]
	Mem242[ds_149:0x2A03:word16] = dx
	Mem245[ss:fp - 0x0004:word16] = Mem242[ds_149:0x29E5:word16]
	Mem248[ss:fp - 0x0006:word16] = Mem245[ds_149:0x29E3:word16]
	selector ds_249 = fn0800_BA67(ds_149, ptrArg00, wArg02)
	Mem254[ss:fp - 0x0004:word16] = Mem248[ds_249:0x29E1:word16]
	Mem257[ss:fp - 0x0006:word16] = Mem254[ds_249:0x29DF:word16]
	selector ds_258 = fn0800_BA67(ds_249, ptrArg00, wArg02)
	Mem263[ss:fp - 0x0004:word16] = Mem257[ds_258:0x2A09:word16]
	Mem266[ss:fp - 0x0006:word16] = Mem263[ds_258:0x2A07:word16]
	Mem269[ss:fp - 0x0008:word16] = Mem266[ds_258:0x29E1:word16]
	Mem272[ss:fp - 0x000A:word16] = Mem269[ds_258:0x29DF:word16]
	Mem275[ss:fp - 0x000C:word16] = Mem272[ds_258:0x29E5:word16]
	Mem278[ss:fp - 0x000E:word16] = Mem275[ds_258:0x29E3:word16]
	fn0800_3B0A(bp, ds_258, wArg08, wArg0A, out ds_149)
	si_108 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10B7:
	Mem187[ss:fp - 0x0004:word16] = Mem155[ds_149:0x29E5:word16]
	Mem190[ss:fp - 0x0006:word16] = Mem187[ds_149:0x29E3:word16]
	byte dl_191
	word16 di_192
	selector ds_193
	fn0800_A614(ds_149, ptrArg00, wArg02, out dl_191, out di_192, out ds_193)
	Mem199[ss:fp - 0x0004:word16] = Mem190[ds_193:0x29E1:word16]
	Mem202[ss:fp - 0x0006:word16] = Mem199[ds_193:0x29DF:word16]
	byte dl_203
	fn0800_A614(ds_193, ptrArg00, wArg02, out dl_203, out di_106, out ds_107)
	branch si_108 <= 0x0002 l0800_10E5
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10E5:
	si_108 = fn0800_37DF(si_108, ds_107, out ds_107)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10D8:
	Mem226[ss:fp - 0x0004:word16] = ds_107
	Mem230[ss:fp - 0x0006:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_107, ptrArg00)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10E8:
	Mem216[ss:fp - 0x0004:word16] = ds_107
	Mem219[ss:fp - 0x0006:word16] = 0x4541
	Mem221[ss:fp - 0x0008:word16] = si_108
	fn0800_0ABC(bp, di_106, ds_107, wArg00, wArg02, wArg04)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E86:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)



byte fn0800_112D(word16 bp, word16 si, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es rax rbp rbx rcx rdi rdx
// Preserved: si sp
fn0800_112D_entry:
	*bpOut = bp
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_112D:
	word16 di_31
	fn0800_B2EF(ds, 0x08F0, ds, out di_31)
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_116F
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Local -000A(16)

l0800_1160:
	word16 di_311
	fn0800_B2EF(ds, 0x08FE, ds, out di_311)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_116F:
	word16 di_168
	word16 si_117 = fn0800_B2EF(ds, 0x0913, ds, out di_168)
	branch Mem0[ds:0x2A25:word16] == 0x0001 l0800_1184
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_1184:
	si_117 = fn0800_3678(ds, DPB(ptrLoc06, 0x427E, 0), ds, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0913 -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1181:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0913 -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12C2:
	Mem62[ss:fp - 0x0004:word16] = ds
	Mem66[ss:fp - 0x0006:word16] = 0x4541
	byte dl_69
	selector ds_70
	branch fn0800_2DE2(si_117, ds, ptrArg00, wArg02, out dl_69, out ds_70) == 0x0000 l0800_12D4
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12D4:
	return dl_69
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

fn0800_112D_exit:
// DataOut: bp dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> ax:<invalid> si:si es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

l0800_12D1:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1192:
	fn0800_3764(ds_70)
	branch fn0800_388C(si_117, di_168, ds_70, out si_117, out ds) != 0x0000 l0800_119F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_119F:
	Mem85[ss:fp - 0x0004:word16] = ds
	Mem88[ss:fp - 0x0006:word16] = 0x4541
	fn0800_0C93(ds, wArg00, wArg02)
	Mem94[ss:fp - 0x0004:word16] = Mem88[ds:0x29E5:word16]
	Mem97[ss:fp - 0x0006:word16] = Mem94[ds:0x29E3:word16]
	selector ds_116
	word16 ax_99 = fn0800_4194(ds, wArg00, wArg02, out ds_116)
	Mem102[ds_116:0x2A05:word16] = dx
	Mem103[ds_116:0x2A03:word16] = ax_99
	CZ = DPB(CZ, false, 0) (alias)
	branch CZ l0800_11CF
// DataOut: ax bp ds si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11C3:
	branch false l0800_11CA
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11C5:
	branch ax_99 >=u 0x0012 l0800_11CF
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11CF:
	word16 bx_216 = Mem103[ds_116:0x2A23:word16]
	CZ = cond(bx_216 - 0x0005) (alias)
	branch bx_216 >u 0x0005 l0800_1243
// DataOut: bp bx ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11D8:
	switch (bx_216 << 0x0001) { l0800_1230 l0800_11DF l0800_123E l0800_1237 l0800_1208 l0800_1229 }
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1229:
	si_117 = fn0800_4BB1(bp, ds_116, out bp, out ds_116)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1208:
	Mem258[ss:fp - 0x0004:word16] = Mem103[ds_116:0x29E5:word16]
	Mem261[ss:fp - 0x0006:word16] = Mem258[ds_116:0x29E3:word16]
	selector ds_262
	branch fn0800_3F0A(ds_116, wArg00, wArg02, out ds_262) != 0x4D5A l0800_1222
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1222:
	si_117 = fn0800_4B97(bp, ds_262, out bp, out ds_116)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:0x08 ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_121B:
	si_117 = fn0800_46FE(bp, ds_262, out ds_116)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:0x08 ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1237:
	si_117 = fn0800_518F(bp, ds_116, out bp, out ds_116)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_123E:
	si_117 = fn0800_51A9(bp, ds_116, out ds_116)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11DF:
	Mem226[ss:fp - 0x0004:word16] = Mem103[ds_116:0x29E5:word16]
	Mem229[ss:fp - 0x0006:word16] = Mem226[ds_116:0x29E3:word16]
	word16 di_230
	word16 ax_237 = fn0800_8CAA(ax_99, 0x08, fn0800_3F58(ds_116, wArg00, wArg02, out di_230, out ds_116), si, out dx)
	branch dx != 0x0052 l0800_1203
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11F7:
	branch ax_237 != 0x4E43 l0800_1203
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1203:
	si_117 = 0x0007
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11FC:
	si_117 = fn0800_5374(bp, ds_116, out ds_116)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1230:
	si_117 = fn0800_4C55(bp, ds_116, out ds_116)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11CA:
	si_117 = 0x0007
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1243:
	Mem122[ss:fp - 0x0004:word16] = Mem103[ds_116:0x29E1:word16]
	Mem125[ss:fp - 0x0006:word16] = Mem122[ds_116:0x29DF:word16]
	selector ds_126
	word16 ax_127 = fn0800_4194(ds_116, wArg00, wArg02, out ds_126)
	Mem130[ds_126:0x2A09:word16] = dx
	Mem131[ds_126:0x2A07:word16] = ax_127
	Mem134[ss:fp - 0x0004:word16] = Mem131[ds_126:0x29E5:word16]
	Mem137[ss:fp - 0x0006:word16] = Mem134[ds_126:0x29E3:word16]
	selector ds_138
	word16 ax_139 = fn0800_4194(ds_126, wArg00, wArg02, out ds_138)
	Mem141[ds_138:0x2A05:word16] = dx
	Mem142[ds_138:0x2A03:word16] = ax_139
	branch si_117 == 0x0000 l0800_127F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> di:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1271:
	dx = Mem142[ds_138:0x2A03:word16]
	Mem213[ds_138:0x2A09:word16] = Mem142[ds_138:0x2A05:word16]
	Mem214[ds_138:0x2A07:word16] = dx
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> di:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_127F:
	Mem151[ss:fp - 0x0004:word16] = Mem142[ds_138:0x29E5:word16]
	Mem154[ss:fp - 0x0006:word16] = Mem151[ds_138:0x29E3:word16]
	byte dl_155
	word16 di_156
	selector ds_157
	fn0800_A614(ds_138, ptrArg00, wArg02, out dl_155, out di_156, out ds_157)
	Mem163[ss:fp - 0x0004:word16] = Mem154[ds_157:0x29E1:word16]
	Mem166[ss:fp - 0x0006:word16] = Mem163[ds_157:0x29DF:word16]
	byte dl_167
	fn0800_A614(ds_157, ptrArg00, wArg02, out dl_167, out di_168, out ds)
	branch Mem166[ds:0x2A25:word16] == 0x0002 l0800_12A6
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> di:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12A2:
	branch si_117 == 0x0000 l0800_12B3
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12B3:
	si_117 = fn0800_37DF(si_117, ds, out ds)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12A6:
	Mem197[ss:fp - 0x0004:word16] = ds
	Mem201[ss:fp - 0x0006:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds, ptrArg00)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12B6:
	Mem183[ss:fp - 0x0004:word16] = ds
	Mem186[ss:fp - 0x0006:word16] = 0x4541
	Mem188[ss:fp - 0x0008:word16] = si_117
	fn0800_0ABC(bp, di_168, ds, wArg00, wArg02, wArg04)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_119C:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)



byte fn0800_12E2(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_12E2_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_12E2:
	word16 di_37
	fn0800_B2EF(ds, 0x0916, ds, out di_37)
	word16 bp_1218 = fp - 2
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_1321
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0090(16) Local -0092(16) Local -0094(16) Local -0096(16)

l0800_1312:
	word16 di_1497
	fn0800_B2EF(ds, 0x0925, ds, out di_1497)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):<invalid> -144(fp):<invalid> -142(fp):0x4348 -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0090(16) Local -0094(16) Local -0096(16)

l0800_1321:
	word16 di_47
	word16 si_48 = fn0800_B2EF(ds, 0x093A, ds, out di_47)
	word16 dx_61
	word16 di_1306
	selector ds_1304
	word16 ax_64 = fn0800_AA7E(si_48, di_47, ds, 0x4348, ds, 0x093D, ds, out dx_61, out di_1306, out ds_1304)
	Mem66[ds_1304:0x29D1:word16] = dx_61
	Mem67[ds_1304:0x29CF:word16] = ax_64
	word16 ax_68 = Mem67[ds_1304:0x2A25:word16]
	branch ax_68 == 0x0003 l0800_1353
// DataOut: ax bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -008E(16) Local -0090(16) Local -0092(16) Local -0094(16) Local -0096(16)

l0800_1353:
	branch (Mem67[ds_1304:0x29CF:word16] | Mem67[ds_1304:0x29D1:word16]) == 0x0000 l0800_135F
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -008E(16) Local -0092(16)

l0800_135F:
	word16 si_1482
	word16 di_1483
	fn0800_0D24(ds_1304, 0x0007, DPB(ptrLoc8E, 0x4348, 0), ds_1304, out si_1482, out di_1483, out ds_1304)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -008E(16)

l0800_135C:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -008E(16)

l0800_134B:
	branch ax_68 == 0x0004 l0800_1371
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -008E(16) Local -0090(16) Local -0094(16) Local -0096(16)

l0800_1371:
	branch (Mem67[ds_1304:0x29CF:word16] | Mem67[ds_1304:0x29D1:word16]) == 0x0000 l0800_13C6
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0090(16) Local -0094(16) Local -0096(16)

l0800_137A:
	branch fn0800_3E27(ds_1304, Mem67[ds_1304:0x29CF:word16], Mem67[ds_1304:0x29D1:word16], out di_1306, out ds_1304) != 0x4D5A l0800_13BA
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0094(16) Local -0096(16)

l0800_13BA:
	Mem1466[ds_1304:0x29D1:word16] = 0x0000
	Mem1467[ds_1304:0x29CF:word16] = 0x0000
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> ah:<invalid> cl:0x08 dx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0094(16)

l0800_138D:
	fn0800_ACB3(ds_1304, DPB(ptrLoc94, Mem67[ds_1304:0x29CF:word16], 0), Mem67[ds_1304:0x29D1:word16], 0x0000, 0x0000, 0x0002, out ds_1304)
	word16 ax_1461 = fn0800_AD2F(ds_1304, DPB(ptrLoc8E, Mem67[ds_1304:0x29CF:word16], 0), Mem67[ds_1304:0x29D1:word16])
	Mem1464[ds_1304:0x29ED:word16] = dx_61
	Mem1465[ds_1304:0x29EB:word16] = ax_1461
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> ah:<invalid> cl:0x08 dx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0094(16)

l0800_13C6:
	branch (Mem67[ds_1304:0x29CF:word16] | Mem67[ds_1304:0x29D1:word16]) != 0x0000 l0800_13F2
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> es:<invalid> al:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0094(16)

l0800_13CF:
	word16 di_1412
	fn0800_4234(si_48, di_1306, ds_1304, 0x4348, ds_1304, 0x0941, ds_1304, out di_1412, out ds_1304)
	Mem1417[ds_1304:0x29D1:word16] = dx_61
	Mem1418[ds_1304:0x29CF:word16] = 0x4348
	Mem1419[ds_1304:0x29ED:word16] = 0x0000
	Mem1420[ds_1304:0x29EB:word16] = 0x0000
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> es:<invalid> al:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0094(16)

l0800_13F2:
	fn0800_2CCF(ds_1304, DPB(ptrLoc92, fp - 0x0068, 0), 0x0004, 0x0000)
	fn0800_2CCF(ds_1304, DPB(ptrLoc92, fp - 0x0068, 0), 0x0004, 0x0000)
	selector ds_1383
	fn0800_4152(ds_1304, fp - 0x0070, ss, 0x000C, 0x0000, Mem67[ds_1304:0x29CF:word16], Mem67[ds_1304:0x29D1:word16], out ds_1383)
	ds_1304 = fn0800_409C(ds_1383, Mem67[ds_1383:0x29EB:word16], Mem67[ds_1383:0x29ED:word16], Mem67[ds_1383:0x29CF:word16], Mem67[ds_1383:0x29D1:word16])
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -008E(16)

l0800_1350:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -008E(16)

l0800_1478:
	selector ds_108 = fn0800_1CF6(fp - 2, ds_1304, 0x0000)
	word16 si_110 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:<invalid> bx:<invalid> es:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1527:
	Mem131[ss:fp - 0x008C:word16] = ds_108
	Mem135[ss:fp - 0x008E:word16] = 0x4541
	byte dl_138
	branch fn0800_2DE2(si_110, ds_108, ptrArg00, wArg02, out dl_138, out ds_108) == 0x0000 l0800_1539
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> Sequence es:bx:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1536:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> Sequence es:bx:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1486:
	Mem1153[ss:fp - 0x008C:word16] = ds_108
	Mem1156[ss:fp - 0x008E:word16] = 0x4541
	Mem1158[ss:fp - 0x0090:word16] = ss
	Mem1161[ss:fp - 0x0092:word16] = bp_1218 - 0x006E
	fn0800_3509(wArg00, wArg02, wArg04, wArg06)
	Mem1165[ss:fp - 0x008C:word16] = ds_108
	Mem1168[ss:fp - 0x008E:word16] = 0x4541
	Mem1170[ss:fp - 0x0090:word16] = ss
	Mem1173[ss:fp - 0x0092:word16] = bp_1218 - 0x0084
	fn0800_35A3(wArg00, wArg02, wArg04, wArg06)
	Mem1180[ss:fp - 0x008C:word16] = ss
	Mem1183[ss:fp - 0x008E:word16] = bp_1218 - 0x006E
	word16 dx_1184
	word16 ax_1185 = fn0800_283D(ds_108, ptrArg00, wArg02, out dx_1184)
	Mem1187[ss:bp_1218 - 0x0002:word16] = dx_1184
	Mem1188[ss:bp_1218 - 0x0004:word16] = ax_1185
	branch (ax_1185 | dx_1184) != 0x0000 l0800_14CD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> Sequence es:bx:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14BC:
	Mem1262[ss:fp - 0x008C:word16] = ss
	Mem1265[ss:fp - 0x008E:word16] = bp_1218 - 0x006E
	word16 dx_1266
	word16 ax_1268 = fn0800_1F5C(bp_1218, ds_108, ptrArg00, wArg02, out dx_1266, out ds_108)
	Mem1271[ss:bp_1218 - 0x0002:word16] = dx_1266
	Mem1272[ss:bp_1218 - 0x0004:word16] = ax_1268
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14CD:
	Mem1198[ss:fp - 0x008C:word16] = Mem1188[ss:bp_1218 - 0x0002:word16]
	Mem1201[ss:fp - 0x008E:word16] = Mem1198[ss:bp_1218 - 0x0004:word16]
	Mem1203[ss:fp - 0x0090:word16] = ss
	Mem1206[ss:fp - 0x0092:word16] = bp_1218 - 0x0084
	word16 dx_1207
	word16 ax_1208 = fn0800_2931(ptrArg00, ptrArg04, wArg06, out dx_1207)
	Mem1210[ss:bp_1218 - 0x0006:word16] = dx_1207
	Mem1211[ss:bp_1218 - 0x0008:word16] = ax_1208
	word16 ax_1212 = ax_1208 | dx_1207
	branch ax_1212 != 0x0000 l0800_14FD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14FD:
	Mem1252[ss:fp - 0x008C:word16] = Mem1211[ss:bp_1218 - 0x0006:word16]
	Mem1255[ss:fp - 0x008E:word16] = Mem1252[ss:bp_1218 - 0x0008:word16]
	bp_1218 = fn0800_23EC(bp_1218, ds_108, ptrArg00, wArg02, out ds_108)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14E9:
	Mem1239[ss:fp - 0x008C:word16] = Mem1211[ss:bp_1218 - 0x0002:word16]
	Mem1242[ss:fp - 0x008E:word16] = Mem1239[ss:bp_1218 - 0x0004:word16]
	Mem1244[ss:fp - 0x0090:word16] = ss
	ax_1212 = bp_1218 - 0x0084
	Mem1247[ss:fp - 0x0092:word16] = ax_1212
	fn0800_2085(ds_108, ptrArg00, wArg02, ptrArg04)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1509:
	si_110 = 0x0001
	branch (DPB(ax_1212, 0x00, 8) << 0x08) + DPB(dx_1207, 0x00, 8) >=u 0xFF8C l0800_1539
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1539:
	branch si_110 != 0x0000 l0800_1551
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1551:
	selector ds_214
	word16 bp_215 = fn0800_1E5E(bp_1218, si_110, ds_108, out ds_214)
	Mem218[ss:fp - 0x008C:word16] = 0x0001
	selector ds_220 = fn0800_1CF6(bp_215, ds_214, wArg00)
	Mem224[ss:fp - 0x008C:word16] = 0x0001
	Mem229[ss:fp - 0x008E:word16] = 0x0000
	fn0800_2DBF(ds_220, wArg00, wArg02)
	word16 dx_233 = Mem229[ds_220:0x29CF:word16]
	Mem235[ds_220:0x29E1:word16] = Mem229[ds_220:0x29D1:word16]
	Mem236[ds_220:0x29DF:word16] = dx_233
	Mem238[ss:fp - 0x008C:word16] = ds_220
	Mem241[ss:fp - 0x008E:word16] = 0x0945
	Mem243[ss:fp - 0x0090:word16] = ds_220
	Mem246[ss:fp - 0x0092:word16] = 0x4477
	word16 di_249
	word16 si_250 = fn0800_37BE(ds_220, wArg00, wArg02, wArg04, wArg06, out di_249)
	Mem254[ss:fp - 0x008C:word16] = ds_220
	Mem257[ss:fp - 0x008E:word16] = 0x0941
	Mem259[ss:fp - 0x0090:word16] = ds_220
	Mem262[ss:fp - 0x0092:word16] = 0x4477
	word16 di_263
	selector ds_264
	word16 si_265 = fn0800_4234(si_250, di_249, ds_220, wArg00, wArg02, wArg04, wArg06, out di_263, out ds_264)
	Mem268[ds_264:0x29DD:word16] = dx_233
	Mem269[ds_264:0x29DB:word16] = 0x4477
	ui32 dx_bp_234 = SEQ(dx_233, bp_215)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1897:
	Mem289[ss:fp - 0x008C:word16] = ds_264
	Mem292[ss:fp - 0x008E:word16] = 0x4541
	byte dl_293
	branch fn0800_2DE2(si_265, ds_264, ptrArg00, wArg02, out dl_293, out ds_264) == 0x0000 l0800_18A9
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_18A6:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_15A3:
	Mem363[ss:fp - 0x008C:word16] = ds_264
	Mem366[ss:fp - 0x008E:word16] = 0x093D
	Mem368[ss:fp - 0x0090:word16] = ds_264
	Mem371[ss:fp - 0x0092:word16] = 0x4541
	word16 di_372
	selector ds_373
	fn0800_4234(si_265, di_263, ds_264, wArg00, wArg02, wArg04, wArg06, out di_372, out ds_373)
	Mem377[ds_373:0x29E5:word16] = dx_233
	Mem378[ds_373:0x29E3:word16] = 0x4541
	Mem380[ss:fp - 0x008C:word16] = ds_373
	Mem383[ss:fp - 0x008E:word16] = 0x4541
	Mem385[ss:fp - 0x0090:word16] = ss
	Mem388[ss:fp - 0x0092:word16] = bp_215 - 0x006E
	fn0800_3509(wArg00, wArg02, wArg04, wArg06)
	Mem392[ss:fp - 0x008C:word16] = ds_373
	Mem395[ss:fp - 0x008E:word16] = 0x4541
	Mem397[ss:fp - 0x0090:word16] = ss
	Mem400[ss:fp - 0x0092:word16] = bp_215 - 0x0084
	ui32 dx_bp_403 = DPB(dx_bp_234, fn0800_35A3(wArg00, wArg02, wArg04, wArg06), 16)
	Mem407[ss:fp - 0x008C:word16] = ds_373
	Mem410[ss:fp - 0x008E:word16] = 0x4541
	fn0800_0C93(ds_373, wArg00, wArg02)
	Mem414[ss:fp - 0x008C:word16] = ss
	Mem417[ss:fp - 0x008E:word16] = bp_215 - 0x006E
	word16 dx_418
	word16 ax_419 = fn0800_283D(ds_373, ptrArg00, wArg02, out dx_418)
	Mem423[ss:fp - 0x008C:word16] = dx_418
	Mem425[ss:fp - 0x008E:word16] = ax_419
	Mem427[ss:fp - 0x0090:word16] = ss
	Mem430[ss:fp - 0x0092:word16] = bp_215 - 0x0084
	word16 dx_432
	word16 ax_433 = fn0800_2931(ptrArg00, ptrArg04, wArg06, out dx_432)
	Mem436[ss:bp_215 - 0x0006:word16] = dx_432
	Mem437[ss:bp_215 - 0x0008:word16] = ax_433
	Mem440[ss:fp - 0x008C:word16] = Mem437[ds_373:0x29D1:word16]
	Mem443[ss:fp - 0x008E:word16] = Mem440[ds_373:0x29CF:word16]
	selector ds_444
	fn0800_4194(ds_373, wArg00, wArg02, out ds_444)
	Mem453[ds_444:0x29E9:word16] = SLICE(dx_bp_403 - 0x0000006E, word16, 16)
	Mem454[ds_444:0x29E7:word16] = (word16) (dx_bp_403 - 0x0000006E)
	int32 dx_ax_456 = (int32) Mem454[ds_444:0x29E9:word16]
	word16 dx_460
	word16 ax_461 = fn0800_8C8A((word16) dx_ax_456, 0x08, SLICE(dx_ax_456, word16, 16), bp, out dx_460)
	ptr32 es_di_462 = Mem454[ss:bp_215 - 0x0008:segptr32]
	Mem466[ss:fp - 0x008C:word16] = ax_461
	word16 di_1148 = (word16) es_di_462
	selector es_1134 = SLICE(es_di_462, selector, 16)
	word16 cx_1150 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1632:
	branch cx_1150 == 0x0000 l0800_1634
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1632_1:
	di_1148 = di_1148 + 0x0001
	cx_1150 = cx_1150 - 0x0001
	branch 0x00 == Mem466[es_1134:di_1148:byte] l0800_1632
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1634:
	word16 cx_1144 = ~cx_1150
	word16 di_1130 = di_1148 - cx_1144
	bool Z_1138 = (bool) cond(di_1130)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163A:
	branch cx_1144 == 0x0000 l0800_163C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163A_2:
	Z_1138 = (bool) cond(0x00 - Mem466[es_1134:di_1130:byte]) (alias)
	di_1130 = di_1130 + 0x0001
	cx_1144 = cx_1144 - 0x0001
	branch 0x00 == Mem466[es_1134:di_1130:byte] l0800_163A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163C:
	branch Z_1138 l0800_1645
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163E:
	di_1130 = 0x0001
	es_1134 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1645:
	Mem521[es_1134:di_1130:byte] = (byte) Mem466[ss:fp - 0x008C:word16]
	ptr32 es_di_525 = Mem521[ss:bp_215 - 0x0008:segptr32]
	Mem529[ss:fp - 0x008C:word16] = (word16) (int32) Mem521[ds_444:0x29E9:word16]
	word16 di_1126 = (word16) es_di_525
	selector es_1112 = SLICE(es_di_525, selector, 16)
	word16 cx_1128 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_165C:
	branch cx_1128 == 0x0000 l0800_165E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_165C_1:
	di_1126 = di_1126 + 0x0001
	cx_1128 = cx_1128 - 0x0001
	branch 0x00 == Mem529[es_1112:di_1126:byte] l0800_165C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_165E:
	word16 cx_1122 = ~cx_1128
	word16 di_1108 = di_1126 - cx_1122
	bool Z_1116 = (bool) cond(di_1108)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1664:
	branch cx_1122 == 0x0000 l0800_1666
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1664_2:
	Z_1116 = (bool) cond(0x00 - Mem529[es_1112:di_1108:byte]) (alias)
	di_1108 = di_1108 + 0x0001
	cx_1122 = cx_1122 - 0x0001
	branch 0x00 == Mem529[es_1112:di_1108:byte] l0800_1664
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1666:
	branch Z_1116 l0800_166F
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1668:
	di_1108 = 0x0001
	es_1112 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_166F:
	Mem585[es_1112:di_1108 + 0x0001:byte] = (byte) Mem529[ss:fp - 0x008C:word16]
	word16 dx_586 = Mem585[ds_444:0x29E9:word16]
	word16 dx_590
	word16 ax_591 = fn0800_8C8A(Mem585[ds_444:0x29E7:word16], 0x08, dx_586, bp, out dx_590)
	ptr32 es_di_592 = Mem585[ss:bp_215 - 0x0008:segptr32]
	Mem596[ss:fp - 0x008C:word16] = ax_591
	ui32 dx_bp_587 = SEQ(dx_586, bp_215)
	word16 di_1104 = (word16) es_di_592
	selector es_1090 = SLICE(es_di_592, selector, 16)
	word16 cx_1106 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_168E:
	branch cx_1106 == 0x0000 l0800_1690
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_168E_1:
	di_1104 = di_1104 + 0x0001
	cx_1106 = cx_1106 - 0x0001
	branch 0x00 == Mem596[es_1090:di_1104:byte] l0800_168E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1690:
	word16 cx_1100 = ~cx_1106
	word16 di_1086 = di_1104 - cx_1100
	bool Z_1094 = (bool) cond(di_1086)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1696:
	branch cx_1100 == 0x0000 l0800_1698
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1696_2:
	Z_1094 = (bool) cond(0x00 - Mem596[es_1090:di_1086:byte]) (alias)
	di_1086 = di_1086 + 0x0001
	cx_1100 = cx_1100 - 0x0001
	branch 0x00 == Mem596[es_1090:di_1086:byte] l0800_1696
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1698:
	branch Z_1094 l0800_16A1
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_169A:
	di_1086 = 0x0001
	es_1090 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16A1:
	Mem651[es_1090:di_1086 + 0x0002:byte] = (byte) Mem596[ss:fp - 0x008C:word16]
	ptr32 es_di_652 = Mem651[ss:bp_215 - 0x0008:segptr32]
	word16 di_1082 = (word16) es_di_652
	selector es_1068 = SLICE(es_di_652, selector, 16)
	word16 cx_1084 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16B3:
	branch cx_1084 == 0x0000 l0800_16B5
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16B3_1:
	di_1082 = di_1082 + 0x0001
	cx_1084 = cx_1084 - 0x0001
	branch 0x00 == Mem651[es_1068:di_1082:byte] l0800_16B3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16B5:
	word16 cx_1078 = ~cx_1084
	word16 di_1064 = di_1082 - cx_1078
	bool Z_1072 = (bool) cond(di_1064)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BB:
	branch cx_1078 == 0x0000 l0800_16BD
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BB_2:
	Z_1072 = (bool) cond(0x00 - Mem651[es_1068:di_1064:byte]) (alias)
	di_1064 = di_1064 + 0x0001
	cx_1078 = cx_1078 - 0x0001
	branch 0x00 == Mem651[es_1068:di_1064:byte] l0800_16BB
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BD:
	branch Z_1072 l0800_16C6
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BF:
	di_1064 = 0x0001
	es_1068 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16C6:
	byte dl_705 = Mem651[ds_444:0x29E7:byte]
	Mem709[es_1068:di_1064 + 0x0003:byte] = dl_705
	Mem715[ds_444:0x2A05:word16] = 0x0000
	Mem716[ds_444:0x2A03:word16] = 0x0000
	Mem720[ss:fp - 0x008C:word16] = Mem716[ds_444:0x29E5:word16]
	Mem723[ss:fp - 0x008E:word16] = Mem720[ds_444:0x29E3:word16]
	word16 dx_1026 = DPB(dx_590, dl_705, 0)
	selector ds_724
	word16 ax_725 = fn0800_4194(ds_444, wArg00, wArg02, out ds_724)
	Mem727[ds_724:0x2A09:word16] = dx_1026
	Mem728[ds_724:0x2A07:word16] = ax_725
	Mem733[ss:fp - 0x008C:word16] = 0x0000
	Mem736[ss:fp - 0x008E:word16] = Mem733[ds_724:0x29E9:word16]
	Mem739[ss:fp - 0x0090:word16] = Mem736[ds_724:0x29E7:word16]
	Mem742[ss:fp - 0x0092:word16] = Mem739[ds_724:0x29E1:word16]
	Mem745[ss:fp - 0x0094:word16] = Mem742[ds_724:0x29DF:word16]
	ui32 dx_bp_1001 = DPB(dx_bp_587, dl_705, 16)
	word16 di_1014 = 0x0001
	si_265 = 0x0000
	selector ds_1041
	word16 ax_748 = fn0800_ACB3(ds_724, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_1041)
	branch Mem745[ds_1041:0x2A09:word16] >=u 0x0000 l0800_171B
// DataOut: bp di ds si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_171B:
	branch Mem745[ds_1041:0x2A09:word16] >u 0x0000 l0800_1724
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_171D:
	branch Mem745[ds_1041:0x2A07:word16] <=u 0x0012 l0800_17A2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1724:
	branch Mem745[ds_1041:0x2A21:word16] == 0x0000 l0800_17A2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_172B:
	Mem966[ss:fp - 0x008C:word16] = Mem745[ds_1041:0x29E5:word16]
	Mem969[ss:fp - 0x008E:word16] = Mem966[ds_1041:0x29E3:word16]
	word16 dx_972 = fn0800_3F58(ds_1041, wArg00, wArg02, out di_1014, out ds_1041)
	dx_bp_1001 = SEQ(dx_972, bp_215) (alias)
	word16 ax_978 = fn0800_8CAA(ax_748, 0x08, dx_972, bp, out dx_1026)
	branch dx_1026 != 0x0052 l0800_1748
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1743:
	branch ax_978 == 0x4E43 l0800_17A2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1748:
	word16 ax_1010
	Mem986[ss:fp - 0x008C:word16] = Mem969[ds_1041:0x2A09:word16]
	Mem989[ss:fp - 0x008E:word16] = Mem986[ds_1041:0x2A07:word16]
	Mem992[ss:fp - 0x0090:word16] = Mem989[ds_1041:0x2A09:word16]
	Mem995[ss:fp - 0x0092:word16] = Mem992[ds_1041:0x2A07:word16]
	ds_1041 = fn0800_75EA(bp_215, ds_1041, wArg00, wArg02, wArg04, wArg06)
	dx_1026 = Mem995[ds_1041:0x2A03:word16]
	word16 ax_998 = Mem995[ds_1041:0x2A05:word16]
	dx_bp_1001 = SEQ(dx_1026, bp_215) (alias)
	branch ax_998 <u Mem995[ds_1041:0x2A09:word16] l0800_1778
// DataOut: bp ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_176B:
	branch ax_998 != Mem995[ds_1041:0x2A09:word16] l0800_1773
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_176D:
	branch dx_1026 <u Mem995[ds_1041:0x2A07:word16] l0800_1778
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1778:
	ax_1010 = 0x0000
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1773:
	ax_1010 = 0x0001
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_177A:
	di_1014 = ax_1010
	branch ax_1010 == 0x0000 l0800_17A2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1780:
	Mem1022[ss:fp - 0x008C:word16] = 0x0001
	dx_1026 = -Mem1022[ds_1041:0x2A03:word16]
	Mem1032[ss:fp - 0x008E:word16] = -Mem1022[ds_1041:0x2A05:word16] - (dx_1026 == 0x0000)
	Mem1034[ss:fp - 0x0090:word16] = dx_1026
	Mem1037[ss:fp - 0x0092:word16] = Mem1034[ds_1041:0x29E1:word16]
	Mem1040[ss:fp - 0x0094:word16] = Mem1037[ds_1041:0x29DF:word16]
	fn0800_ACB3(ds_1041, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_1041)
	dx_bp_1001 = SEQ(dx_1026, bp_215) (alias)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1718:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17A2:
	branch di_1014 != 0x0000 l0800_17A9
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17A9:
	word16 ax_842 = Mem745[ds_1041:0x2A09:word16]
	word16 dx_843 = Mem745[ds_1041:0x2A07:word16]
	Mem845[ds_1041:0x2A05:word16] = ax_842
	Mem846[ds_1041:0x2A03:word16] = dx_843
	Mem849[ss:fp - 0x008C:word16] = Mem846[ds_1041:0x29E5:word16]
	Mem852[ss:fp - 0x008E:word16] = Mem849[ds_1041:0x29E3:word16]
	selector ds_853 = fn0800_BA67(ds_1041, ptrArg00, wArg02)
	branch Mem852[ds_853:0x2A09:word16] <u 0x0000 l0800_17F2
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17CC:
	branch Mem852[ds_853:0x2A09:word16] != 0x0000 l0800_17D5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17CE:
	branch Mem852[ds_853:0x2A07:word16] <u 0x0012 l0800_17F2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17D5:
	Mem939[ss:fp - 0x008C:word16] = Mem852[ds_853:0x29E5:word16]
	Mem942[ss:fp - 0x008E:word16] = Mem939[ds_853:0x29E3:word16]
	word16 di_943
	word16 dx_945 = fn0800_3F58(ds_853, wArg00, wArg02, out di_943, out ds_853)
	dx_bp_1001 = SEQ(dx_945, bp_215) (alias)
	word16 ax_951 = fn0800_8CAA(ax_842, 0x08, dx_945, bp, out dx_1026)
	branch dx_1026 != 0x0052 l0800_17F2
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17ED:
	branch ax_951 == 0x4E43 l0800_181E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17F2:
	Mem907[ss:fp - 0x008C:word16] = Mem852[ds_853:0x29D1:word16]
	Mem910[ss:fp - 0x008E:word16] = Mem907[ds_853:0x29CF:word16]
	Mem915[ss:fp - 0x0090:word16] = 0x524E
	Mem917[ss:fp - 0x0092:word16] = 0x4300
	selector ds_918 = fn0800_409C(ds_853, wArg00, wArg02, wArg04, wArg06)
	Mem923[ss:fp - 0x008C:word16] = Mem917[ds_918:0x29D1:word16]
	Mem926[ss:fp - 0x008E:word16] = Mem923[ds_918:0x29CF:word16]
	Mem929[ss:fp - 0x0090:word16] = Mem926[ds_918:0x2A09:word16]
	Mem932[ss:fp - 0x0092:word16] = Mem929[ds_918:0x2A07:word16]
	dx_1026 = 0x4300
	dx_bp_1001 = SEQ(0x4300, bp_215) (alias)
	ds_853 = fn0800_409C(ds_918, wArg00, wArg02, wArg04, wArg06)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_181E:
	Mem874[ss:fp - 0x008C:word16] = Mem852[ds_853:0x2A09:word16]
	Mem877[ss:fp - 0x008E:word16] = Mem874[ds_853:0x2A07:word16]
	Mem880[ss:fp - 0x0090:word16] = Mem877[ds_853:0x29D1:word16]
	Mem883[ss:fp - 0x0092:word16] = Mem880[ds_853:0x29CF:word16]
	Mem886[ss:fp - 0x0094:word16] = Mem883[ds_853:0x29E5:word16]
	Mem889[ss:fp - 0x0096:word16] = Mem886[ds_853:0x29E3:word16]
	fn0800_3B0A(bp_215, ds_853, wArg08, wArg0A, out ds_1041)
	si_265 = 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17A6:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_183F:
	Mem785[ss:fp - 0x008C:word16] = Mem745[ds_1041:0x29D1:word16]
	Mem788[ss:fp - 0x008E:word16] = Mem785[ds_1041:0x29CF:word16]
	Mem791[ss:fp - 0x0090:word16] = Mem788[ds_1041:0x29ED:word16]
	Mem794[ss:fp - 0x0092:word16] = Mem791[ds_1041:0x29EB:word16]
	selector ds_795 = fn0800_409C(ds_1041, wArg00, wArg02, wArg04, wArg06)
	Mem800[ss:fp - 0x008C:word16] = Mem794[ds_795:0x29E5:word16]
	Mem803[ss:fp - 0x008E:word16] = Mem800[ds_795:0x29E3:word16]
	byte dl_804
	fn0800_A614(ds_795, ptrArg00, wArg02, out dl_804, out di_263, out ds_264)
	Mem811[ss:fp - 0x008C:word16] = ds_264
	Mem814[ss:fp - 0x008E:word16] = 0x4541
	Mem816[ss:fp - 0x0090:word16] = si_265
	fn0800_0ABC(bp_215, di_263, ds_264, wArg00, wArg02, wArg04)
	dx_233 = DPB(dx_1026, 0x00, 8) (alias)
	dx_bp_234 = DPB(dx_bp_1001, 0x00, 24) (alias)
	branch dx_233 <u 0x4174 l0800_1897
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_188A:
	Mem834[ss:fp - 0x008C:word16] = ds_264
	Mem837[ss:fp - 0x008E:word16] = 0x0952
	word16 di_838
	si_265 = fn0800_B2EF(ds_264, wArg00, wArg02, out di_838)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:0x00 dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_18A9:
	Mem320[ss:fp - 0x008C:word16] = Mem292[ds_264:0x29DD:word16]
	Mem323[ss:fp - 0x008E:word16] = Mem320[ds_264:0x29DB:word16]
	byte dl_324
	word16 di_325
	selector ds_326
	fn0800_A614(ds_264, ptrArg00, wArg02, out dl_324, out di_325, out ds_326)
	Mem331[ss:fp - 0x008C:word16] = ds_326
	Mem335[ss:fp - 0x008E:word16] = 0x4477
	fn0800_8F7F(0x77, ds_326, ptrArg00)
	selector ds_340
	fn0800_1E5E(bp_215, si_265, ds_326, out ds_340)
	Mem344[ss:fp - 0x008C:word16] = Mem335[ds_340:0x29D1:word16]
	Mem347[ss:fp - 0x008E:word16] = Mem344[ds_340:0x29CF:word16]
	byte dl_348
	word16 di_349
	selector ds_350
	fn0800_A614(ds_340, ptrArg00, wArg02, out dl_348, out di_349, out ds_350)
	return dl_348
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_153D:
	Mem193[ss:fp - 0x008C:word16] = Mem135[ds_108:0x29D1:word16]
	Mem196[ss:fp - 0x008E:word16] = Mem193[ds_108:0x29CF:word16]
	byte dl_197
	word16 di_198
	selector ds_199
	fn0800_A614(ds_108, ptrArg00, wArg02, out dl_197, out di_198, out ds_199)
	return dl_197
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_12E2_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_18D9(word16 bp, selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
fn0800_18D9_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_18D9:
	word16 di_32
	word16 si_281 = fn0800_B2EF(ds, 0x096C, ds, out di_32)
	*siOut = si_281
	word16 dx_46
	word16 di_47
	selector ds_283
	word16 ax_49 = fn0800_AA7E(si_281, di_32, ds, 0x4348, ds, 0x097D, ds, out dx_46, out di_47, out ds_283)
	Mem51[ds_283:0x29D1:word16] = dx_46
	Mem52[ds_283:0x29CF:word16] = ax_49
	word16 bp_139 = fp - 2
	branch (ax_49 | dx_46) != 0x0000 l0800_192A
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0076(16) Local -007A(16)

l0800_191B:
	word16 di_282
	fn0800_0D24(ds_283, 0x0007, DPB(ptrLoc76, 0x4348, 0), ds_283, out si_281, out di_282, out ds_283)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0072 bp:fp - 2 ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):ds -118(fp):0x097D -116(fp):ds -114(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0076(16)

l0800_192A:
	selector ds_148 = fn0800_1CF6(fp - 2, ds_283, 0x0001)
	Mem75[ss:fp - 0x0074:word16] = 0x0000
	Mem78[ss:fp - 0x0076:word16] = 0x0000
	fn0800_2DBF(ds_148, wArg00, wArg02)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0072 bp:fp - 2 ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19BC:
	Mem99[ss:fp - 0x0074:word16] = ss
	Mem102[ss:fp - 0x0076:word16] = bp_139 - 0x006E
	Mem104[ss:fp - 0x0078:word16] = ss
	Mem107[ss:fp - 0x007A:word16] = bp_139 - 0x0008
	Mem109[ss:fp - 0x007C:word16] = ss
	Mem112[ss:fp - 0x007E:word16] = bp_139 - 0x0004
	selector ds_118
	branch fn0800_29C5(si_281, ds_148, ptrArg00, wArg02, ptrArg04, wArg06, ptrArg08, psegArg0A, out ds_118) == 0x0000 l0800_19D8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> al:<invalid> Sequence es:di:<invalid> di:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19D8:
	selector ds_252
	fn0800_1E5E(bp_139, si_281, ds_118, out ds_252)
	Mem256[ss:fp - 0x0074:word16] = Mem112[ds_252:0x29D1:word16]
	Mem259[ss:fp - 0x0076:word16] = Mem256[ds_252:0x29CF:word16]
	byte dl_260
	word16 di_261
	selector ds_262
	fn0800_A614(ds_252, ptrArg00, wArg02, out dl_260, out di_261, out ds_262)
	return dl_260
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp

fn0800_18D9_exit:
// DataOut: dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp

l0800_19D5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1940:
	Mem126[ss:fp - 0x0074:word16] = ss
	Mem129[ss:fp - 0x0076:word16] = bp_139 - 0x006E
	fn0800_0C93(ds_118, wArg00, wArg02)
	Mem134[ss:fp - 0x0074:word16] = Mem129[ss:bp_139 - 0x0006:word16]
	Mem137[ss:fp - 0x0076:word16] = Mem134[ss:bp_139 - 0x0008:word16]
	selector ds_138
	bp_139 = fn0800_23EC(bp_139, ds_118, ptrArg00, wArg02, out ds_138)
	Mem144[ss:fp - 0x0074:word16] = Mem137[ss:bp_139 - 0x0006:word16]
	Mem147[ss:fp - 0x0076:word16] = Mem144[ss:bp_139 - 0x0008:word16]
	ds_148 = fn0800_22FE(ds_138, ptrArg00, wArg02)
	ptr32 es_di_150 = Mem147[ss:bp_139 - 0x0004:segptr32]
	selector es_152 = SLICE(es_di_150, selector, 16)
	word16 di_153 = (word16) es_di_150 + 0x0002
	word16 cx_159 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_196E:
	branch cx_159 == 0x0000 l0800_1970
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_196E_1:
	di_153 = di_153 + 0x0001
	cx_159 = cx_159 - 0x0001
	branch 0x00 == Mem147[es_152:di_153:byte] l0800_196E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1970:
	word16 cx_167 = ~cx_159
	word16 di_170 = di_153 - cx_167
	bool Z_174 = (bool) cond(di_170)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1976:
	branch cx_167 == 0x0000 l0800_1978
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1976_2:
	Z_174 = (bool) cond(0x00 - Mem147[es_152:di_170:byte]) (alias)
	di_170 = di_170 + 0x0001
	cx_167 = cx_167 - 0x0001
	branch 0x00 == Mem147[es_152:di_170:byte] l0800_1976
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1978:
	branch Z_174 l0800_1981
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_197A:
	di_170 = 0x0001
	es_152 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1981:
	word16 di_194 = di_170 - 0x0001
	branch Mem147[es_152:di_194 + 0x0001:byte] != 0x00 l0800_19AD
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_198D:
	word16 dx_217 = Mem147[ds_148:0x2E51:word16]
	branch Mem147[ds_148:0x2E53:word16] != Mem147[ss:bp_139 - 0x0002:word16] l0800_19A1
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_199C:
	branch dx_217 + 0x0008 == Mem147[ss:bp_139 - 0x0004:word16] l0800_19AD
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19A1:
	Mem225[ss:fp - 0x0074:word16] = Mem147[ss:bp_139 - 0x0002:word16]
	Mem228[ss:fp - 0x0076:word16] = Mem225[ss:bp_139 - 0x0004:word16]
	ds_148 = fn0800_2201(ds_148, ptrArg00, wArg02)
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19AD:
	Mem206[ss:fp - 0x0074:word16] = ss
	Mem209[ss:fp - 0x0076:word16] = bp_139 - 0x006E
	Mem212[ss:fp - 0x0078:word16] = 0x000D
	fn0800_0ABC(bp_139, di_194, ds_148, wArg00, wArg02, wArg04)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)



byte fn0800_19EE(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_19EE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_19EE:
	word16 di_35
	word16 si_1003 = fn0800_B2EF(ds, 0x0986, ds, out di_35)
	word16 dx_49
	word16 di_50
	selector ds_1032
	word16 ax_52 = fn0800_AA7E(si_1003, di_35, ds, 0x4348, ds, 0x0997, ds, out dx_49, out di_50, out ds_1032)
	Mem54[ds_1032:0x29D1:word16] = dx_49
	Mem55[ds_1032:0x29CF:word16] = ax_52
	branch (ax_52 | dx_49) != 0x0000 l0800_1A40
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -007E(16) Local -0080(16)

l0800_1A31:
	word16 di_1031
	fn0800_0D24(ds_1032, 0x0007, DPB(ptrLoc7C, 0x4348, 0), ds_1032, out si_1003, out di_1031, out ds_1032)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0078 bp:fp - 2 ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):ds -124(fp):0x0997 -122(fp):ds -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -007E(16)

l0800_1A40:
	branch Mem55[ds_1032:0x2A27:word16] != Mem55[ds_1032:0x269A:word16] l0800_1A7D
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0078 bp:fp - 2 ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -007E(16)

l0800_1A49:
	ptr32 es_bx_1012 = Mem55[ds_1032:0x269C:segptr32]
	Mem1016[es_bx_1012 + 0x0006:word16] = ss
	Mem1017[es_bx_1012 + 0x0004:word16] = fp - 0x000E
	Mem1018[ds_1032:0x2A27:word16] = 0x0001
	Mem1019[ds_1032:0x269A:word16] = 0x0002
	Mem1020[ds_1032:0x2A1B:word16] = 0x0001
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0078 bp:fp - 2 ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -007E(16)

l0800_1A7D:
	fn0800_2DBF(ds_1032, 0x0001, 0x0000)
	selector ds_110 = fn0800_1CF6(fp - 2, ds_1032, 0x0001)
	branch Mem55[ds_110:0x2A25:word16] == 0x0007 l0800_1A9E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0078 bp:fp - 2 ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A9E:
	Mem993[ss:fp - 0x007A:word16] = ds_110
	Mem996[ss:fp - 0x007C:word16] = 0x099B
	Mem998[ss:fp - 0x007E:word16] = ds_110
	Mem1001[ss:fp - 0x0080:word16] = 0x44DC
	word16 di_1002
	si_1003 = fn0800_37BE(ds_110, wArg00, wArg02, wArg04, wArg06, out di_1002)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> si:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):0x0001 -122(fp):0x0001 -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A9B:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> si:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):0x0001 -122(fp):0x0001 -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CB4:
	Mem118[ss:fp - 0x007A:word16] = ss
	Mem121[ss:fp - 0x007C:word16] = fp - 0x0074
	Mem123[ss:fp - 0x007E:word16] = ss
	Mem126[ss:fp - 0x0080:word16] = fp - 0x000A
	Mem128[ss:fp - 0x0082:word16] = ss
	Mem131[ss:fp - 0x0084:word16] = fp - 0x0006
	selector ds_138
	branch fn0800_29C5(si_1003, ds_110, ptrArg00, wArg02, ptrArg04, wArg06, ptrArg08, psegArg0A, out ds_138) == 0x0000 l0800_1CD0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> si:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CD0:
	Mem949[ss:fp - 0x007A:word16] = Mem131[ds_138:0x29D1:word16]
	Mem952[ss:fp - 0x007C:word16] = Mem949[ds_138:0x29CF:word16]
	word16 di_954
	selector ds_955
	byte dl_953
	fn0800_A614(ds_138, ptrArg00, wArg02, out dl_953, out di_954, out ds_955)
	branch Mem952[ds_955:0x2A25:word16] != 0x0007 l0800_1CF0
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CE5:
	Mem976[ss:fp - 0x007A:word16] = ds_955
	Mem980[ss:fp - 0x007C:word16] = 0x44DC
	dl_953 = fn0800_8F7F(0xDC, ds_955, ptrArg00)
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_1CF0:
	return dl_953
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_19EE_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_1CCD:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AB1:
	Mem146[ss:fp - 0x007A:word16] = ss
	Mem149[ss:fp - 0x007C:word16] = fp - 0x0074
	fn0800_0C93(ds_138, wArg00, wArg02)
	Mem155[ss:fp - 0x007A:word16] = Mem149[ss:fp - 0x0008:word16]
	Mem158[ss:fp - 0x007C:word16] = Mem155[ss:fp - 0x000A:word16]
	selector ds_159
	word16 si_160 = fn0800_24FE(fp - 2, ds_138, ptrArg00, out ds_159)
	Mem168[ss:fp - 0x007A:word16] = 0x0000
	ptr32 es_di_169 = Mem168[ss:fp - 0x000A:segptr32]
	word16 di_1036 = (word16) es_di_169
	selector es_171 = SLICE(es_di_169, selector, 16)
	word16 cx_172 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD1:
	branch cx_172 == 0x0000 l0800_1AD3
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> es:<invalid> di:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD1_1:
	di_1036 = di_1036 + 0x0001
	cx_172 = cx_172 - 0x0001
	branch 0x00 == Mem168[es_171:di_1036:byte] l0800_1AD1
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> es:<invalid> di:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD3:
	word16 cx_182 = ~cx_172
	word16 di_1037 = di_1036 - cx_182
	bool Z_191 = (bool) cond(di_1037)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD9:
	branch cx_182 == 0x0000 l0800_1ADB
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD9_2:
	Z_191 = (bool) cond(0x00 - Mem168[es_171:di_1037:byte]) (alias)
	di_1037 = di_1037 + 0x0001
	cx_182 = cx_182 - 0x0001
	branch 0x00 == Mem168[es_171:di_1037:byte] l0800_1AD9
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1ADB:
	branch Z_191 l0800_1AE4
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1ADD:
	di_1037 = 0x0001
	es_171 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AE4:
	ptr32 es_di_219 = Mem168[ss:fp - 0x000A:segptr32]
	Mem223[ss:fp - 0x007C:word16] = (int16) Mem168[es_171:di_1037:byte] << 0x08
	word16 di_1038 = (word16) es_di_219
	selector es_221 = SLICE(es_di_219, selector, 16)
	word16 cx_229 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFB:
	branch cx_229 == 0x0000 l0800_1AFD
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFB_1:
	di_1038 = di_1038 + 0x0001
	cx_229 = cx_229 - 0x0001
	branch 0x00 == Mem223[es_221:di_1038:byte] l0800_1AFB
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFD:
	word16 cx_239 = ~cx_229
	word16 di_244 = di_1038 - cx_239
	bool Z_248 = (bool) cond(di_244)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B03:
	branch cx_239 == 0x0000 l0800_1B05
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B03_2:
	Z_248 = (bool) cond(0x00 - Mem223[es_221:di_1039:byte]) (alias)
	di_244 = di_1039 + 0x0001
	cx_239 = cx_239 - 0x0001
	word16 di_1039 = di_244
	branch 0x00 == Mem223[es_221:di_1039:byte] l0800_1B03
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B05:
	branch Z_248 l0800_1B0E
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B07:
	es_221 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B0E:
	ptr32 es_di_283 = Mem223[ss:fp - 0x000A:segptr32]
	Mem287[ss:fp - 0x007C:word16] = Mem223[ss:fp - 0x007C:word16] + DPB(es_221, 0x00, 8)
	Mem289[ss:fp - 0x007E:word16] = 0x0000
	word16 di_1040 = (word16) es_di_283
	selector es_285 = SLICE(es_di_283, selector, 16)
	word16 cx_290 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B26:
	branch cx_290 == 0x0000 l0800_1B28
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B26_1:
	di_1040 = di_1040 + 0x0001
	cx_290 = cx_290 - 0x0001
	branch 0x00 == Mem289[es_285:di_1040:byte] l0800_1B26
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B28:
	word16 cx_300 = ~cx_290
	word16 di_1041 = di_1040 - cx_300
	bool Z_309 = (bool) cond(di_1041)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B2E:
	branch cx_300 == 0x0000 l0800_1B30
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B2E_2:
	Z_309 = (bool) cond(0x00 - Mem289[es_285:di_1041:byte]) (alias)
	di_1041 = di_1041 + 0x0001
	cx_300 = cx_300 - 0x0001
	branch 0x00 == Mem289[es_285:di_1041:byte] l0800_1B2E
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B30:
	branch Z_309 l0800_1B39
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B32:
	di_1041 = 0x0001
	es_285 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B39:
	ptr32 es_di_337 = Mem289[ss:fp - 0x000A:segptr32]
	Mem341[ss:fp - 0x0080:word16] = (int16) Mem289[es_285:di_1041 + 0x0002:byte] << 0x08
	word16 di_1042 = (word16) es_di_337
	selector es_339 = SLICE(es_di_337, selector, 16)
	word16 cx_347 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B50:
	branch cx_347 == 0x0000 l0800_1B52
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B50_1:
	di_1042 = di_1042 + 0x0001
	cx_347 = cx_347 - 0x0001
	branch 0x00 == Mem341[es_339:di_1042:byte] l0800_1B50
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B52:
	word16 cx_357 = ~cx_347
	word16 di_1043 = di_1042 - cx_357
	bool Z_366 = (bool) cond(di_1043)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B58:
	branch cx_357 == 0x0000 l0800_1B5A
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B58_2:
	Z_366 = (bool) cond(0x00 - Mem341[es_339:di_1043:byte]) (alias)
	di_1043 = di_1043 + 0x0001
	cx_357 = cx_357 - 0x0001
	branch 0x00 == Mem341[es_339:di_1043:byte] l0800_1B58
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B5A:
	branch Z_366 l0800_1B63
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B5C:
	di_1043 = 0x0001
	es_339 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B63:
	word16 ax_400 = Mem341[ss:fp - 0x007E:word16] + (Mem341[ss:fp - 0x0080:word16] + DPB(es_339, 0x00, 8))
	word16 dx_405 = Mem341[ss:fp - 0x007C:word16] + (ax_400 <u 0x0000)
	Mem408[ss:fp - 0x007C:word16] = dx_405
	Mem410[ss:fp - 0x007E:word16] = ax_400
	Mem413[ss:fp - 0x0080:word16] = Mem410[ds_159:0x29D1:word16]
	Mem416[ss:fp - 0x0082:word16] = Mem413[ds_159:0x29CF:word16]
	selector ds_419
	fn0800_ACB3(ds_159, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_419)
	word16 di_388 = di_1043 - 0x0001
	branch Mem416[ds_419:0x2A25:word16] != 0x0007 l0800_1B92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B92:
	Mem496[ss:fp - 0x007A:word16] = ds_419
	selector es_497 = Mem496[ss:fp - 0x007A:selector]
	Mem502[ss:fp - 0x007A:word16] = es_497
	Mem504[ss:fp - 0x007C:word16] = 0x44DC
	word16 di_1044 = 0x427E
	word16 cx_512 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA1:
	branch cx_512 == 0x0000 l0800_1BA3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA1_1:
	di_1044 = di_1044 + 0x0001
	cx_512 = cx_512 - 0x0001
	branch 0x00 == Mem504[es_497:di_1044:byte] l0800_1BA1
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA3:
	word16 di_531 = Mem504[ss:fp - 0x007C:word16]
	selector es_534 = Mem504[ss:fp - 0x007A:selector]
	Mem539[ss:fp - 0x007A:word16] = ds_419
	word16 cx_522 = ~cx_512
	word16 cx_524 = cx_522 >>u 0x0001
	word16 si_530 = di_1044 - cx_522
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB2:
	branch cx_524 == 0x0000 l0800_1BB4
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB4:
	word16 cx_553 = cx_524 * 0x0002 + (cx_522 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB6:
	branch cx_553 == 0x0000 l0800_1BB8
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB8:
	selector ds_568 = Mem539[ss:fp - 0x007A:selector]
	branch Mem539[ds_568:0x2A25:word16] != 0x0008 l0800_1C29
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BC0:
	branch Mem539[ds_568:0x427E:byte] == 0x00 l0800_1BFC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BC7:
	branch Mem539[ss:fp - 0x0074:byte] != 0x5C l0800_1BFC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BFC:
	Mem678[ss:fp - 0x007A:word16] = ss
	Mem681[ss:fp - 0x007C:word16] = fp - 0x0074
	Mem683[ss:fp - 0x007E:word16] = ds_568
	selector es_684 = Mem683[ss:fp - 0x007E:selector]
	word16 di_1047 = 0x44DC
	word16 cx_694 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0B:
	branch cx_694 == 0x0000 l0800_1C0D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0B_1:
	di_1047 = di_1047 + 0x0001
	cx_694 = cx_694 - 0x0001
	branch 0x00 == Mem683[es_684:di_1047:byte] l0800_1C0B
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0D:
	word16 cx_704 = ~cx_694
	word16 di_1048 = di_1047 - cx_704
	bool Z_713 = (bool) cond(di_1048)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C13:
	branch cx_704 == 0x0000 l0800_1C15
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C13_2:
	Z_713 = (bool) cond(0x00 - Mem683[es_684:di_1048:byte]) (alias)
	di_1048 = di_1048 + 0x0001
	cx_704 = cx_704 - 0x0001
	branch 0x00 == Mem683[es_684:di_1048:byte] l0800_1C13
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C15:
	branch Z_713 l0800_1C1E
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C17:
	di_1048 = 0x0001
	es_684 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C1E:
	Mem740[ss:fp - 0x007E:word16] = es_684
	Mem742[ss:fp - 0x0080:word16] = di_1048 - 0x0001
	fn0800_3509(wArg00, wArg02, wArg04, wArg06)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BCD:
	Mem769[ss:fp - 0x007A:word16] = ss
	Mem772[ss:fp - 0x007C:word16] = fp - 0x0073
	Mem774[ss:fp - 0x007E:word16] = ds_568
	selector es_775 = Mem774[ss:fp - 0x007E:selector]
	word16 di_1049 = 0x44DC
	word16 cx_785 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDC:
	branch cx_785 == 0x0000 l0800_1BDE
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDC_1:
	di_1049 = di_1049 + 0x0001
	cx_785 = cx_785 - 0x0001
	branch 0x00 == Mem774[es_775:di_1049:byte] l0800_1BDC
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDE:
	word16 cx_795 = ~cx_785
	word16 di_1050 = di_1049 - cx_795
	bool Z_804 = (bool) cond(di_1050)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE4:
	branch cx_795 == 0x0000 l0800_1BE6
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE4_2:
	Z_804 = (bool) cond(0x00 - Mem774[es_775:di_1050:byte]) (alias)
	di_1050 = di_1050 + 0x0001
	cx_795 = cx_795 - 0x0001
	branch 0x00 == Mem774[es_775:di_1050:byte] l0800_1BE4
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE6:
	branch Z_804 l0800_1BEF
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE8:
	di_1050 = 0x0001
	es_775 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BEF:
	Mem831[ss:fp - 0x007E:word16] = es_775
	Mem833[ss:fp - 0x0080:word16] = di_1050 - 0x0001
	fn0800_3509(wArg00, wArg02, wArg04, wArg06)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C29:
	Mem576[ss:fp - 0x007A:word16] = ds_568
	Mem579[ss:fp - 0x007C:word16] = 0x44DC
	si_160 = fn0800_3678(ds_568, ptrArg00, wArg02, out ds_419)
	Mem584[ss:fp - 0x007A:word16] = ss
	Mem587[ss:fp - 0x007C:word16] = fp - 0x0074
	Mem589[ss:fp - 0x007E:word16] = ds_419
	selector es_590 = Mem589[ss:fp - 0x007E:selector]
	word16 di_1045 = 0x44DC
	word16 cx_600 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C43:
	branch cx_600 == 0x0000 l0800_1C45
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C43_1:
	di_1045 = di_1045 + 0x0001
	cx_600 = cx_600 - 0x0001
	branch 0x00 == Mem589[es_590:di_1045:byte] l0800_1C43
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C45:
	word16 cx_610 = ~cx_600
	word16 di_1046 = di_1045 - cx_610
	bool Z_619 = (bool) cond(di_1046)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4B:
	branch cx_610 == 0x0000 l0800_1C4D
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4B_2:
	Z_619 = (bool) cond(0x00 - Mem589[es_590:di_1046:byte]) (alias)
	di_1046 = di_1046 + 0x0001
	cx_610 = cx_610 - 0x0001
	branch 0x00 == Mem589[es_590:di_1046:byte] l0800_1C4B
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4D:
	branch Z_619 l0800_1C56
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4F:
	di_1046 = 0x0001
	es_590 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C56:
	Mem646[ss:fp - 0x007E:word16] = es_590
	di_388 = di_1046 - 0x0001
	Mem648[ss:fp - 0x0080:word16] = di_388
	fn0800_35A3(wArg00, wArg02, wArg04, wArg06)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB6_1:
	Mem562[es_534:di_531:byte] = Mem539[es_497:si_530:byte]
	si_530 = si_530 + 0x0001
	di_531 = di_531 + 0x0001
	cx_553 = cx_553 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB2_2:
	Mem547[es_534:di_531:word16] = Mem539[es_497:si_530:word16]
	si_530 = si_530 + 0x0002
	di_531 = di_531 + 0x0002
	cx_524 = cx_524 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B8F:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C61:
	Mem435[ss:fp - 0x007A:word16] = ds_419
	Mem438[ss:fp - 0x007C:word16] = 0x09A8
	Mem440[ss:fp - 0x007E:word16] = ds_419
	Mem443[ss:fp - 0x0080:word16] = 0x44DC
	word16 di_444
	selector ds_445
	fn0800_4234(si_160, di_388, ds_419, wArg00, wArg02, wArg04, wArg06, out di_444, out ds_445)
	Mem449[ds_445:0x29E1:word16] = dx_405
	Mem450[ds_445:0x29DF:word16] = 0x44DC
	word16 dx_452 = Mem450[ds_445:0x29CF:word16]
	Mem454[ds_445:0x29E5:word16] = Mem450[ds_445:0x29D1:word16]
	Mem455[ds_445:0x29E3:word16] = dx_452
	selector ds_456
	word16 ax_457 = fn0800_5374(fp - 2, ds_445, out ds_456)
	Mem461[ss:fp - 0x007A:word16] = Mem455[ds_456:0x29E1:word16]
	Mem464[ss:fp - 0x007C:word16] = Mem461[ds_456:0x29DF:word16]
	byte dl_465
	word16 di_466
	fn0800_A614(ds_456, ptrArg00, wArg02, out dl_465, out di_466, out ds_110)
	si_1003 = ax_457
	branch ax_457 == 0x0000 l0800_1CA8
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C9D:
	Mem487[ss:fp - 0x007A:word16] = ds_110
	Mem491[ss:fp - 0x007C:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_110, ptrArg00)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CA8:
	Mem478[ss:fp - 0x007A:word16] = ss
	Mem481[ss:fp - 0x007C:word16] = fp - 0x0074
	Mem483[ss:fp - 0x007E:word16] = ax_457
	fn0800_0ABC(fp - 2, di_466, ds_110, wArg00, wArg02, wArg04)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_1CF6(word16 bp, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_1CF6_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_1CF6:
	Mem14[ds:0x45A8:word16] = 0x0000
	Mem16[ds:0x45A6:word16] = 0x0000
	Mem17[ds:0x29ED:word16] = 0x0000
	Mem18[ds:0x29EB:word16] = 0x0000
	selector ds_36
	word16 ax_37 = fn0800_ACB3(ds, DPB(ptrLoc10, Mem18[ds:0x29CF:word16], 0), Mem18[ds:0x29D1:word16], 0xFFFC, 0xFFFF, 0x0002, out ds_36)
	selector ds_46
	word16 dx_47 = fn0800_3E5D(ds_36, Mem18[ds_36:0x29CF:word16], Mem18[ds_36:0x29D1:word16], out ds_46)
	Mem50[ds_46:0x29ED:word16] = dx_47
	Mem51[ds_46:0x29EB:word16] = ax_37
	selector ds_294
	word16 ax_59 = fn0800_4194(ds_46, Mem51[ds_46:0x29CF:word16], Mem51[ds_46:0x29D1:word16], out ds_294)
	branch dx_47 >u Mem51[ds_294:0x29ED:word16] l0800_1D69
// DataOut: ax bp ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Stack +0002(16)

l0800_1D52:
	branch dx_47 <u Mem51[ds_294:0x29ED:word16] l0800_1D5A
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Stack +0002(16)

l0800_1D54:
	branch ax_59 >=u Mem51[ds_294:0x29EB:word16] l0800_1D69
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Stack +0002(16)

l0800_1D5A:
	ptrLoc0A = DPB(ptrLoc0A, 0x4348, 0) (alias)
	word16 si_292
	word16 di_293
	fn0800_0D24(ds_294, 0x000B, ptrLoc0A, ds_294, out si_292, out di_293, out ds_294)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16)

l0800_1D69:
	selector ds_92
	word16 ax_93 = fn0800_ACB3(ds_294, DPB(ptrLoc10, Mem51[ds_294:0x29CF:word16], 0), Mem51[ds_294:0x29D1:word16], Mem51[ds_294:0x29EB:word16], Mem51[ds_294:0x29ED:word16], 0x0000, out ds_92)
	selector ds_102
	word16 dx_103 = fn0800_3E5D(ds_92, Mem51[ds_92:0x29CF:word16], Mem51[ds_92:0x29D1:word16], out ds_102)
	branch dx_103 != 0x524E l0800_1D9B
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Local -000E(16) Stack +0002(16)

l0800_1D96:
	branch ax_93 == 0x4341 l0800_1DAA
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:0x08 al:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Local -000E(16) Stack +0002(16)

l0800_1D9B:
	word16 si_274
	word16 di_275
	fn0800_0D24(ds_102, 0x000B, DPB(ptrLoc0A, 0x4348, 0), ds_102, out si_274, out di_275, out ds_102)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:0x08 al:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0002(16)

l0800_1DAA:
	word16 si_141
	selector ds_140
	word16 di_117
	selector ds_118
	word16 ax_119 = fn0800_3E27(ds_102, Mem51[ds_102:0x29CF:word16], Mem51[ds_102:0x29D1:word16], out di_117, out ds_118)
	word16 di_129
	selector ds_130
	fn0800_3E27(ds_118, Mem51[ds_118:0x29CF:word16], Mem51[ds_118:0x29D1:word16], out di_129, out ds_130)
	branch wArg02 == 0x0000 l0800_1DE4
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16)

l0800_1DE4:
	si_141 = fn0800_4311(fp - 2, ds_130, 0xFFF0, 0x0000, out ds_140)
	Mem262[ds_140:0x2E53:word16] = 0xFFF0
	Mem263[ds_140:0x2E51:word16] = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:0x08 si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DD1:
	si_141 = fn0800_4311(fp - 2, ds_130, ax_119, 0x0000, out ds_140)
	Mem248[ds_140:0x2E53:word16] = dx_103
	Mem249[ds_140:0x2E51:word16] = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:0x08 si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DF8:
	Mem147[ss:fp - 0x0008:word16] = 0x0000
	Mem151[ss:fp - 0x000A:word16] = Mem147[ds_140:0x29ED:word16]
	Mem154[ss:fp - 0x000C:word16] = Mem151[ds_140:0x29EB:word16]
	Mem157[ss:fp - 0x000E:word16] = Mem154[ds_140:0x29D1:word16]
	Mem160[ss:fp - 0x0010:word16] = Mem157[ds_140:0x29CF:word16]
	selector ds_165
	fn0800_ACB3(ds_140, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_165)
	Mem170[ss:fp - 0x0008:word16] = Mem160[ds_165:0x29D1:word16]
	Mem173[ss:fp - 0x000A:word16] = Mem170[ds_165:0x29CF:word16]
	Mem178[ss:fp - 0x000C:word16] = 0x0000
	Mem180[ss:fp - 0x000E:word16] = si_141
	Mem183[ss:fp - 0x0010:word16] = Mem180[ds_165:0x2E53:word16]
	Mem186[ss:fp - 0x0012:word16] = Mem183[ds_165:0x2E51:word16]
	word16 di_189
	selector ds_190
	word16 si_191 = fn0800_4110(ds_165, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_189, out ds_190)
	Mem195[ss:fp - 0x0008:word16] = 0x0000
	Mem199[ss:fp - 0x000A:word16] = si_191 - 0x0008
	word16 ax_200 = Mem199[ds_190:0x2E51:word16]
	Mem205[ss:fp - 0x000C:word16] = Mem199[ds_190:0x2E53:word16]
	Mem207[ss:fp - 0x000E:word16] = ax_200 + 0x0008
	branch fn0800_2CCF(ds_190, ptrArg00, wArg04, wArg06) == Mem207[ss:fp - 0x0004:word16] l0800_1E59
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1E4A:
	Mem223[ss:fp - 0x0008:word16] = ds_190
	Mem226[ss:fp - 0x000A:word16] = 0x4348
	Mem229[ss:fp - 0x000C:word16] = 0x000D
	word16 si_231
	word16 di_232
	fn0800_0D24(ds_190, wArg00, ptrArg02, wArg04, out si_231, out di_232, out ds_190)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:0x08 si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_1E59:
	return ds_190
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_1CF6_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_1E5E(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es rax rbp rbx rcx rdi rdx
// Preserved: si sp
fn0800_1E5E_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16)

l0800_1E5E:
	word16 ax_20 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 ax_39 = fn0800_2CCF(ds, DPB(ptrLoc0A, Mem0[ds:0x2E51:word16] + 0x0008, 0), ax_20 - 0x0008, 0x0000)
	ptr32 es_bx_46 = Mem0[ds:0x2E51:segptr32]
	Mem49[es_bx_46 + 0x0006:byte] = (byte) (ax_39 >>u 0x08)
	Mem50[es_bx_46 + 0x0007:byte] = (byte) ax_39
	ui32 ax_dx_57 = SEQ(Mem50[ds:0x29ED:word16], Mem50[ds:0x29EB:word16] + 0x0004)
	selector ds_75
	fn0800_ACB3(ds, DPB(ptrLoc0C, Mem50[ds:0x29CF:word16], 0), Mem50[ds:0x29D1:word16], (word16) (ax_dx_57 + 0x00000004), SLICE(ax_dx_57 + 0x00000004, word16, 16), 0x0000, out ds_75)
	word16 si_103 = ax_20
	word16 di_85
	selector ds_102
	word16 ax_87 = fn0800_3E27(ds_75, Mem50[ds_75:0x29CF:word16], Mem50[ds_75:0x29D1:word16], out di_85, out ds_102)
	branch ax_20 <=u ax_87 l0800_1EF7
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_1EF7:
	branch ax_20 >=u ax_87 l0800_1F19
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:(ax << 0x10) + dx dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16)

l0800_1EFB:
	ds_102 = fn0800_3C99(bp, ds_102, Mem50[ds_102:0x29CF:word16], Mem50[ds_102:0x29D1:word16], Mem50[ds_102:0x29EB:word16], Mem50[ds_102:0x29ED:word16])
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:(ax << 0x10) + dx dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1ED7:
	si_103 = fn0800_3BC3(bp, ds_102, Mem50[ds_102:0x29CF:word16], Mem50[ds_102:0x29D1:word16], Mem50[ds_102:0x29EB:word16], Mem50[ds_102:0x29ED:word16], out ds_102)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:(ax << 0x10) + dx dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1F19:
	Mem109[ss:fp - 0x0004:word16] = 0x0000
	Mem113[ss:fp - 0x0006:word16] = Mem109[ds_102:0x29ED:word16]
	Mem116[ss:fp - 0x0008:word16] = Mem113[ds_102:0x29EB:word16]
	Mem119[ss:fp - 0x000A:word16] = Mem116[ds_102:0x29D1:word16]
	Mem122[ss:fp - 0x000C:word16] = Mem119[ds_102:0x29CF:word16]
	selector ds_128
	fn0800_ACB3(ds_102, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_128)
	Mem133[ss:fp - 0x0004:word16] = Mem122[ds_128:0x29D1:word16]
	Mem136[ss:fp - 0x0006:word16] = Mem133[ds_128:0x29CF:word16]
	Mem141[ss:fp - 0x0008:word16] = 0x0000
	Mem143[ss:fp - 0x000A:word16] = si_103
	Mem146[ss:fp - 0x000C:word16] = Mem143[ds_128:0x2E53:word16]
	Mem149[ss:fp - 0x000E:word16] = Mem146[ds_128:0x2E51:word16]
	selector ds_152
	fn0800_4152(ds_128, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out ds_152)
	Mem158[ss:fp - 0x0004:word16] = Mem149[ds_152:0x2E53:word16]
	Mem161[ss:fp - 0x0006:word16] = Mem158[ds_152:0x2E51:word16]
	selector ds_162
	fn0800_4346(ds_152, wArg00, wArg02, out ds_162)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

fn0800_1E5E_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> si:si dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si



word16 fn0800_1F5C(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_1F5C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_1F5C:
	word16 di_15 = (word16) ptrArg02
	selector es_16 = SLICE(ptrArg02, selector, 16)
	word16 cx_23 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6C:
	branch cx_23 == 0x0000 l0800_1F6E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6C_1:
	di_15 = di_15 + 0x0001
	cx_23 = cx_23 - 0x0001
	branch 0x00 == Mem0[es_16:di_15:byte] l0800_1F6C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6E:
	word16 cx_35 = ~cx_23
	word16 di_356 = di_15 - cx_35
	bool Z_364 = (bool) cond(di_356)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F75:
	branch cx_35 == 0x0000 l0800_1F77
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F75_2:
	Z_364 = (bool) cond(0x3A - Mem0[es_16:di_356:byte]) (alias)
	di_356 = di_356 + 0x0001
	cx_35 = cx_35 - 0x0001
	branch 0x3A == Mem0[es_16:di_356:byte] l0800_1F75
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F77:
	branch Z_364 l0800_1F80
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F79:
	di_356 = 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F80:
	branch di_356 == 0x0001 l0800_1FAD
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F87:
	word16 di_283 = (word16) ptrArg02
	word16 cx_289 = 0xFFFF
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F8F:
	branch cx_289 == 0x0000 l0800_1F91
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F8F_1:
	di_283 = di_283 + 0x0001
	cx_289 = cx_289 - 0x0001
	branch 0x00 == Mem0[0x0000:di_283:byte] l0800_1F8F
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F91:
	word16 cx_299 = ~cx_289
	word16 di_304 = di_283 - cx_299
	bool Z_308 = (bool) cond(di_304)
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F98:
	branch cx_299 == 0x0000 l0800_1F9A
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F98_2:
	Z_308 = (bool) cond(0x3A - Mem0[0x0000:di_304:byte]) (alias)
	di_304 = di_304 + 0x0001
	cx_299 = cx_299 - 0x0001
	branch 0x3A == Mem0[0x0000:di_304:byte] l0800_1F98
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F9A:
	branch Z_308 l0800_1FA3
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F9C:
	di_304 = 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1FA3:
	wArg04 = 0x0000
	wArg02 = di_304
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1FAD:
	word16 dx_90 = DPB(dx, 0x00, 8)
	word16 ax_93 = Mem0[ds:0x2E53:word16]
	word16 dx_95 = Mem0[ds:0x2E51:word16] + dx_90
	word16 di_109 = (word16) ptrArg02
	word16 cx_105 = 0xFFFF
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FDE:
	branch cx_105 == 0x0000 l0800_1FE0
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FDE_1:
	di_109 = di_378 + 0x0001
	cx_105 = cx_105 - 0x0001
	word16 di_378 = di_109
	branch 0x00 == Mem0[0x0000:di_378:byte] l0800_1FDE
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FE0:
	word16 cx_115 = ~cx_105
	word16 ax_122 = dx_95 - Mem0[ds:0x2E51:word16]
	word16 ax_126 = ax_122 + (cx_115 + 0x0003)
	word16 bx_138 = (word16) ptrLoc06
	word16 dx_133
	Mem139[0x0000:bx_138:byte] = (byte) fn0800_8C8A(ax_126, 0x08, 0x0000 - (ax_122 <u 0x0000) + (ax_126 <u 0x0000), wLoc10, out dx_133)
	byte bLoc0A_119 = (byte) (cx_115 + 0x0003)
	Mem148[0x0000:bx_138 + 0x0001:byte] = (byte) (dx_95 - Mem139[ds:0x2E51:word16]) + bLoc0A_119
	Mem152[ss:fp - 0x0010:word16] = 0x0000
	Mem157[ss:fp - 0x0012:word16] = dx_95 + 0x0002
	word16 di_158 = wArg02
	word16 cx_165 = 0xFFFF
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202C:
	branch cx_165 == 0x0000 l0800_202E
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202C_2:
	di_158 = di_158 + 0x0001
	cx_165 = cx_165 - 0x0001
	branch 0x00 == Mem157[0x0000:di_158:byte] l0800_202C
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202E:
	word16 di_184 = Mem157[ss:fp - 0x0012:word16]
	selector es_187 = Mem157[ss:fp - 0x0010:selector]
	Mem192[ss:fp - 0x0010:word16] = ds
	word16 cx_175 = ~cx_165
	word16 cx_177 = cx_175 >>u 0x0001
	word16 si_183 = di_158 - cx_175
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203D:
	branch cx_177 == 0x0000 l0800_203F
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203F:
	word16 cx_206 = cx_177 * 0x0002 + (cx_175 >>u 0x0001 <u 0x0000)
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_2041:
	branch cx_206 == 0x0000 l0800_2043
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_2043:
	selector ds_221 = Mem192[ss:fp - 0x0010:selector]
	*dsOut = ds_221
	Mem225[ax_93:bx_138 + (cx_115 + 0x0003) - 0x0001:byte] = 0x00
	ptr32 es_bx_231 = Mem225[ds_221:0x2E51:segptr32]
	Mem234[es_bx_231 + 0x0004:byte] = (byte) (dx_90 + (cx_115 + 0x0003) >>u 0x08)
	Mem238[es_bx_231 + 0x0005:byte] = bLoc08 + bLoc0A_119
	Mem243[ss:fp - 0x0010:word16] = 0x0000
	Mem245[ss:fp - 0x0012:word16] = 0x0000
	Mem247[ss:fp - 0x0014:word16] = 0x0000
	Mem250[ss:fp - 0x0016:word16] = cx_115 + 0x0003
	fn0800_2688(fp - 2, ds_221, wArg00, wArg02, wArg04, wArg06)
	word16 dx_255
	*dxOut = ax_93
	return dx_95
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

fn0800_1F5C_exit:
// DataOut: ax ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:0x00 -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

l0800_2041_1:
	Mem215[es_187:di_184:byte] = Mem192[0x0000:si_183:byte]
	si_183 = si_183 + 0x0001
	di_184 = di_184 + 0x0001
	cx_206 = cx_206 - 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203D_3:
	Mem200[es_187:di_184:word16] = Mem192[0x0000:si_183:word16]
	si_183 = si_183 + 0x0002
	di_184 = di_184 + 0x0002
	cx_177 = cx_177 - 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)



void fn0800_2085(selector ds, segptr32 ptrArg02, selector psegArg04, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(32)
fn0800_2085_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(32)

l0800_2085:
	word16 ax_28 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 dx_32 = Mem0[ds:0x2E51:word16] + ax_28
	word16 di_37 = (word16) ptrArg02
	selector es_38 = SLICE(ptrArg02, selector, 16)
	word16 cx_43 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Local -000C(8) Stack +0002(16) Stack +0004(16) Stack +0006(32)

l0800_20BE:
	branch cx_43 == 0x0000 l0800_20C0
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -18(fp):di -16(fp):si -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Local -000C(8) Stack +0002(16) Stack +0004(16) Stack +0006(32)

l0800_20BE_1:
	di_37 = di_509 + 0x0001
	cx_43 = cx_43 - 0x0001
	word16 di_509 = di_37
	branch 0x00 == Mem0[es_38:di_509:byte] l0800_20BE
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -18(fp):di -16(fp):si -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Local -000C(8) Stack +0002(16) Stack +0004(16) Stack +0006(32)

l0800_20C0:
	word16 bx_73 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[ptrArg06:byte] << 0x08) + DPB(dx_32, 0x00, 8))
	word16 cx_55 = ~cx_43
	segptr32 ptrLoc06_78 = DPB(ptrLoc06, bx_73 - 0x0001, 0)
	selector ds_100 = fn0800_B0F3(bx_73 - 0x0001 + (cx_55 + 0x0004), Mem0[ds:0x2E53:word16], bx_73 - 0x0001, Mem0[ds:0x2E53:word16], dx_32 - (bx_73 - 0x0001))
	selector es_104 = SLICE(ptrLoc06_78, selector, 16)
	word16 di_113 = wArg02
	word16 cx_119 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -18(fp):di -16(fp):si -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -0016(16) Local -001C(16)

l0800_211F:
	branch cx_119 == 0x0000 l0800_2121
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -0016(16) Local -001C(16)

l0800_211F_2:
	di_113 = di_113 + 0x0001
	cx_119 = cx_119 - 0x0001
	branch 0x00 == Mem0[psegArg04:di_113:byte] l0800_211F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -0016(16) Local -001C(16)

l0800_2121:
	word16 cx_129 = ~cx_119
	word16 cx_131 = cx_129 >>u 0x0001
	word16 si_137 = di_113 - cx_129
	word16 di_138 = bx_73 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2130:
	branch cx_131 == 0x0000 l0800_2132
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0014 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2132:
	word16 cx_160 = cx_131 * 0x0002 + (cx_129 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2134:
	branch cx_160 == 0x0000 l0800_2136
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2136:
	word16 di_178 = bx_73 - 0x0001
	selector es_179 = SLICE(ptrLoc06_78, selector, 16)
	word16 cx_184 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_213F:
	branch cx_184 == 0x0000 l0800_2141
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_213F_1:
	di_178 = di_178 + 0x0001
	cx_184 = cx_184 - 0x0001
	branch 0x00 == Mem0[es_179:di_178:byte] l0800_213F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2141:
	word16 cx_194 = ~cx_184
	word16 di_198 = di_178 - cx_194
	bool Z_202 = (bool) cond(di_198)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2147:
	branch cx_194 == 0x0000 l0800_2149
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2147_2:
	Z_202 = (bool) cond(0x00 - Mem0[es_179:di_198:byte]) (alias)
	di_198 = di_198 + 0x0001
	cx_194 = cx_194 - 0x0001
	branch 0x00 == Mem0[es_179:di_198:byte] l0800_2147
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2149:
	branch Z_202 l0800_2152
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_214B:
	di_198 = 0x0001
	es_179 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2152:
	Mem226[es_179:di_198:byte] = 0x00
	word16 di_228 = bx_73 - 0x0001
	selector es_229 = SLICE(ptrLoc06_78, selector, 16)
	word16 cx_234 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2164:
	branch cx_234 == 0x0000 l0800_2166
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2164_1:
	di_228 = di_228 + 0x0001
	cx_234 = cx_234 - 0x0001
	branch 0x00 == Mem226[es_229:di_228:byte] l0800_2164
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2166:
	word16 cx_244 = ~cx_234
	word16 di_248 = di_228 - cx_244
	bool Z_252 = (bool) cond(di_248)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_216C:
	branch cx_244 == 0x0000 l0800_216E
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_216C_2:
	Z_252 = (bool) cond(0x00 - Mem226[es_229:di_248:byte]) (alias)
	di_248 = di_248 + 0x0001
	cx_244 = cx_244 - 0x0001
	branch 0x00 == Mem226[es_229:di_248:byte] l0800_216C
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_216E:
	branch Z_252 l0800_2177
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2170:
	di_248 = 0x0001
	es_229 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2177:
	Mem276[es_229:di_248 + 0x0001:byte] = 0x00
	word16 di_278 = bx_73 - 0x0001
	selector es_279 = SLICE(ptrLoc06_78, selector, 16)
	word16 cx_284 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2189:
	branch cx_284 == 0x0000 l0800_218B
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2189_1:
	di_278 = di_278 + 0x0001
	cx_284 = cx_284 - 0x0001
	branch 0x00 == Mem276[es_279:di_278:byte] l0800_2189
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_218B:
	word16 cx_294 = ~cx_284
	word16 di_298 = di_278 - cx_294
	bool Z_302 = (bool) cond(di_298)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2191:
	branch cx_294 == 0x0000 l0800_2193
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2191_2:
	Z_302 = (bool) cond(0x00 - Mem276[es_279:di_298:byte]) (alias)
	di_298 = di_298 + 0x0001
	cx_294 = cx_294 - 0x0001
	branch 0x00 == Mem276[es_279:di_298:byte] l0800_2191
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2193:
	branch Z_302 l0800_219C
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2195:
	di_298 = 0x0001
	es_279 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_219C:
	Mem326[es_279:di_298 + 0x0002:byte] = 0x00
	word16 di_328 = bx_73 - 0x0001
	selector es_329 = SLICE(ptrLoc06_78, selector, 16)
	word16 cx_334 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21AE:
	branch cx_334 == 0x0000 l0800_21B0
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21AE_1:
	di_328 = di_328 + 0x0001
	cx_334 = cx_334 - 0x0001
	branch 0x00 == Mem326[es_329:di_328:byte] l0800_21AE
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B0:
	word16 cx_344 = ~cx_334
	word16 di_348 = di_328 - cx_344
	bool Z_352 = (bool) cond(di_348)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B6:
	branch cx_344 == 0x0000 l0800_21B8
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B6_2:
	Z_352 = (bool) cond(0x00 - Mem326[es_329:di_348:byte]) (alias)
	di_348 = di_348 + 0x0001
	cx_344 = cx_344 - 0x0001
	branch 0x00 == Mem326[es_329:di_348:byte] l0800_21B6
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B8:
	branch Z_352 l0800_21C1
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21BA:
	di_348 = 0x0001
	es_329 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21C1:
	Mem376[es_329:di_348 + 0x0003:byte] = 0x00
	ptr32 es_bx_382 = Mem376[ds_100:0x2E51:segptr32]
	Mem385[es_bx_382 + 0x0004:byte] = (byte) (ax_28 + (cx_55 + 0x0004) >>u 0x08)
	Mem390[es_bx_382 + 0x0005:byte] = bLoc0C + bLoc0E
	fn0800_2688(fp - 2, ds_100, cx_55 + 0x0004, 0x0000, 0x0000, 0x0000)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_2085_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:di bx:<invalid> es:<invalid> si:si ds:<invalid> bl:<invalid> bh:0x00 ch:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2134_1:
	Mem169[es_104:di_138:byte] = Mem0[psegArg04:si_137:byte]
	si_137 = si_137 + 0x0001
	di_138 = di_138 + 0x0001
	cx_160 = cx_160 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2130_3:
	Mem154[es_104:di_138:word16] = Mem0[psegArg04:si_137:word16]
	si_137 = si_137 + 0x0002
	di_138 = di_138 + 0x0002
	cx_131 = cx_131 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0014 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)



selector fn0800_2201(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_2201_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_2201:
	word16 ax_25 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 dx_30 = Mem0[ds:0x2E51:word16] + ax_25
	word16 dx_48 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[ptrArg02:byte] << 0x08) + DPB(dx_30, 0x00, 8)) - wArg02
	word16 ax_55 = wArg02 + dx_48
	selector ds_78 = fn0800_B0F3(wArg02, wArg04, ax_55, wArg04, dx_30 - ax_55)
	ptr32 es_bx_85 = Mem0[ds_78:0x2E51:segptr32]
	Mem88[es_bx_85 + 0x0004:byte] = (byte) (ax_25 - dx_48 >>u 0x08)
	Mem91[es_bx_85 + 0x0005:byte] = (byte) (ax_25 - dx_48)
	word16 ax_100 = -dx_48
	fn0800_2688(fp - 2, ds_78, ax_100, -0x0000 - (ax_100 == 0x0000), 0x0000, 0x0000)
	word16 dx_110 = Mem91[ds_78:0x45AE:word16]
	branch Mem91[ds_78:0x45B0:word16] != wArg04 l0800_22EA
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_22B7:
	branch dx_110 != wArg02 l0800_22EA
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_22EA:
	branch Mem91[ds_78:0x45AE:word16] <=u wArg02 l0800_22F9
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_22F2:
	Mem145[ds_78:0x45AA:word16] = Mem91[ds_78:0x45AA:word16] - dx_48
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22F9:
	return ds_78
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_22BC:
	selector es_151 = SLICE(ptrArg02, selector, 16)
	word16 di_152 = (word16) ptrArg02 + 0x0002
	word16 cx_158 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C7:
	branch cx_158 == 0x0000 l0800_22C9
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C7_1:
	di_152 = di_152 + 0x0001
	cx_158 = cx_158 - 0x0001
	branch 0x00 == Mem91[es_151:di_152:byte] l0800_22C7
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C9:
	word16 cx_168 = ~cx_158
	word16 di_172 = di_152 - cx_168
	bool Z_176 = (bool) cond(di_172)
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22CF:
	branch cx_168 == 0x0000 l0800_22D1
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22CF_2:
	Z_176 = (bool) cond(0x00 - Mem91[es_151:di_172:byte]) (alias)
	di_172 = di_172 + 0x0001
	cx_168 = cx_168 - 0x0001
	branch 0x00 == Mem91[es_151:di_172:byte] l0800_22CF
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22D1:
	branch Z_176 l0800_22DA
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22D3:
	di_172 = 0x0001
	es_151 = 0x0000
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22DA:
	Mem206[ds_78:0x45AC:word16] = es_151
	Mem207[ds_78:0x45AA:word16] = di_172
	return ds_78
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_2201_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> di:di Sequence es:di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_22FE(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_22FE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_22FE:
	word16 ax_25 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 dx_29 = Mem0[ds:0x2E51:word16] + ax_25
	word16 di_205 = (word16) ptrArg02
	selector es_35 = SLICE(ptrArg02, selector, 16)
	word16 cx_207 = 0xFFFF
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2336:
	branch cx_207 == 0x0000 l0800_2338
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2336_1:
	di_205 = di_205 + 0x0001
	cx_207 = cx_207 - 0x0001
	branch 0x00 == Mem0[es_35:di_205:byte] l0800_2336
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2338:
	word16 cx_201 = ~cx_207
	word16 di_188 = di_205 - cx_201
	bool Z_196 = (bool) cond(di_188)
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_233E:
	branch cx_201 == 0x0000 l0800_2340
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_233E_2:
	Z_196 = (bool) cond(0x00 - Mem0[es_35:di_188:byte]) (alias)
	di_188 = di_188 + 0x0001
	cx_201 = cx_201 - 0x0001
	branch 0x00 == Mem0[es_35:di_188:byte] l0800_233E
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2340:
	branch Z_196 l0800_2349
// DataOut: bp di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2342:
	di_188 = 0x0001
// DataOut: bp di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2349:
	word16 di_89 = di_188 + 0x0004 - wArg02
	word16 ax_96 = wArg02 + di_89
	selector ds_119 = fn0800_B0F3(wArg02, wArg04, ax_96, wArg04, dx_29 - ax_96)
	ptr32 es_bx_126 = Mem0[ds_119:0x2E51:segptr32]
	Mem129[es_bx_126 + 0x0004:byte] = (byte) (ax_25 - di_89 >>u 0x08)
	Mem133[es_bx_126 + 0x0005:byte] = bLoc08 - (byte) di_89
	word16 ax_142 = -di_89
	fn0800_2688(fp - 2, ds_119, ax_142, -0x0000 - (ax_142 == 0x0000), 0x0000, 0x0000)
	Mem154[ds_119:0x45AC:word16] = wArg04
	word16 dx_153 = wArg02 + di_89
	Mem155[ds_119:0x45AA:word16] = dx_153
	branch (dx_153 | wArg04) == 0x0000 l0800_23D8
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_23D8:
	branch Mem155[ds_119:0x45AA:word16] <=u wArg02 l0800_23E7
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_23E0:
	Mem186[ds_119:0x45AA:word16] = Mem155[ds_119:0x45AA:word16] - di_89
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_23E7:
	return ds_119
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_23C6:
	Mem169[ds_119:0x45AC:word16] = wArg04
	Mem170[ds_119:0x45AA:word16] = wArg02
	return ds_119
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_22FE_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:di es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_23EC(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_23EC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_23EC:
	selector ds_22
	fn0800_24FE(fp - 2, ds, DPB(ptrLoc10, wArg02, 0), out ds_22)
	word16 di_31 = (word16) ptrArg02
	selector es_32 = SLICE(ptrArg02, selector, 16)
	word16 cx_39 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_240D:
	branch cx_39 == 0x0000 l0800_240F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_240D_1:
	di_31 = di_31 + 0x0001
	cx_39 = cx_39 - 0x0001
	branch 0x00 == Mem0[es_32:di_31:byte] l0800_240D
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_240F:
	word16 cx_404 = ~cx_39
	word16 di_392 = di_31 - cx_404
	bool Z_400 = (bool) cond(di_392)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2415:
	branch cx_404 == 0x0000 l0800_2417
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2415_2:
	Z_400 = (bool) cond(0x00 - Mem0[es_32:di_392:byte]) (alias)
	di_392 = di_392 + 0x0001
	cx_404 = cx_404 - 0x0001
	branch 0x00 == Mem0[es_32:di_392:byte] l0800_2415
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2417:
	branch Z_400 l0800_2420
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2419:
	di_392 = 0x0001
	es_32 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2420:
	word16 ax_85 = (int16) Mem0[es_32:di_392:byte]
	word16 di_106 = (word16) ptrArg02
	selector es_137 = SLICE(ptrArg02, selector, 16)
	word16 cx_102 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Stack +0002(32)

l0800_2437:
	branch cx_102 == 0x0000 l0800_2439
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Stack +0002(32)

l0800_2437_1:
	di_106 = di_106 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch 0x00 == Mem0[es_137:di_106:byte] l0800_2437
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Stack +0002(32)

l0800_2439:
	word16 cx_109 = ~cx_102
	word16 di_115 = di_106 - cx_109
	bool Z_119 = (bool) cond(di_115)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Stack +0002(32)

l0800_243F:
	branch cx_109 == 0x0000 l0800_2441
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Stack +0002(32)

l0800_243F_2:
	Z_119 = (bool) cond(0x00 - Mem0[es_137:di_415:byte]) (alias)
	di_115 = di_415 + 0x0001
	cx_109 = cx_109 - 0x0001
	word16 di_415 = di_115
	branch 0x00 == Mem0[es_137:di_415:byte] l0800_243F
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Stack +0002(32)

l0800_2441:
	branch Z_119 l0800_244A
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Stack +0002(32)

l0800_2443:
	es_137 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Stack +0002(32)

l0800_244A:
	word16 dx_147 = (ax_85 << 0x08) + DPB(es_137, 0x00, 8)
	word16 di_155 = (word16) ptrArg02
	selector es_156 = SLICE(ptrArg02, selector, 16)
	word16 cx_161 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Stack +0002(32)

l0800_2462:
	branch cx_161 == 0x0000 l0800_2464
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Stack +0002(32)

l0800_2462_1:
	di_155 = di_155 + 0x0001
	cx_161 = cx_161 - 0x0001
	branch 0x00 == Mem0[es_156:di_155:byte] l0800_2462
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Stack +0002(32)

l0800_2464:
	word16 cx_171 = ~cx_161
	word16 di_177 = di_155 - cx_171
	bool Z_181 = (bool) cond(di_177)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Stack +0002(32)

l0800_246A:
	branch cx_171 == 0x0000 l0800_246C
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Stack +0002(32)

l0800_246A_2:
	Z_181 = (bool) cond(0x00 - Mem0[es_156:di_177:byte]) (alias)
	di_177 = di_177 + 0x0001
	cx_171 = cx_171 - 0x0001
	branch 0x00 == Mem0[es_156:di_177:byte] l0800_246A
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Stack +0002(32)

l0800_246C:
	branch Z_181 l0800_2475
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Stack +0002(32)

l0800_246E:
	di_177 = 0x0001
	es_156 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Stack +0002(32)

l0800_2475:
	word16 ax_205 = (int16) Mem0[es_156:di_177 + 0x0002:byte]
	word16 di_209 = (word16) ptrArg02
	selector es_210 = SLICE(ptrArg02, selector, 16)
	word16 cx_219 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Local -0012(16)

l0800_248C:
	branch cx_219 == 0x0000 l0800_248E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Local -0012(16)

l0800_248C_1:
	di_209 = di_209 + 0x0001
	cx_219 = cx_219 - 0x0001
	branch 0x00 == Mem0[es_210:di_209:byte] l0800_248C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Local -0012(16)

l0800_248E:
	word16 cx_229 = ~cx_219
	word16 di_235 = di_209 - cx_229
	bool Z_239 = (bool) cond(di_235)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Local -0012(16)

l0800_2494:
	branch cx_229 == 0x0000 l0800_2496
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Local -0012(16)

l0800_2494_2:
	Z_239 = (bool) cond(0x00 - Mem0[es_210:di_419:byte]) (alias)
	di_235 = di_419 + 0x0001
	cx_229 = cx_229 - 0x0001
	word16 di_419 = di_235
	branch 0x00 == Mem0[es_210:di_419:byte] l0800_2494
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Local -0012(16)

l0800_2496:
	branch Z_239 l0800_249F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Local -0012(16)

l0800_2498:
	es_210 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(16) Local -0010(16) Local -0012(16)

l0800_249F:
	word16 dx_269 = (ax_205 << 0x08) + DPB(es_210, 0x00, 8)
	word16 dx_288 = dx_269 - Mem0[ds_22:0x45A6:word16]
	selector ds_303 = fn0800_3C99(fp - 2, ds_22, Mem0[ds_22:0x29CF:word16], Mem0[ds_22:0x29D1:word16], dx_288, dx_147 + (dx_269 <u 0x0000) - Mem0[ds_22:0x45A8:word16] - (dx_288 <u 0x0000))
	*dsOut = ds_303
	Mem308[ss:fp - 0x000E:word16] = Mem0[ss:fp - 0x0004:word16]
	Mem311[ss:fp - 0x0010:word16] = Mem308[ss:fp - 0x0006:word16]
	word16 dx_315 = -Mem311[ss:fp - 0x000A:word16]
	Mem320[ss:fp - 0x0012:word16] = -Mem311[ss:fp - 0x0008:word16] - (dx_315 == 0x0000)
	Mem322[ss:fp - 0x0014:word16] = dx_315
	fn0800_2688(fp - 2, ds_303, wArg00, wArg02, wArg04, wArg06)
	return Mem322[ss:fp - 2:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

fn0800_23EC_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:0x00 bl:<invalid> dl:<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_24FE(word16 bp, selector ds, segptr32 ptrArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_24FE_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_24FE:
	word16 di_12 = (word16) ptrArg02
	selector es_13 = SLICE(ptrArg02, selector, 16)
	word16 cx_21 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_250D:
	branch cx_21 == 0x0000 l0800_250F
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_250D_1:
	di_12 = di_12 + 0x0001
	cx_21 = cx_21 - 0x0001
	branch 0x00 == Mem0[es_13:di_12:byte] l0800_250D
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_250F:
	word16 cx_33 = ~cx_21
	word16 di_39 = di_12 - cx_33
	bool Z_43 = (bool) cond(di_39)
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2515:
	branch cx_33 == 0x0000 l0800_2517
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2515_2:
	Z_43 = (bool) cond(0x00 - Mem0[es_13:di_39:byte]) (alias)
	di_39 = di_39 + 0x0001
	cx_33 = cx_33 - 0x0001
	branch 0x00 == Mem0[es_13:di_39:byte] l0800_2515
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2517:
	branch Z_43 l0800_2520
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2519:
	di_39 = 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2520:
	word16 ax_67 = (int16) Mem0[0x0000:di_39:byte]
	word16 di_471 = (word16) ptrArg02
	selector es_119 = SLICE(ptrArg02, selector, 16)
	word16 cx_473 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2537:
	branch cx_473 == 0x0000 l0800_2539
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2537_1:
	di_471 = di_471 + 0x0001
	cx_473 = cx_473 - 0x0001
	branch 0x00 == Mem0[0x0000:di_471:byte] l0800_2537
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2539:
	word16 cx_103 = ~cx_473
	word16 di_110 = di_471 - cx_103
	bool Z_101 = (bool) cond(di_110)
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_253F:
	branch cx_103 == 0x0000 l0800_2541
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_253F_2:
	Z_101 = (bool) cond(0x00 - Mem0[0x0000:di_498:byte]) (alias)
	di_110 = di_498 + 0x0001
	cx_103 = cx_103 - 0x0001
	word16 di_498 = di_110
	branch 0x00 == Mem0[0x0000:di_498:byte] l0800_253F
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2541:
	branch Z_101 l0800_254A
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2543:
	es_119 = 0x0000
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_254A:
	word16 dx_129 = (ax_67 << 0x08) + DPB(es_119, 0x00, 8)
	word16 di_137 = (word16) ptrArg02
	selector es_138 = SLICE(ptrArg02, selector, 16)
	word16 cx_143 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2562:
	branch cx_143 == 0x0000 l0800_2564
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2562_1:
	di_137 = di_137 + 0x0001
	cx_143 = cx_143 - 0x0001
	branch 0x00 == Mem0[es_138:di_137:byte] l0800_2562
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2564:
	word16 cx_153 = ~cx_143
	word16 di_159 = di_137 - cx_153
	bool Z_163 = (bool) cond(di_159)
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256A:
	branch cx_153 == 0x0000 l0800_256C
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256A_2:
	Z_163 = (bool) cond(0x00 - Mem0[es_138:di_159:byte]) (alias)
	di_159 = di_159 + 0x0001
	cx_153 = cx_153 - 0x0001
	branch 0x00 == Mem0[es_138:di_159:byte] l0800_256A
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256C:
	branch Z_163 l0800_2575
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256E:
	di_159 = 0x0001
	es_138 = 0x0000
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2575:
	word16 ax_187 = (int16) Mem0[es_138:di_159 + 0x0002:byte]
	word16 di_191 = (word16) ptrArg02
	selector es_192 = SLICE(ptrArg02, selector, 16)
	word16 cx_201 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258C:
	branch cx_201 == 0x0000 l0800_258E
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258C_1:
	di_191 = di_191 + 0x0001
	cx_201 = cx_201 - 0x0001
	branch 0x00 == Mem0[es_192:di_191:byte] l0800_258C
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258E:
	word16 cx_211 = ~cx_201
	word16 di_217 = di_191 - cx_211
	bool Z_221 = (bool) cond(di_217)
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2594:
	branch cx_211 == 0x0000 l0800_2596
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2594_2:
	Z_221 = (bool) cond(0x00 - Mem0[es_192:di_502:byte]) (alias)
	di_217 = di_502 + 0x0001
	cx_211 = cx_211 - 0x0001
	word16 di_502 = di_217
	branch 0x00 == Mem0[es_192:di_502:byte] l0800_2594
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2596:
	branch Z_221 l0800_259F
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2598:
	es_192 = 0x0000
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_259F:
	word16 dx_250 = (ax_187 << 0x08) + DPB(es_192, 0x00, 8)
	word16 ax_260 = dx_250 - Mem0[ds:0x45A6:word16]
	selector ds_285
	word16 ax_286 = fn0800_ACB3(ds, DPB(ptrLoc1A, Mem0[ds:0x29CF:word16], 0), Mem0[ds:0x29D1:word16], ax_260, dx_129 + (dx_250 <u 0x0000) - Mem0[ds:0x45A8:word16] - (ax_260 <u 0x0000), 0x0000, out ds_285)
	word16 v23_289 = Mem0[ds_285:0x29D1:word16]
	word16 dx_302
	selector ds_295
	word16 ax_303 = fn0800_8C8A(ax_286, 0x08, fn0800_3E5D(ds_285, Mem0[ds_285:0x29CF:word16], v23_289, out ds_295), v23_289, out dx_302)
	branch dx_302 != 0x0052 l0800_25FC
// DataOut: ax ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000A(16)

l0800_25F7:
	branch ax_303 == 0x4E43 l0800_260B
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000A(16)

l0800_25FC:
	Mem397[ss:fp - 0x0012:word16] = ds_295
	Mem400[ss:fp - 0x0014:word16] = 0x4348
	Mem403[ss:fp - 0x0016:word16] = 0x000C
	word16 di_406
	fn0800_0D24(ds_295, wArg00, ptrArg02, wArg04, out si, out di_406, out ds_295)
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000A(16)

l0800_260B:
	branch (ax_286 & 0x00FF) == 0x0000 l0800_2655
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_2655:
	Mem375[ss:fp - 0x0012:word16] = Mem0[ds_295:0x29D1:word16]
	Mem378[ss:fp - 0x0014:word16] = Mem375[ds_295:0x29CF:word16]
	selector ds_379
	word16 dx_380 = fn0800_3E5D(ds_295, wArg00, wArg02, out ds_379)
	Mem382[ds_379:0x2A05:word16] = dx_380
	Mem383[ds_379:0x2A03:word16] = ax_286 & 0x00FF
	Mem384[ds_379:0x2A09:word16] = dx_380
	Mem385[ds_379:0x2A07:word16] = ax_286 & 0x00FF
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_2616:
	Mem339[ss:fp - 0x0012:word16] = Mem0[ds_295:0x29D1:word16]
	Mem342[ss:fp - 0x0014:word16] = Mem339[ds_295:0x29CF:word16]
	selector ds_345
	word16 dx_346 = fn0800_3E5D(ds_295, wArg00, wArg02, out ds_345)
	Mem349[ds_345:0x2A09:word16] = dx_346
	Mem350[ds_345:0x2A07:word16] = ax_286 & 0x00FF
	Mem353[ss:fp - 0x0012:word16] = Mem350[ds_345:0x29D1:word16]
	Mem356[ss:fp - 0x0014:word16] = Mem353[ds_345:0x29CF:word16]
	selector ds_357
	word16 dx_358 = fn0800_3E5D(ds_345, wArg00, wArg02, out ds_357)
	Mem360[ds_357:0x2A05:word16] = dx_358
	Mem361[ds_357:0x2A03:word16] = ax_286 & 0x00FF
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_267D:
	return si
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:0x08 ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_24FE_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:0x08 ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_2688(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_2688_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2688:
	word16 dx_23 = Mem0[ds:0x2E53:word16]
	word16 bx_24 = (word16) Mem0[ds:0x2E51:segptr32] + ((DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8))
	word16 ax_27 = Mem0[ds:0x2E53:word16]
	word16 wLoc06_225 = Mem0[ds:0x2E51:word16] + 0x0008
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27B3:
	branch ax_27 == dx_23 l0800_27C1
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27C1:
	branch wLoc06_225 == bx_24 l0800_27C9
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27C9:
	branch (wArg06 | wArg08) != 0x0000 l0800_27DF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_27D1:
	word16 v22_267 = Mem0[ds:0x45A6:word16] + wArg02
	Mem268[ds:0x45A6:word16] = v22_267
	Mem272[ds:0x45A8:word16] = Mem268[ds:0x45A8:word16] + wArg04 + (v22_267 <u 0x0000)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_27DF:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_2688_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_27C6:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27BE:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26C3:
	word16 dx_135 = wLoc06_225
	word16 wLoc06_105 = wLoc06_225 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26D3:
	wLoc06_105 = wLoc06_105 + 0x0001
	branch Mem0[ptrLoc06:byte] != 0x00 l0800_26D3
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26DF:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_277D:
	branch Mem0[ptrLoc06:byte] == 0x00 l0800_2789
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2789:
	word16 v24_224 = wLoc06_105 + 0x0001
	word16 ax_228 = v24_224 - Mem0[ds:0x2E51:word16]
	word16 dx_234
	Mem241[ptrLoc0E:byte] = (byte) fn0800_8C8A(ax_228, 0x08, 0x0000 - (ax_228 <u 0x0000), bp, out dx_234)
	Mem250[ptrLoc0E + 0x0001:byte] = (byte) (v24_224 - Mem241[ds:0x2E51:word16])
	wLoc06_225 = v24_224
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2786:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26E2:
	word16 v25_109 = wLoc06_105 + 0x0001
	wLoc06_105 = v25_109
	branch Mem0[ptrLoc06:byte] != 0x00 l0800_26E2
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26EE:
	Mem126[ss:fp - 0x0014:word16] = ((int16) Mem0[ptrLoc06:byte] << 0x08) + DPB(dx_135, 0x00, 8)
	word16 ax_134 = ((int16) Mem126[ptrLoc06 + 0x0002:byte] << 0x08) + DPB((word16) ptrLoc06, 0x00, 8)
	dx_135 = ax_134
	word16 ax_142 = Mem126[ss:fp - 0x0014:word16] + (ax_134 <u 0x0000)
	branch ax_142 < wArg08 l0800_2779
// DataOut: ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2727:
	branch ax_142 != wArg08 l0800_272E
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2729:
	branch ax_134 <u wArg06 l0800_2779
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_272E:
	int32 dx_ax_177 = (int32) SLICE(SEQ(ax_142, ax_134 + wArg02) + _, word16, 16)
	word16 dx_181
	Mem187[ptrLoc06:byte] = (byte) fn0800_8C8A((word16) dx_ax_177, 0x08, SLICE(dx_ax_177, word16, 16), bp, out dx_181)
	Mem197[ptrLoc06 + 0x0001:byte] = (byte) (int32) SLICE(SEQ(ax_142, ax_134 + wArg02) + _, word16, 16)
	word16 ax_200 = ax_134 + wArg02
	Mem214[ptrLoc06 + 0x0002:byte] = (byte) fn0800_8C8A(ax_200, 0x08, ax_142 + wArg04 + (SEQ(ax_200, ax_142) <u 0x00000000), bp, out dx_135)
	Mem220[ptrLoc06 + 0x0003:byte] = bLoc12 + bArg02
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2779:
	wLoc06_105 = v25_109 + 0x0004
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)



word16 fn0800_283D(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32)
fn0800_283D_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_283D:
	word16 di_15 = (word16) ptrArg02
	selector es_16 = SLICE(ptrArg02, selector, 16)
	word16 cx_21 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_284D:
	branch cx_21 == 0x0000 l0800_284F
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_284D_1:
	di_15 = di_15 + 0x0001
	cx_21 = cx_21 - 0x0001
	branch 0x00 == Mem0[es_16:di_15:byte] l0800_284D
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_284F:
	word16 cx_33 = ~cx_21
	word16 di_346 = di_15 - cx_33
	bool Z_354 = (bool) cond(di_346)
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2856:
	branch cx_33 == 0x0000 l0800_2858
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2856_2:
	Z_354 = (bool) cond(0x3A - Mem0[es_16:di_346:byte]) (alias)
	di_346 = di_346 + 0x0001
	cx_33 = cx_33 - 0x0001
	branch 0x3A == Mem0[es_16:di_346:byte] l0800_2856
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2858:
	branch Z_354 l0800_2861
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_285A:
	di_346 = 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2861:
	branch di_346 == 0x0001 l0800_288E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2868:
	word16 di_275 = (word16) ptrArg02
	word16 cx_280 = 0xFFFF
// DataOut: al cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2870:
	branch cx_280 == 0x0000 l0800_2872
// DataOut: al cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2870_1:
	di_275 = di_275 + 0x0001
	cx_280 = cx_280 - 0x0001
	branch 0x00 == Mem0[0x0000:di_275:byte] l0800_2870
// DataOut: al cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2872:
	word16 cx_290 = ~cx_280
	word16 di_294 = di_275 - cx_290
	bool Z_298 = (bool) cond(di_294)
// DataOut: al cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2879:
	branch cx_290 == 0x0000 l0800_287B
// DataOut: al cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2879_2:
	Z_298 = (bool) cond(0x3A - Mem0[0x0000:di_372:byte]) (alias)
	di_294 = di_372 + 0x0001
	cx_290 = cx_290 - 0x0001
	word16 di_372 = di_294
	branch 0x3A == Mem0[0x0000:di_372:byte] l0800_2879
// DataOut: al cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_287B:
	branch Z_298 l0800_2884
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_287D:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2884:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_288E:
	word16 dx_94 = Mem0[ds:0x2E53:word16]
	word16 bx_95 = (word16) Mem0[ds:0x2E51:segptr32] + DPB(dx, 0x00, 8)
	word16 wLoc08_102 = Mem0[ds:0x2E53:word16]
	word16 wLoc0A_103 = Mem0[ds:0x2E51:word16] + 0x0008
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_2917:
	branch wLoc08_102 != dx_94 l0800_28C2
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_2922:
	branch wLoc0A_103 != bx_95 l0800_28C2
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_28C2:
	word16 si_150 = wLoc0A_103 + 0x0002
	word16 di_155 = (word16) ptrArg02
	word16 ax_156 = 0x0000
	word16 cx_161 = 0xFFFF
// DataOut: al ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28D4:
	branch cx_161 == 0x0000 l0800_28D6
// DataOut: al ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28D4_1:
	di_155 = di_155 + 0x0001
	cx_161 = cx_161 - 0x0001
	branch 0x00 == Mem0[0x0000:di_155:byte] l0800_28D4
// DataOut: al ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28D6:
	word16 cx_171 = ~cx_161
	word16 di_173 = di_155 - cx_171
	byte SCZO_175 = cond(di_173)
	bool Z_177 = (bool) SCZO_175
	bool C_178 = (bool) SCZO_175
// DataOut: ax cx di ds si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DA:
	branch cx_171 == 0x0000 l0800_28DC
// DataOut: ax cx di ds si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DA_2:
	byte SCZO_243 = cond(Mem0[wLoc08_102:si_370:byte] - Mem0[0x0000:di_369:byte])
	Z_177 = (bool) SCZO_243 (alias)
	C_178 = (bool) SCZO_243 (alias)
	si_150 = si_370 + 0x0001
	di_173 = di_369 + 0x0001
	cx_171 = cx_171 - 0x0001
	word16 di_369 = di_173
	word16 si_370 = si_150
	branch Mem0[wLoc08_102:si_370:byte] != Mem0[0x0000:di_369:byte] l0800_28DA
// DataOut: ax cx di ds si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DC:
	branch Z_177 l0800_28E3
// DataOut: ax ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DE:
	word16 ax_236 = 0x0000 - C_178
	ax_156 = ax_236 - 0xFFFF - (ax_236 <u 0x0000)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28E3:
	branch ax_156 != 0x0000 l0800_28F4
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Stack +0002(32)

l0800_28F4:
	wLoc08_102 = Mem0[ds:0x2E53:word16]
	wLoc0A_103 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[0x0000:(word16) ptrLoc0A:byte] << 0x08) + DPB(wLoc0A_103, 0x00, 8))
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_28E8:
	word16 dx_207
	*dxOut = wLoc08_102
	return wLoc0A_103
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

l0800_2927:
	word16 dx_260
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

fn0800_283D_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:di es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:si ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000



word16 fn0800_2931(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_2931_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_2931:
	selector es_15 = SLICE(ptrArg06, selector, 16)
	word16 di_16 = (word16) ptrArg06 + 0x0002
	word16 cx_22 = 0xFFFF
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2941:
	branch cx_22 == 0x0000 l0800_2943
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2941_1:
	di_16 = di_16 + 0x0001
	cx_22 = cx_22 - 0x0001
	branch 0x00 == Mem0[es_15:di_16:byte] l0800_2941
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2943:
	word16 cx_275 = ~cx_22
	word16 di_263 = di_16 - cx_275
	bool Z_271 = (bool) cond(di_263)
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2949:
	branch cx_275 == 0x0000 l0800_294B
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2949_2:
	Z_271 = (bool) cond(0x00 - Mem0[es_15:di_263:byte]) (alias)
	di_263 = di_263 + 0x0001
	cx_275 = cx_275 - 0x0001
	branch 0x00 == Mem0[es_15:di_263:byte] l0800_2949
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_294B:
	branch Z_271 l0800_2954
// DataOut: di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_294D:
	di_263 = 0x0001
// DataOut: di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2954:
	word16 wArg08_223 = 0x0000
	word16 wArg06_224 = di_263
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> es:0x0000 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_29B4:
	branch Mem0[ptrArg06:byte] != 0x00 l0800_2960
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_2960:
	word16 si_114 = wArg06_224
	word16 di_120 = (word16) ptrArg02
	selector es_121 = SLICE(ptrArg02, selector, 16)
	word16 ax_122 = 0x0000
	word16 cx_126 = 0xFFFF
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_296F:
	branch cx_126 == 0x0000 l0800_2971
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_296F_1:
	di_120 = di_120 + 0x0001
	cx_126 = cx_126 - 0x0001
	branch 0x00 == Mem0[es_121:di_120:byte] l0800_296F
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2971:
	word16 cx_134 = ~cx_126
	word16 di_135 = di_120 - cx_134
	byte SCZO_137 = cond(di_135)
	bool Z_139 = (bool) SCZO_137
	bool C_140 = (bool) SCZO_137
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2975:
	branch cx_134 == 0x0000 l0800_2977
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2975_2:
	byte SCZO_250 = cond(Mem0[wArg08_223:si_285:byte] - Mem0[es_121:di_284:byte])
	Z_139 = (bool) SCZO_250 (alias)
	C_140 = (bool) SCZO_250 (alias)
	si_114 = si_285 + 0x0001
	di_135 = di_284 + 0x0001
	cx_134 = cx_134 - 0x0001
	word16 di_284 = di_135
	word16 si_285 = si_114
	branch Mem0[wArg08_223:si_285:byte] != Mem0[es_121:di_284:byte] l0800_2975
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2977:
	branch Z_139 l0800_297E
// DataOut: ax ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2979:
	word16 ax_244 = 0x0000 - C_140
	ax_122 = ax_244 - 0xFFFF - (ax_244 <u 0x0000)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_297E:
	branch ax_122 != 0x0000 l0800_298D
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_298D:
	word16 di_176 = (word16) ptrArg06
	selector es_177 = SLICE(ptrArg06, selector, 16)
	word16 cx_182 = 0xFFFF
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2995:
	branch cx_182 == 0x0000 l0800_2997
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2995_1:
	di_176 = di_176 + 0x0001
	cx_182 = cx_182 - 0x0001
	branch 0x00 == Mem0[es_177:di_176:byte] l0800_2995
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2997:
	word16 cx_190 = ~cx_182
	word16 di_193 = di_176 - cx_190
	bool Z_197 = (bool) cond(di_193)
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299D:
	branch cx_190 == 0x0000 l0800_299F
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299D_2:
	Z_197 = (bool) cond(0x00 - Mem0[es_177:di_193:byte]) (alias)
	di_193 = di_193 + 0x0001
	cx_190 = cx_190 - 0x0001
	branch 0x00 == Mem0[es_177:di_193:byte] l0800_299D
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299F:
	branch Z_197 l0800_29A8
// DataOut: di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_29A1:
	di_193 = 0x0001
	es_177 = 0x0000
// DataOut: di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_29A8:
	wArg08_223 = es_177
	wArg06_224 = di_193 + 0x0004
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2983:
	word16 dx_166
	*dxOut = wArg08_223
	return wArg06_224
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_29BD:
	word16 dx_103
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_2931_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> di:di ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> dx:<invalid> si:si ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_29C5(word16 si, selector ds, segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg08, segptr32 ptrArg0A, selector psegArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_29C5_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0084(16) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_29C5:
	branch (Mem0[ds:0x45AE:word16] | Mem0[ds:0x45B0:word16]) != 0x0000 l0800_2A07
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0084(16) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_29D6:
	branch (Mem0[ds:0x45AA:word16] | Mem0[ds:0x45AC:word16]) != 0x0000 l0800_2A07
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0084(16) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_29DF:
	ptrLoc82 = DPB(ptrLoc82, 0x4541, 0) (alias)
	byte dl_929
	branch fn0800_2DE2(si, ds, ptrLoc82, ds, out dl_929, out ds) != 0x0000 l0800_29F6
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_29F6:
	word16 dx_959 = Mem0[ds:0x2E51:word16]
	Mem962[ds:0x45B0:word16] = Mem0[ds:0x2E53:word16]
	Mem963[ds:0x45AE:word16] = dx_959 + 0x0008
	dx = dx_959 + 0x0008
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -130(fp):0x4541 -128(fp):ds -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2A07:
	fn0800_3509(fp - 0x006C, ss, 0x4541, ds)
	fn0800_35A3(fp - 0x007A, ss, 0x4541, ds)
	word16 dx_100 = Mem0[ds:0x2E53:word16]
	word16 bx_101 = (word16) Mem0[ds:0x2E51:segptr32] + ((DPB(fp - 0x007A, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8))
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -130(fp):0x4541 -128(fp):ds -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C53:
	word16 dx_135 = Mem0[ds:0x45AE:word16]
	branch Mem0[ds:0x45B0:word16] == dx_100 l0800_2C62
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C62:
	branch dx_135 == bx_101 l0800_2C6A
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C6A:
	Mem877[ds:0x45AC:word16] = 0x0000
	Mem878[ds:0x45AA:word16] = 0x0000
	Mem879[ds:0x45B0:word16] = 0x0000
	Mem880[ds:0x45AE:word16] = 0x0000
	selector ds_906
	return fn0800_29C5(si, ds, DPB(ptrLoc8A, wArg02, 0), wArg04, DPB(ptrLoc86, wArg06, 0), wArg08, DPB(ptrLoc82, wArg0A, 0), psegArg0C, out ds_906)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2C67:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C5F:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2A4C:
	branch (Mem0[ds:0x45AA:word16] | Mem0[ds:0x45AC:word16]) != 0x0000 l0800_2A58
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2A58:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B54:
	branch Mem0[Mem0[ds:0x45AA:segptr32]:byte] == 0x00 l0800_2B61
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B61:
	word16 bx_867 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[Mem0[ds:0x45AE:segptr32]:byte] << 0x08) + DPB(dx_135, 0x00, 8))
	Mem869[ds:0x45B0:word16] = Mem0[ds:0x2E53:word16]
	Mem870[ds:0x45AE:word16] = bx_867
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B5E:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2A5B:
	ptrLoc82 = DPB(ptrLoc82, fp - 0x007A, 0) (alias)
	ptrLoc86 = DPB(ptrLoc86, Mem0[ds:0x45AA:word16], 0) (alias)
	branch fn0800_4357(ptrLoc86, ptrLoc82) != 0x0000 l0800_2A75
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2A75:
	word16 dx_578 = Mem0[ds:0x45AE:word16]
	Mem579[ptrArg02 + 0x0002:word16] = Mem0[ds:0x45B0:word16]
	Mem580[ptrArg02:word16] = dx_578
	word16 dx_586 = Mem580[ds:0x45AA:word16]
	Mem587[ptrArg06 + 0x0002:word16] = Mem580[ds:0x45AC:word16]
	Mem588[ptrArg06:word16] = dx_586
	ptr32 es_di_589 = Mem588[ds:0x45AE:segptr32]
	selector es_591 = SLICE(es_di_589, selector, 16)
	word16 di_602 = (word16) es_di_589 + 0x0002
	word16 cx_617 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):fp - 0x007A -128(fp):ss -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16) Local -0082(16) Stack +000A(32)

l0800_2AB3:
	branch cx_617 == 0x0000 l0800_2AB5
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0082 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16) Local -0082(16) Stack +000A(32)

l0800_2AB3_1:
	di_602 = di_602 + 0x0001
	cx_617 = cx_617 - 0x0001
	branch 0x00 == Mem588[es_591:di_602:byte] l0800_2AB3
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0082 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16) Local -0082(16) Stack +000A(32)

l0800_2AB5:
	word16 cx_627 = ~cx_617
	word16 cx_629 = cx_627 >>u 0x0001
	word16 si_635 = di_602 - cx_627
	word16 di_636 = wArg0A
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0082 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16) Stack +000A(32)

l0800_2AC4:
	branch cx_629 == 0x0000 l0800_2AC6
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16) Stack +000A(32)

l0800_2AC6:
	word16 cx_658 = cx_629 * 0x0002 + (cx_627 >>u 0x0001 <u 0x0000)
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16) Stack +000A(32)

l0800_2AC8:
	branch cx_658 == 0x0000 l0800_2ACA
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16) Stack +000A(32)

l0800_2ACA:
	word16 di_677 = (word16) ptrArg0A
	selector es_678 = SLICE(ptrArg0A, selector, 16)
	selector es_681 = Mem588[ds:0x45AC:selector]
	word16 di_685 = Mem588[ds:0x45AA:word16]
	word16 cx_691 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16) Local -0082(16)

l0800_2ADD:
	branch cx_691 == 0x0000 l0800_2ADF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0082 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16) Local -0082(16)

l0800_2ADD_1:
	di_685 = di_685 + 0x0001
	cx_691 = cx_691 - 0x0001
	branch 0x00 == Mem588[es_681:di_685:byte] l0800_2ADD
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0082 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16) Local -0082(16)

l0800_2ADF:
	word16 cx_703 = ~cx_691
	word16 si_705 = di_685 - cx_703
	word16 di_706 = di_677
	word16 cx_719 = 0xFFFF
// DataOut: al cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0082 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16)

l0800_2AF3:
	branch cx_719 == 0x0000 l0800_2AF5
// DataOut: al cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16)

l0800_2AF3_2:
	di_706 = di_706 + 0x0001
	cx_719 = cx_719 - 0x0001
	branch 0x00 == Mem588[es_678:di_706:byte] l0800_2AF3
// DataOut: al cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16)

l0800_2AF5:
	word16 di_734 = di_706 - 0x0001
	word16 cx_737 = cx_703
// DataOut: al cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_2AF7:
	branch cx_737 == 0x0000 l0800_2AF9
// DataOut: al cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_2AF9:
	ptr32 es_di_753 = Mem588[ds:0x45AA:segptr32]
	selector ds_752
	*dsOut = ds
	word16 di_754 = (word16) es_di_753
	selector es_755 = SLICE(es_di_753, selector, 16)
	word16 cx_756 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_2B02:
	branch cx_756 == 0x0000 l0800_2B04
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_2B02_1:
	di_754 = di_754 + 0x0001
	cx_756 = cx_756 - 0x0001
	branch 0x00 == Mem588[es_755:di_754:byte] l0800_2B02
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_2B04:
	word16 cx_766 = ~cx_756
	word16 di_770 = di_754 - cx_766
	bool Z_774 = (bool) cond(di_770)
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_2B0A:
	branch cx_766 == 0x0000 l0800_2B0C
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_2B0A_2:
	Z_774 = (bool) cond(0x00 - Mem588[es_755:di_770:byte]) (alias)
	di_770 = di_770 + 0x0001
	cx_766 = cx_766 - 0x0001
	branch 0x00 == Mem588[es_755:di_770:byte] l0800_2B0A
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_2B0C:
	branch Z_774 l0800_2B15
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_2B0E:
	di_770 = 0x0001
	es_755 = 0x0000
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_2B15:
	Mem802[ds:0x45AC:word16] = es_755
	Mem803[ds:0x45AA:word16] = di_770 + 0x0004
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF7_3:
	Mem746[es_678:di_734:byte] = Mem588[es_681:si_705:byte]
	si_705 = si_705 + 0x0001
	di_734 = di_734 + 0x0001
	cx_737 = cx_737 - 0x0001
// DataOut: al cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_2AC8_1:
	Mem667[psegArg0C:di_636:byte] = Mem588[es_591:si_635:byte]
	si_635 = si_635 + 0x0001
	di_636 = di_636 + 0x0001
	cx_658 = cx_658 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16) Stack +000A(32)

l0800_2AC4_2:
	Mem652[psegArg0C:di_636:word16] = Mem588[es_591:si_635:word16]
	si_635 = si_635 + 0x0002
	di_636 = di_636 + 0x0002
	cx_629 = cx_629 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0080(16) Stack +000A(32)

l0800_2A72:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):fp - 0x007A -128(fp):ss -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B2B:
	ptr32 es_di_497 = Mem0[ds:0x45AA:segptr32]
	word16 di_498 = (word16) es_di_497
	selector es_499 = SLICE(es_di_497, selector, 16)
	word16 cx_504 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):fp - 0x007A -128(fp):ss -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B34:
	branch cx_504 == 0x0000 l0800_2B36
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):fp - 0x007A -128(fp):ss -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B34_1:
	di_498 = di_498 + 0x0001
	cx_504 = cx_504 - 0x0001
	branch 0x00 == Mem0[es_499:di_498:byte] l0800_2B34
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):fp - 0x007A -128(fp):ss -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B36:
	word16 cx_514 = ~cx_504
	word16 di_518 = di_498 - cx_514
	bool Z_522 = (bool) cond(di_518)
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):fp - 0x007A -128(fp):ss -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B3C:
	branch cx_514 == 0x0000 l0800_2B3E
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):fp - 0x007A -128(fp):ss -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B3C_2:
	Z_522 = (bool) cond(0x00 - Mem0[es_499:di_518:byte]) (alias)
	di_518 = di_518 + 0x0001
	cx_514 = cx_514 - 0x0001
	branch 0x00 == Mem0[es_499:di_518:byte] l0800_2B3C
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):fp - 0x007A -128(fp):ss -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B3E:
	branch Z_522 l0800_2B47
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):fp - 0x007A -128(fp):ss -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B40:
	di_518 = 0x0001
	es_499 = 0x0000
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):fp - 0x007A -128(fp):ss -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B47:
	Mem550[ds:0x45AC:word16] = es_499
	Mem551[ds:0x45AA:word16] = di_518 + 0x0004
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):fp - 0x007A -128(fp):ss -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2A55:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C12:
	word16 dx_170 = Mem0[ds:0x45AE:word16]
	branch Mem0[ds:0x45B0:word16] == dx_100 l0800_2C21
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C21:
	branch dx_170 == bx_101 l0800_2C29
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C26:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C1E:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B8A:
	branch Mem0[ds:0x2A1B:word16] == 0x0000 l0800_2BBB
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B91:
	word16 di_407 = fp - 0x006C
	word16 cx_413 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B9B:
	branch cx_413 == 0x0000 l0800_2B9D
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:ss di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):ss -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B9B_1:
	di_407 = di_969 + 0x0001
	cx_413 = cx_413 - 0x0001
	word16 di_969 = di_407
	branch 0x00 == Mem0[ss:di_969:byte] l0800_2B9B
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:ss di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):ss -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2B9D:
	ptrLoc84 = DPB(ptrLoc84, fp - 0x006C, 0) (alias)
	ptrLoc88 = DPB(ptrLoc88, Mem0[ds:0x45AE:word16] + 0x0002, 0) (alias)
	branch fn0800_BFE6(ptrLoc88, ptrLoc84, ~cx_413 - 0x0001) == 0x0000 l0800_2C29
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:ss di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):ss -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2BBB:
	branch Mem0[ds:0x2A1B:word16] != 0x0000 l0800_2BEC
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2BC2:
	si = Mem0[ds:0x45AE:word16] + 0x0002
	selector ds_321 = Mem0[ds:0x45B0:selector]
	word16 di_327 = fp - 0x006C
	word16 ax_329 = 0x0000
	word16 cx_334 = 0xFFFF
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0080(16) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2BD8:
	branch cx_334 == 0x0000 l0800_2BDA
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:ss di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):ss -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0080(16) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2BD8_2:
	di_327 = di_327 + 0x0001
	cx_334 = cx_334 - 0x0001
	branch 0x00 == Mem0[ss:di_327:byte] l0800_2BD8
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:ss di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):ss -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0080(16) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2BDA:
	word16 cx_344 = ~cx_334
	word16 di_346 = di_327 - cx_344
	byte SCZO_348 = cond(di_346)
	bool Z_350 = (bool) SCZO_348
	bool C_351 = (bool) SCZO_348
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:ss di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):ss -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0080(16) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2BDE:
	branch cx_344 == 0x0000 l0800_2BE0
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:ss di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):ss -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0080(16) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2BDE_3:
	byte SCZO_387 = cond(Mem0[ds_321:si:byte] - Mem0[ss:di_967:byte])
	Z_350 = (bool) SCZO_387 (alias)
	C_351 = (bool) SCZO_387 (alias)
	si = si + 0x0001
	di_346 = di_967 + 0x0001
	cx_344 = cx_344 - 0x0001
	word16 di_967 = di_346
	branch Mem0[ds_321:si:byte] != Mem0[ss:di_967:byte] l0800_2BDE
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:ss di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):ss -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0080(16) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2BE0:
	branch Z_350 l0800_2BE7
// DataOut: ax si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:ss di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):ss -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0080(16) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2BE2:
	word16 ax_380 = 0x0000 - C_351
	ax_329 = ax_380 - 0xFFFF - (ax_380 <u 0x0000)
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:ss di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):ss -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0080(16) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2BE7:
	branch ax_329 == 0x0000 l0800_2C29
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0080 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:ss di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):ss -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C29:
	ptr32 es_di_189 = Mem0[ds:0x45AE:segptr32]
	selector es_191 = SLICE(es_di_189, selector, 16)
	word16 di_192 = (word16) es_di_189 + 0x0002
	word16 cx_198 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C35:
	branch cx_198 == 0x0000 l0800_2C37
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C35_1:
	di_192 = di_192 + 0x0001
	cx_198 = cx_198 - 0x0001
	branch 0x00 == Mem0[es_191:di_192:byte] l0800_2C35
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C37:
	word16 cx_208 = ~cx_198
	word16 di_212 = di_192 - cx_208
	bool Z_216 = (bool) cond(di_212)
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C3D:
	branch cx_208 == 0x0000 l0800_2C3F
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C3D_2:
	Z_216 = (bool) cond(0x00 - Mem0[es_191:di_212:byte]) (alias)
	di_212 = di_212 + 0x0001
	cx_208 = cx_208 - 0x0001
	branch 0x00 == Mem0[es_191:di_212:byte] l0800_2C3D
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C3F:
	branch Z_216 l0800_2C48
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C41:
	di_212 = 0x0001
	es_191 = 0x0000
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2C48:
	Mem243[ds:0x45AC:word16] = es_191
	Mem244[ds:0x45AA:word16] = di_212
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_2BEC:
	word16 bx_313 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[Mem0[ds:0x45AE:segptr32]:byte] << 0x08) + DPB(dx_170, 0x00, 8))
	Mem315[ds:0x45B0:word16] = Mem0[ds:0x2E53:word16]
	Mem316[ds:0x45AE:word16] = bx_313
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0088(16) Local -008A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_29EE:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -130(fp):0x4541 -128(fp):ds -126(fp):di -124(fp):si -2(fp):bp

fn0800_29C5_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -138(fp):<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_2C9A(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: si sp
fn0800_2C9A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_2C9A:
	word16 cx_15 = 0x0000
	word16 si_18 = 0x2A29
// DataOut: bp cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_2CA0:
	word16 dx_19 = cx_15
	word16 bx_20 = 0x0008
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CBD:
	branch bx_20 != 0x0000 l0800_2CA7
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CA7:
	word16 ax_40
	branch (dx_19 & 0x0001) == 0x0000 l0800_2CB6
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CB6:
	ax_40 = dx_19 >>u 0x0001
// DataOut: ax bp bx cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CAD:
	ax_40 = dx_19 >>u 0x0001 ^ 0xA001
// DataOut: ax bp bx cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CBA:
	dx_19 = ax_40
	bx_20 = bx_20 - 0x0001
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CC1:
	Mem29[ds:si_18:word16] = dx_19
	si_18 = si_18 + 0x0002
	cx_15 = cx_15 + 0x0001
	branch cx_15 <u 0x0100 l0800_2CA0
// DataOut: bp cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CCD:
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

fn0800_2C9A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> si:si dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si



word16 fn0800_2CCF(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al ax
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_2CCF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_2CCF:
	word16 si_10 = wArg06
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2CFD:
	si_10 = si_10 - 0x0001
	branch si_10 != 0x0000 l0800_2CD8
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2CD8:
	wArg08 = Mem0[ds:((DPB(si_10, 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ wArg08 >>u 0x08
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2D04:
	return wArg08
// DataOut: al ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>

fn0800_2CCF_exit:
// DataOut: al ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>



word16 fn0800_2D0A(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_2D0A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_2D0A:
	selector ds_135
	fn0800_4311(fp - 2, ds, 0xFFF0, 0x0000, out ds_135)
	Mem23[ss:fp - 0x0004:word16] = 0xFFF0
	Mem25[ss:fp - 0x0006:word16] = 0x0000
	Mem28[ss:fp - 0x0012:word16] = Mem25[ss:fp + 0x0004:word16]
	Mem31[ss:fp - 0x0014:word16] = Mem28[ss:fp + 0x0002:word16]
	word16 ax_34 = fn0800_AD2F(ds_135, ptrArg00, wArg02)
	Mem36[ss:fp - 0x000C:word16] = 0xFFF0
	Mem37[ss:fp - 0x000E:word16] = ax_34
	word16 si_152 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_2D8F:
	branch (Mem37[ss:fp + 0x0006:word16] | Mem37[ss:fp + 0x0008:word16]) != 0x0000 l0800_2D3A
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D3A:
	word16 ax_113
	word16 dx_109
	branch Mem37[ss:fp + 0x0008:word16] <u 0x0000 l0800_2D4F
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D40:
	branch Mem37[ss:fp + 0x0008:word16] >u 0x0000 l0800_2D48
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D42:
	branch Mem37[ss:fp + 0x0006:word16] <=u 0xFFF0 l0800_2D4F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D4F:
	dx_109 = Mem37[ss:fp + 0x0008:word16]
	ax_113 = Mem37[ss:fp + 0x0006:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D48:
	dx_109 = 0x0000
	ax_113 = 0xFFF0
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D55:
	Mem114[ss:fp - 0x0008:word16] = dx_109
	Mem115[ss:fp - 0x000A:word16] = ax_113
	Mem118[ss:fp - 0x0012:word16] = Mem115[ss:fp + 0x0004:word16]
	Mem121[ss:fp - 0x0014:word16] = Mem118[ss:fp + 0x0002:word16]
	Mem124[ss:fp - 0x0016:word16] = Mem121[ss:fp - 0x0008:word16]
	Mem126[ss:fp - 0x0018:word16] = ax_113
	Mem129[ss:fp - 0x001A:word16] = Mem126[ss:fp - 0x0004:word16]
	Mem132[ss:fp - 0x001C:word16] = Mem129[ss:fp - 0x0006:word16]
	word16 di_134
	Mem140[ss:fp - 0x0012:word16] = fn0800_4110(ds_135, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_134, out ds_135)
	Mem143[ss:fp - 0x0014:word16] = Mem140[ss:fp - 0x000A:word16]
	Mem146[ss:fp - 0x0016:word16] = Mem143[ss:fp - 0x0004:word16]
	Mem149[ss:fp - 0x0018:word16] = Mem146[ss:fp - 0x0006:word16]
	si_152 = fn0800_2CCF(ds_135, ptrArg00, wArg04, wArg06)
	Mem157[ss:fp + 0x0006:word16] = Mem149[ss:fp + 0x0006:word16] - Mem149[ss:fp - 0x000A:word16]
	Mem161[ss:fp + 0x0008:word16] = v30
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D97:
	Mem65[ss:fp - 0x0012:word16] = 0x0000
	Mem68[ss:fp - 0x0014:word16] = Mem65[ss:fp - 0x000C:word16]
	Mem71[ss:fp - 0x0016:word16] = Mem68[ss:fp - 0x000E:word16]
	Mem74[ss:fp - 0x0018:word16] = Mem71[ss:fp + 0x0004:word16]
	Mem77[ss:fp - 0x001A:word16] = Mem74[ss:fp + 0x0002:word16]
	selector ds_81
	fn0800_ACB3(ds_135, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_81)
	Mem87[ss:fp - 0x0012:word16] = Mem77[ss:fp - 0x0004:word16]
	Mem90[ss:fp - 0x0014:word16] = Mem87[ss:fp - 0x0006:word16]
	selector ds_92
	fn0800_4346(ds_81, wArg00, wArg02, out ds_92)
	return si_152
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_2D0A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> cx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



void fn0800_2DBF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: ah al ax eax rax
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_2DBF_entry:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_2DBF:
	Mem6[ds:0x4656:word16] = 0xFFFF
	Mem8[ds:0x4654:word16] = 0x0000
	Mem10[ds:0x4652:word16] = Mem8[ds:0x2A27:word16]
	Mem13[ds:0x4650:word16] = wArg02
	Mem16[ds:0x464E:word16] = wArg04
	return
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_2DBF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> -2(fp):bp



word16 fn0800_2DE2(word16 si, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si ss
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_2DE2_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -001C(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2DE2:
	branch Mem0[ds:0x4654:word16] != 0x0000 l0800_2E11
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -001C(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2DF1:
	branch Mem0[ds:0x4652:word16] != Mem0[ds:0x4656:word16] l0800_2E11
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2DFA:
	branch Mem0[ds:0x464E:word16] == 0x0000 l0800_2E11
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2E01:
	byte dl_1213
	si = fn0800_3479(ds, DPB(ptrLoc1C, fp - 0x0012, 0), ss, 0x0000, out dl_1213, out ds)
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2E11:
	branch Mem0[ds:0x4654:word16] != 0x0000 l0800_2E1B
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> di:<invalid> -28(fp):fp - 0x0012 -26(fp):ss -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2E1B:
	Mem815[ds:0x4617:word16] = 0x0000
	word16 dx_831
	selector ds_832
	word16 ax_833 = fn0800_A77D(ds, 0x45B2, ds, 0x0065, DPB(ptrLoc1A, Mem815[ds:0x461B:word16], 0), Mem815[ds:0x461D:word16], out dx_831, out ds_832)
	branch (ax_833 | dx_831) != 0x0000 l0800_2E3F
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> di:<invalid> -28(fp):fp - 0x0012 -26(fp):ss -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E3F:
	selector es_1182 = ds_832
	word16 di_1194 = 0x45B2
	word16 cx_1196 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> di:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E49:
	branch cx_1196 == 0x0000 l0800_2E4B
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E49_1:
	di_1194 = di_1194 + 0x0001
	cx_1196 = cx_1196 - 0x0001
	branch 0x00 == Mem815[ds_832:di_1194:byte] l0800_2E49
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E4B:
	word16 cx_1191 = ~cx_1196
	word16 di_1178 = di_1194 - cx_1191
	bool Z_1186 = (bool) cond(di_1178)
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E52:
	branch cx_1191 == 0x0000 l0800_2E54
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E52_2:
	Z_1186 = (bool) cond(0x0D - Mem815[ds_832:di_1178:byte]) (alias)
	di_1178 = di_1178 + 0x0001
	cx_1191 = cx_1191 - 0x0001
	branch 0x0D == Mem815[ds_832:di_1178:byte] l0800_2E52
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E54:
	branch Z_1186 l0800_2E5D
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E56:
	di_1178 = 0x0001
	es_1182 = 0x0000
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E5D:
	branch (di_1178 - 0x0001 | es_1182) == 0x0000 l0800_2E8B
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E64:
	selector es_1110 = ds_832
	word16 di_1113 = 0x45B2
	word16 cx_1119 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E6E:
	branch cx_1119 == 0x0000 l0800_2E70
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E6E_1:
	di_1113 = di_1113 + 0x0001
	cx_1119 = cx_1119 - 0x0001
	branch 0x00 == Mem815[ds_832:di_1113:byte] l0800_2E6E
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E70:
	word16 cx_1127 = ~cx_1119
	word16 di_1129 = di_1113 - cx_1127
	bool Z_1132 = (bool) cond(di_1129)
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E77:
	branch cx_1127 == 0x0000 l0800_2E79
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E77_2:
	Z_1132 = (bool) cond(0x0D - Mem815[ds_832:di_1129:byte]) (alias)
	di_1129 = di_1129 + 0x0001
	cx_1127 = cx_1127 - 0x0001
	branch 0x0D == Mem815[ds_832:di_1129:byte] l0800_2E77
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E79:
	branch Z_1132 l0800_2E82
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E7B:
	di_1129 = 0x0001
	es_1110 = 0x0000
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E82:
	Mem1158[es_1110:di_1129 - 0x0001:byte] = 0x00
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E8B:
	branch (int16) Mem815[ds_832:0x45B2:byte] != 0x0000 l0800_2EA5
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2EA5:
	word16 di_1105 = 0x45B2
	word16 cx_1107 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(32) Stack +0004(16)

l0800_2EAF:
	branch cx_1107 == 0x0000 l0800_2EB1
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(32) Stack +0004(16)

l0800_2EAF_1:
	di_1105 = di_1231 + 0x0001
	cx_1107 = cx_1107 - 0x0001
	word16 di_1231 = di_1105
	branch 0x00 == Mem815[ds_832:di_1231:byte] l0800_2EAF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(32) Stack +0004(16)

l0800_2EB1:
	Mem984[ds_832:0x4619:word16] = ~cx_1107 - 0x0001
	ptrLoc1A = DPB(ptrLoc1A, 0x45B2, 0) (alias)
	byte dl_991 = fn0800_0C6C(ds_832, ptrLoc1A)
	*dlOut = dl_991
	dx = DPB(dx_831, dl_991, 0) (alias)
	branch Mem984[ds_832:0x464E:word16] != 0x0000 l0800_2EFE
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_2EFE:
	ptrLoc20 = DPB(ptrLoc20, fp - 0x0012, 0) (alias)
	byte dl_1096
	si = fn0800_33CD(ds_832, ptrLoc20, ss, 0x0000, 0x45B2, ds_832, out dl_1096, out ds)
	Mem1102[ds:0x4654:word16] = 0x0000
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2ECA:
	word16 di_997 = (word16) ptrArg02
	selector es_998 = SLICE(ptrArg02, selector, 16)
	word16 di_1008 = 0x45B2
	word16 cx_1014 = 0xFFFF
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_2ED9:
	branch cx_1014 == 0x0000 l0800_2EDB
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_2ED9_2:
	di_1008 = di_1008 + 0x0001
	cx_1014 = cx_1014 - 0x0001
	branch 0x00 == Mem984[ds_832:di_1008:byte] l0800_2ED9
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_2EDB:
	word16 cx_1022 = ~cx_1014
	word16 cx_1024 = cx_1022 >>u 0x0001
	word16 si_1029 = di_1008 - cx_1022
	word16 di_1030 = di_997
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEA:
	branch cx_1024 == 0x0000 l0800_2EEC
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEC:
	word16 cx_1050 = cx_1024 * 0x0002 + (cx_1022 >>u 0x0001 <u 0x0000)
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEE:
	branch cx_1050 == 0x0000 l0800_2EF0
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EF0:
	Mem1065[ds_832:0x4617:word16] = Mem984[ds_832:0x4617:word16] + 0x0001
	selector ds_1062
	*dsOut = ds_832
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2EEE_1:
	Mem1057[es_998:di_1030:byte] = Mem984[ds_832:si_1029:byte]
	si_1029 = si_1029 + 0x0001
	di_1030 = di_1030 + 0x0001
	cx_1050 = cx_1050 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEA_3:
	Mem1045[es_998:di_1030:word16] = Mem984[ds_832:si_1029:word16]
	si_1029 = si_1029 + 0x0002
	di_1030 = di_1030 + 0x0002
	cx_1024 = cx_1024 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2E93:
	byte dl_949
	selector ds_950
	return fn0800_2DE2(si, ds_832, DPB(ptrLoc1A, wArg02, 0), wArg04, out dl_949, out ds_950)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2E3C:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> di:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2F1B:
	byte dl_846
	word16 di_847
	selector ds_848
	fn0800_A614(ds_832, DPB(ptrLoc1A, Mem815[ds_832:0x461B:word16], 0), Mem815[ds_832:0x461D:word16], out dl_846, out di_847, out ds_848)
	Mem852[ds_848:0x4654:word16] = 0x0000
	Mem853[ds_848:0x461D:word16] = 0x0000
	Mem854[ds_848:0x461B:word16] = 0x0000
	Mem856[ds_848:0x4652:word16] = Mem854[ds_848:0x4652:word16] + 0x0001
	byte dl_865
	selector ds_866
	return fn0800_2DE2(si, ds_848, DPB(ptrLoc1A, wArg02, 0), wArg04, out dl_865, out ds_866)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> di:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2E18:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> di:<invalid> -28(fp):fp - 0x0012 -26(fp):ss -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2F51:
	word16 ax_86 = Mem0[ds:0x4652:word16]
	branch ax_86 != Mem0[ds:0x4656:word16] l0800_2F5D
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2F5D:
	branch ax_86 != Mem0[ds:0x269A:word16] l0800_2F6B
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2F6B:
	ptr32 es_bx_569 = Mem0[ds:0x269C:segptr32]
	fn0800_BF9E(DPB(ptrLoc1E, 0x45B2, 0), ds, DPB(ptrLoc1A, Mem0[SLICE(es_bx_569, selector, 16):(word16) es_bx_569 + (Mem0[ds:0x4652:word16] << 0x0002):word16], 0))
	word16 di_1227 = 0x45B2
	word16 cx_599 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2F94:
	branch cx_599 == 0x0000 l0800_2F96
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2F94_1:
	di_1227 = di_1227 + 0x0001
	cx_599 = cx_599 - 0x0001
	branch 0x00 == Mem0[ds:di_1227:byte] l0800_2F94
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2F96:
	Mem611[ds:0x4619:word16] = ~cx_599 - 0x0001
	fn0800_0C6C(ds, DPB(ptrLoc1A, 0x45B2, 0))
	word16 ax_620 = Mem611[ds:0x4652:word16]
	Mem621[ds:0x4656:word16] = ax_620
	Mem622[ds:0x4617:word16] = 0x0000
	branch Mem622[Mem622[ds:(word16) Mem622[ds:0x269C:segptr32] + (ax_620 << 0x0002):segptr32]:byte] != 0x40 l0800_3007
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_3007:
	ptrLoc1A = DPB(ptrLoc1A, 0x45B2, 0) (alias)
	byte dl_687
	*dlOut = fn0800_335C(ds, ptrLoc1A, ds)
	branch Mem622[ds:0x464E:word16] != 0x0000 l0800_3051
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3051:
	ptrLoc20 = DPB(ptrLoc20, fp - 0x0012, 0) (alias)
	byte dl_795
	si = fn0800_33CD(ds, ptrLoc20, ss, 0x0000, 0x45B2, ds, out dl_795, out ds)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_3019:
	word16 di_694 = (word16) ptrArg02
	selector es_695 = SLICE(ptrArg02, selector, 16)
	word16 di_1228 = 0x45B2
	word16 cx_711 = 0xFFFF
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_3028:
	branch cx_711 == 0x0000 l0800_302A
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_3028_1:
	di_1228 = di_1228 + 0x0001
	cx_711 = cx_711 - 0x0001
	branch 0x00 == Mem622[ds:di_1228:byte] l0800_3028
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_302A:
	word16 cx_719 = ~cx_711
	word16 cx_721 = cx_719 >>u 0x0001
	word16 si_726 = di_1228 - cx_719
	word16 di_727 = di_694
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_3039:
	branch cx_721 == 0x0000 l0800_303B
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_303B:
	word16 cx_747 = cx_721 * 0x0002 + (cx_719 >>u 0x0001 <u 0x0000)
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_303D:
	branch cx_747 == 0x0000 l0800_303F
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_303F:
	Mem762[ds:0x4617:word16] = Mem622[ds:0x4617:word16] + 0x0001
	Mem764[ds:0x4652:word16] = Mem762[ds:0x4652:word16] + 0x0001
	selector ds_759
	*dsOut = ds
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_303D_1:
	Mem754[es_695:di_727:byte] = Mem622[ds:si_726:byte]
	si_726 = si_726 + 0x0001
	di_727 = di_727 + 0x0001
	cx_747 = cx_747 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_3039_2:
	Mem742[es_695:di_727:word16] = Mem622[ds:si_726:word16]
	si_726 = si_726 + 0x0002
	di_727 = di_727 + 0x0002
	cx_721 = cx_721 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2FC7:
	ptr32 es_bx_641 = Mem622[ds:0x269C:segptr32]
	selector es_642 = SLICE(es_bx_641, selector, 16)
	word16 bx_644 = (word16) es_bx_641 + (Mem622[ds:0x4652:word16] << 0x0002)
	word16 ax_646 = Mem622[es_642:bx_644:word16]
	word16 di_654
	selector ds_655
	word16 si_656 = fn0800_4234(si, di_1227, ds, ax_646 + 0x0001, Mem622[es_642:bx_644 + 0x0002:word16], 0x0A13, ds, out di_654, out ds_655)
	Mem659[ds_655:0x461D:word16] = dx
	Mem660[ds_655:0x461B:word16] = ax_646 + 0x0001
	Mem661[ds_655:0x4654:word16] = 0x0001
	byte dl_669
	selector ds_670
	return fn0800_2DE2(si_656, ds_655, DPB(ptrLoc1A, wArg02, 0), wArg04, out dl_669, out ds_670)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2F63:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2F5A:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_3066:
	word16 si_112 = si
	branch si != 0x0000 l0800_306D
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_306D:
	branch Mem0[ds:0x2A1B:word16] == 0x0000 l0800_309E
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_3074:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_309A:
	branch si_112 != 0x0000 l0800_3076
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:bx:<invalid> di:<invalid> al:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_3076:
	branch fn0800_31B4(ds, 0x45B2, ds, out ds) == 0x0000 l0800_309E
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:bx:<invalid> di:<invalid> al:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_3085:
	ptrLoc20 = DPB(ptrLoc20, fp - 0x0012, 0) (alias)
	byte dl_546
	si_112 = fn0800_33CD(ds, ptrLoc20, ss, 0x0000, 0x45B2, ds, out dl_546, out ds)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:bx:<invalid> di:<invalid> al:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_309E:
	word16 si_440 = si_112
	branch si_112 == 0x0000 l0800_30F0
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_30A2:
	Mem445[ds:Mem0[ds:0x4619:word16] + 0x45B2:byte] = 0x00
	branch Mem445[ds:0x4617:word16] != 0x0000 l0800_30C9
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_30B2:
	branch Mem445[ds:0x4650:word16] == 0x0000 l0800_30C9
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_30B9:
	word16 di_498
	si_440 = fn0800_B2EF(ds, 0x0A17, ds, out di_498)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_30C9:
	branch (Mem445[ds:0x461B:word16] | Mem445[ds:0x461D:word16]) == 0x0000 l0800_30DA
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_30DA:
	Mem484[ds:0x4652:word16] = Mem445[ds:0x4652:word16] + 0x0001
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_30D2:
	Mem482[ds:0x4654:word16] = 0x0001
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_30DE:
	byte dl_469
	selector ds_470
	return fn0800_2DE2(si_440, ds, DPB(ptrLoc1A, wArg02, 0), wArg04, out dl_469, out ds_470)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_306A:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_30F0:
	fn0800_3509(wArg02, wArg04, 0x45B2, ds)
	word16 di_1219 = fp - 0x0012
	word16 cx_165 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_311B:
	branch cx_165 == 0x0000 l0800_311D
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 ax:<invalid> si:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_311B_1:
	di_1219 = di_1219 + 0x0001
	cx_165 = cx_165 - 0x0001
	branch 0x00 == Mem0[ss:di_1219:byte] l0800_311B
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 ax:<invalid> si:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_311D:
	word16 cx_175 = ~cx_165
	word16 si_177 = di_1219 - cx_175
	word16 di_1220 = wArg02
	word16 cx_189 = 0xFFFF
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 ax:<invalid> si:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3132:
	branch cx_189 == 0x0000 l0800_3134
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:0x0000 si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:ss bx:<invalid> Sequence es:bx:<invalid> al:0x00 ah:0x00 bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3132_2:
	di_1220 = di_1220 + 0x0001
	cx_189 = cx_189 - 0x0001
	branch 0x00 == Mem0[wArg04:di_1220:byte] l0800_3132
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:0x0000 si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:ss bx:<invalid> Sequence es:bx:<invalid> al:0x00 ah:0x00 bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3134:
	word16 di_201 = di_1220 - 0x0001
	word16 cx_204 = cx_175
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:0x0000 si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:ss bx:<invalid> Sequence es:bx:<invalid> al:0x00 ah:0x00 bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3136:
	branch cx_204 == 0x0000 l0800_3138
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:0x0000 si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:ss bx:<invalid> Sequence es:bx:<invalid> al:0x00 ah:0x00 bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3138:
	byte dl_224
	*dlOut = fn0800_0C6C(ds, DPB(ptrLoc1A, wArg02, 0))
	word16 si_1222 = wArg02
	word16 di_1221 = 0x4348
	word16 ax_239 = 0x0000
	word16 cx_243 = 0xFFFF
// DataOut: al ax cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:0x0000 si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:ss bx:<invalid> Sequence es:bx:<invalid> al:0x00 ah:0x00 bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_315A:
	branch cx_243 == 0x0000 l0800_315C
// DataOut: al ax cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_315A_1:
	di_1221 = di_1221 + 0x0001
	cx_243 = cx_243 - 0x0001
	branch 0x00 == Mem0[ds:di_1221:byte] l0800_315A
// DataOut: al ax cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_315C:
	word16 cx_251 = ~cx_243
	word16 di_252 = di_1221 - cx_251
	byte SCZO_254 = cond(di_252)
	bool Z_255 = (bool) SCZO_254
	bool C_257 = (bool) SCZO_254
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3160:
	branch cx_251 == 0x0000 l0800_3162
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3160_2:
	byte SCZO_403 = cond(Mem0[wArg04:si_1222:byte] - Mem0[ds:di_1223:byte])
	Z_255 = (bool) SCZO_403 (alias)
	C_257 = (bool) SCZO_403 (alias)
	si_1222 = si_1222 + 0x0001
	di_252 = di_1223 + 0x0001
	cx_251 = cx_251 - 0x0001
	word16 di_1223 = di_252
	branch Mem0[wArg04:si_1222:byte] != Mem0[ds:di_1223:byte] l0800_3160
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3162:
	branch Z_255 l0800_3169
// DataOut: ax dl si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3164:
	word16 ax_397 = 0x0000 - C_257
	ax_239 = ax_397 - 0xFFFF - (ax_397 <u 0x0000)
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3169:
	branch ax_239 == 0x0000 l0800_3195
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_316E:
	si_1222 = wArg02
	word16 di_1224 = 0x4477
	word16 ax_323 = 0x0000
	word16 cx_327 = 0xFFFF
// DataOut: al ax cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3181:
	branch cx_327 == 0x0000 l0800_3183
// DataOut: al ax cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3181_1:
	di_1224 = di_1224 + 0x0001
	cx_327 = cx_327 - 0x0001
	branch 0x00 == Mem0[ds:di_1224:byte] l0800_3181
// DataOut: al ax cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3183:
	word16 cx_335 = ~cx_327
	word16 di_336 = di_1224 - cx_335
	byte SCZO_338 = cond(di_336)
	bool Z_339 = (bool) SCZO_338
	bool C_341 = (bool) SCZO_338
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3187:
	branch cx_335 == 0x0000 l0800_3189
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3187_2:
	byte SCZO_384 = cond(Mem0[wArg04:si_1222:byte] - Mem0[ds:di_1226:byte])
	Z_339 = (bool) SCZO_384 (alias)
	C_341 = (bool) SCZO_384 (alias)
	si_1222 = si_1222 + 0x0001
	di_336 = di_1226 + 0x0001
	cx_335 = cx_335 - 0x0001
	word16 di_1226 = di_336
	branch Mem0[wArg04:si_1222:byte] != Mem0[ds:di_1226:byte] l0800_3187
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3189:
	branch Z_339 l0800_3190
// DataOut: ax dl si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_318B:
	word16 ax_378 = 0x0000 - C_341
	ax_323 = ax_378 - 0xFFFF - (ax_378 <u 0x0000)
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_3190:
	selector ds_361
	*dsOut = ds
	branch ax_323 != 0x0000 l0800_31A7
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_31A7:
	Mem368[ds:0x4617:word16] = Mem0[ds:0x4617:word16] + 0x0001
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp

l0800_3195:
	byte dl_299
	selector ds_300
	return fn0800_2DE2(si_1222, ds, DPB(ptrLoc1A, wArg02, 0), wArg04, out dl_299, out ds_300)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_2DE2_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> es:<invalid> bx:<invalid> di:di si:si cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp

l0800_3136_3:
	Mem211[wArg04:di_201:byte] = Mem0[ss:si_177:byte]
	si_177 = si_177 + 0x0001
	di_201 = di_201 + 0x0001
	cx_204 = cx_204 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 2 ax:0x0000 si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:ss bx:<invalid> Sequence es:bx:<invalid> al:0x00 ah:0x00 bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -001C(16) Stack +0002(16) Stack +0004(16)



word16 fn0800_31B4(selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_31B4_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_31B4:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_31BD:
	fn0800_3509(fp - 0x0084, ss, wArg02, wArg04)
	fn0800_35A3(fp - 0x0010, ss, wArg02, wArg04)
	selector ds_72
	branch fn0800_32CD(ds, fp - 0x001E, ss, fp - 0x0084, ss, Mem0[ds:(Mem0[ds:0x09AC:word16] << 0x0001) + 0x09AE:word16], out ds_72) != 0x0000 l0800_323E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0088 bp:fp - 2 ax:0x0000 bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:0x00 al:0x00 -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_323E:
	branch Mem0[ds_72:0x09AC:word16] != 0x0000 l0800_3253
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0088 bp:fp - 2 ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):ss -142(fp):fp - 0x0084 -140(fp):ss -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_3253:
	word16 di_180 = fp - 0x0084
	word16 cx_185 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0088 bp:fp - 2 ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):ss -142(fp):fp - 0x0084 -140(fp):ss -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_325E:
	branch cx_185 == 0x0000 l0800_3260
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0088 bp:fp - 2 ax:<invalid> bx:<invalid> es:ss di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):ss -142(fp):fp - 0x0084 -140(fp):ss -138(fp):ss -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_325E_1:
	di_180 = di_302 + 0x0001
	cx_185 = cx_185 - 0x0001
	word16 di_302 = di_180
	branch 0x00 == Mem0[ss:di_302:byte] l0800_325E
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0088 bp:fp - 2 ax:<invalid> bx:<invalid> es:ss di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):ss -142(fp):fp - 0x0084 -140(fp):ss -138(fp):ss -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_3260:
	Mem199[ss:~cx_185 - 0x0002 + (fp - 0x0084):byte] = 0x00
	fn0800_3509(wArg02, wArg04, fp - 0x0084, ss)
	word16 di_223 = fp - 0x0010
	word16 cx_236 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0088 bp:fp - 2 ax:<invalid> bx:<invalid> es:ss di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):ss -142(fp):fp - 0x0084 -140(fp):ss -138(fp):ss -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -008A(16) Local -008C(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_3298:
	branch cx_236 == 0x0000 l0800_329A
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008C bp:fp - 2 ax:<invalid> bx:<invalid> es:ss di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -008A(16) Local -008C(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_3298_2:
	di_223 = di_223 + 0x0001
	cx_236 = cx_236 - 0x0001
	branch 0x00 == Mem199[ss:di_223:byte] l0800_3298
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008C bp:fp - 2 ax:<invalid> bx:<invalid> es:ss di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -008A(16) Local -008C(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_329A:
	word16 cx_245 = ~cx_236
	word16 si_247 = di_223 - cx_245
	word16 di_248 = wArg02
	word16 cx_258 = 0xFFFF
// DataOut: cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008C bp:fp - 2 ax:<invalid> bx:<invalid> es:ss di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -008A(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_32AE:
	branch cx_258 == 0x0000 l0800_32B0
// DataOut: cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:0x0000 bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:ss ah:0x00 al:0x00 -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -008A(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_32AE_3:
	di_248 = di_248 + 0x0001
	cx_258 = cx_258 - 0x0001
	branch 0x00 == Mem199[wArg04:di_248:byte] l0800_32AE
// DataOut: cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:0x0000 bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:ss ah:0x00 al:0x00 -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -008A(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_32B0:
	word16 di_269 = di_248 - 0x0001
	word16 cx_271 = cx_245
// DataOut: cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 2 ax:0x0000 bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:ss ah:0x00 al:0x00 -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_32B2:
	branch cx_271 == 0x0000 l0800_32B4
// DataOut: cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0088 bp:fp - 2 ax:0x0000 bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:ss ah:0x00 al:0x00 -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_32B4:
	Mem283[ds_72:0x09AC:word16] = Mem199[ds_72:0x09AC:word16] - 0x0001
	word16 bx_284 = Mem283[ds_72:0x09AC:word16]
	Mem288[ds_72:(bx_284 << 0x0001) + 0x09AE:word16] = Mem283[ds_72:(bx_284 << 0x0001) + 0x09AE:word16] + 0x0001
	ds = ds_72
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0088 bp:fp - 2 ax:0x0000 bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:ss ah:0x00 al:0x00 -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_32B2_4:
	Mem277[wArg04:di_269:byte] = Mem199[ss:si_247:byte]
	si_247 = si_247 + 0x0001
	di_269 = di_269 + 0x0001
	cx_271 = cx_271 - 0x0001
// DataOut: cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0088 bp:fp - 2 ax:0x0000 bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:ss ah:0x00 al:0x00 -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0092(16) Local -0094(16) Stack +0002(16) Stack +0004(16)

l0800_3245:
	Mem158[ds_72:0x09AE:word16] = 0x0000
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0088 bp:fp - 2 ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):ss -142(fp):fp - 0x0084 -140(fp):ss -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp

l0800_31FF:
	word16 si_138
	word16 di_139
	fn0800_BEA2(ds_72, DPB(ptrLocA0, wArg02, 0), 0x0A27, ds_72, out si_138, out di_139)
	Mem143[ds_72:0x09AC:word16] = Mem0[ds_72:0x09AC:word16] + 0x0001
	Mem147[ds_72:(Mem143[ds_72:0x09AC:word16] << 0x0001) + 0x09AE:word16] = 0x0000
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0088 bp:fp - 2 ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):ss -142(fp):fp - 0x0084 -140(fp):ss -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp

fn0800_31B4_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> es:<invalid> di:di si:si cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -160(fp):<invalid> -158(fp):<invalid> -156(fp):0x0A27 -154(fp):<invalid> -152(fp):fp - 0x0084 -150(fp):ss -148(fp):fp - 0x001E -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp



word16 fn0800_32CD(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, selector psegArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_32CD_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_32CD:
	word16 di_218 = wArg06
	word16 cx_219 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32E7:
	branch cx_219 == 0x0000 l0800_32E9
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 2 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32E7_1:
	di_218 = di_218 + 0x0001
	cx_219 = cx_219 - 0x0001
	branch 0x00 == Mem0[psegArg08:di_218:byte] l0800_32E7
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 2 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32E9:
	word16 cx_40 = ~cx_219
	word16 cx_42 = cx_40 >>u 0x0001
	word16 si_47 = di_218 - cx_40
	word16 di_48 = fp - 0x0068
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0070 bp:fp - 2 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32F8:
	branch cx_42 == 0x0000 l0800_32FA
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FA:
	word16 cx_66 = cx_42 * 0x0002 + (cx_40 >>u 0x0001 <u 0x0000)
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FC:
	branch cx_66 == 0x0000 l0800_32FE
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FE:
	word16 di_214 = fp - 0x0068
	word16 si_104 = 0x0A32
	word16 cx_215 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_330C:
	branch cx_215 == 0x0000 l0800_330E
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_330C_1:
	di_214 = di_214 + 0x0001
	cx_215 = cx_215 - 0x0001
	branch 0x00 == Mem0[ss:di_214:byte] l0800_330C
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_330E:
	word16 di_100 = di_214 - 0x0001
	word16 cx_101 = 0x0004
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3312:
	branch cx_101 == 0x0000 l0800_3314
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3314:
	byte dl_125
	selector ds_126
	branch fn0800_33CD(ds, DPB(ptrLoc76, wArg02, 0), wArg04, 0x0010, fp - 0x0068, ss, out dl_125, out ds_126) == 0x0000 l0800_334D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_334D:
	branch wArg0A != 0x0000 l0800_3336
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3336:
	ptrLoc72 = DPB(ptrLoc72, wArg02, 0) (alias)
	byte dl_201
	branch fn0800_3479(ds_126, ptrLoc72, wArg04, 0x0010, out dl_201, out ds_126) != 0x0000 l0800_3353
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_334A:
	wArg0A = wArg0A - 0x0001
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):0x0010 -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3353:
	return wArg0A
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_332D:
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):0x0010 -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp

fn0800_32CD_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp es:<invalid> di:di ax:<invalid> cx:<invalid> si:si ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_3312_2:
	Mem103[ss:di_100:byte] = Mem0[ds:si_104:byte]
	si_104 = si_104 + 0x0001
	di_100 = di_100 + 0x0001
	cx_101 = cx_101 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 2 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FC_1:
	Mem72[ss:di_48:byte] = Mem0[psegArg08:si_47:byte]
	si_47 = si_47 + 0x0001
	di_48 = di_48 + 0x0001
	cx_66 = cx_66 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32F8_2:
	Mem62[ss:di_48:word16] = Mem0[psegArg08:si_47:word16]
	si_47 = si_47 + 0x0002
	di_48 = di_48 + 0x0002
	cx_42 = cx_42 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)



byte fn0800_335C(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_335C_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_335C:
	selector ds_35
	byte dl_34
	branch fn0800_33CD(ds, DPB(ptrLoc2C, fp - 0x0010, 0), ss, 0x0010, wArg02, wArg04, out dl_34, out ds_35) != 0x0000 l0800_33C7
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -002C(16) Stack +0002(16) Stack +0004(16)

l0800_337D:
	dl_34 = fn0800_35A3(fp - 0x001E, ss, wArg02, wArg04)
	word16 si_114 = fp - 0x0010
	word16 di_101 = fp - 0x001E
	word16 ax_126 = 0x0000
	word16 cx_100 = 0xFFFF
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0022 bp:fp - 2 ax:<invalid> es:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> di:<invalid> -44(fp):fp - 0x0010 -42(fp):ss -40(fp):0x0010 -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0024(16) Stack +0002(32)

l0800_33A0:
	branch cx_100 == 0x0000 l0800_33A2
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0024 bp:fp - 2 ax:0x0000 si:fp - 0x0010 ds:ss es:ss di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):ss -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0024(16) Stack +0002(32)

l0800_33A0_1:
	di_101 = di_101 + 0x0001
	cx_100 = cx_100 - 0x0001
	branch 0x00 == Mem0[ss:di_101:byte] l0800_33A0
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0024 bp:fp - 2 ax:0x0000 si:fp - 0x0010 ds:ss es:ss di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):ss -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0024(16) Stack +0002(32)

l0800_33A2:
	word16 cx_103 = ~cx_100
	word16 di_104 = di_101 - cx_103
	byte SCZO_106 = cond(di_104)
	bool Z_108 = (bool) SCZO_106
	bool C_109 = (bool) SCZO_106
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0024 bp:fp - 2 ax:0x0000 si:fp - 0x0010 ds:ss es:ss di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):ss -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0024(16) Stack +0002(32)

l0800_33A6:
	branch cx_103 == 0x0000 l0800_33A8
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0024 bp:fp - 2 ax:0x0000 si:<invalid> ds:ss es:ss di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):ss -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0024(16) Stack +0002(32)

l0800_33A6_2:
	byte SCZO_179 = cond(Mem0[ss:si_193:byte] - Mem0[ss:di_194:byte])
	Z_108 = (bool) SCZO_179 (alias)
	C_109 = (bool) SCZO_179 (alias)
	si_114 = si_193 + 0x0001
	di_104 = di_194 + 0x0001
	cx_103 = cx_103 - 0x0001
	word16 si_193 = si_114
	word16 di_194 = di_104
	branch Mem0[ss:si_193:byte] != Mem0[ss:di_194:byte] l0800_33A6
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0024 bp:fp - 2 ax:0x0000 si:<invalid> ds:ss es:ss di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):ss -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0024(16) Stack +0002(32)

l0800_33A8:
	branch Z_108 l0800_33AF
// DataOut: ax dl ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0024 bp:fp - 2 ax:0x0000 si:<invalid> ds:ss es:ss di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):ss -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0024(16) Stack +0002(32)

l0800_33AA:
	word16 ax_173 = 0x0000 - C_109
	ax_126 = ax_173 - 0xFFFF - (ax_173 <u 0x0000)
// DataOut: ax dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0024 bp:fp - 2 ax:0x0000 si:<invalid> ds:ss es:ss di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):ss -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0024(16) Stack +0002(32)

l0800_33AF:
	branch ax_126 != 0x0000 l0800_33C7
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0024 bp:fp - 2 ax:<invalid> si:<invalid> ds:ss es:ss di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):ss -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_33B4:
	word16 di_137 = (word16) ptrArg02
	selector es_138 = SLICE(ptrArg02, selector, 16)
	word16 si_139 = 0x0A36
	word16 cx_140 = 0xFFFF
// DataOut: al cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0022 bp:fp - 2 ax:<invalid> si:<invalid> ds:<invalid> es:ss di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):ss -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_33BF:
	branch cx_140 == 0x0000 l0800_33C1
// DataOut: al cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0022 bp:fp - 2 ax:<invalid> si:0x0A36 ds:<invalid> es:ss di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):ss -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_33BF_1:
	di_137 = di_137 + 0x0001
	cx_140 = cx_140 - 0x0001
	branch 0x00 == Mem0[es_138:di_137:byte] l0800_33BF
// DataOut: al cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0022 bp:fp - 2 ax:<invalid> si:0x0A36 ds:<invalid> es:ss di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):ss -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_33C1:
	word16 di_153 = di_137 - 0x0001
	word16 cx_156 = 0x0005
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0022 bp:fp - 2 ax:<invalid> si:0x0A36 ds:<invalid> es:ss di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):ss -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_33C5:
	branch cx_156 == 0x0000 l0800_33C7
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0022 bp:fp - 2 ax:<invalid> si:<invalid> ds:<invalid> es:ss di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):ss -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_33C7:
	return dl_34
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0022 bp:fp - 2 ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

fn0800_335C_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si ds:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C5_2:
	Mem163[es_138:di_153:byte] = Mem0[ds_35:si_139:byte]
	si_139 = si_139 + 0x0001
	di_153 = di_153 + 0x0001
	cx_156 = cx_156 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0022 bp:fp - 2 ax:<invalid> si:<invalid> ds:<invalid> es:ss di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):ss -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp
// LocalsOut: fp(16)



word16 fn0800_33CD(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_33CD_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_33CD:
	byte dl_35
	branch fn0800_A817(0x23, ds, DPB(ptrLoc10, wArg08, 0), DPB(ptrLoc0C, 0x4623, 0), wArg06, out dl_35) == 0x0000 l0800_33F1
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33F1:
	word16 di_305 = 0x0A3B
	word16 si_304 = 0x4641
	word16 cx_307 = 0x0002
	word16 ax_106 = 0x0000
	bool Z_302 = (bool) cond(0x0000)
	bool C_303 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33FE:
	branch cx_307 == 0x0000 l0800_3400
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33FE_1:
	byte SCZO_300 = cond(Mem0[ds:si_309:byte] - Mem0[ds:di_308:byte])
	Z_302 = (bool) SCZO_300 (alias)
	C_303 = (bool) SCZO_300 (alias)
	si_304 = si_309 + 0x0001
	di_305 = di_308 + 0x0001
	cx_307 = cx_307 - 0x0001
	word16 di_308 = di_305
	word16 si_309 = si_304
	branch Mem0[ds:si_309:byte] != Mem0[ds:di_308:byte] l0800_33FE
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3400:
	branch Z_302 l0800_3407
// DataOut: ax dl ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3402:
	word16 ax_294 = 0x0000 - C_303
	ax_106 = ax_294 - 0xFFFF - (ax_294 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3407:
	branch ax_106 == 0x0000 l0800_3431
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_340B:
	word16 di_146 = 0x0A3D
	word16 si_148 = 0x4641
	word16 cx_149 = 0x0003
	word16 ax_150 = 0x0000
	bool Z_153 = (bool) cond(0x0000)
	bool C_154 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3418:
	branch cx_149 == 0x0000 l0800_341A
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3418_1:
	byte SCZO_286 = cond(Mem0[ds:si_311:byte] - Mem0[ds:di_310:byte])
	Z_153 = (bool) SCZO_286 (alias)
	C_154 = (bool) SCZO_286 (alias)
	si_148 = si_311 + 0x0001
	di_146 = di_310 + 0x0001
	cx_149 = cx_149 - 0x0001
	word16 di_310 = di_146
	word16 si_311 = si_148
	branch Mem0[ds:si_311:byte] != Mem0[ds:di_310:byte] l0800_3418
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_341A:
	branch Z_153 l0800_3421
// DataOut: ax dl ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_341C:
	word16 ax_280 = 0x0000 - C_154
	ax_150 = ax_280 - 0xFFFF - (ax_280 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3421:
	branch ax_150 == 0x0000 l0800_3431
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3425:
	branch ((int16) Mem0[ds:0x4638:byte] & wArg06) == wArg06 l0800_3444
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3444:
	branch (wArg02 | wArg04) == 0x0000 l0800_3473
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_344C:
	word16 di_210 = (word16) ptrArg02
	selector es_211 = SLICE(ptrArg02, selector, 16)
	word16 di_220 = 0x4641
	word16 cx_226 = 0xFFFF
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345B:
	branch cx_226 == 0x0000 l0800_345D
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345B_1:
	di_220 = di_220 + 0x0001
	cx_226 = cx_226 - 0x0001
	branch 0x00 == Mem0[ds:di_220:byte] l0800_345B
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345D:
	word16 cx_234 = ~cx_226
	word16 cx_236 = cx_234 >>u 0x0001
	word16 si_241 = di_220 - cx_234
	word16 di_242 = di_210
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346C:
	branch cx_236 == 0x0000 l0800_346E
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346E:
	word16 cx_261 = cx_236 * 0x0002 + (cx_234 >>u 0x0001 <u 0x0000)
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3470:
	branch cx_261 == 0x0000 l0800_3472
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3472:
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_3473:
	selector ds_196
	*dsOut = ds
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_3470_1:
	Mem268[es_211:di_242:byte] = Mem0[ds:si_241:byte]
	si_241 = si_241 + 0x0001
	di_242 = di_242 + 0x0001
	cx_261 = cx_261 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346C_2:
	Mem256[es_211:di_242:word16] = Mem0[ds:si_241:word16]
	si_241 = si_241 + 0x0002
	di_242 = di_242 + 0x0002
	cx_236 = cx_236 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3431:
	byte dl_130
	selector ds_131
	return fn0800_3479(ds, DPB(ptrLoc0C, wArg02, 0), wArg04, wArg06, out dl_130, out ds_131)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_33EA:
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_33CD_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si es:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> Sequence es:di:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



word16 fn0800_3479(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_3479_entry:
// DataOut: ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3479:
// DataOut: ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_347E:
	ptrLoc0A = DPB(ptrLoc0A, 0x4623, 0) (alias)
	word16 ax_32
	byte dl_33
	fn0800_A84A(0x23, ds, ptrLoc0A, out ax_32, out dl_33)
	branch ax_32 == 0x0000 l0800_3494
// DataOut: dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 6 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3494:
	word16 di_273 = 0x0A3B
	word16 si_272 = 0x4641
	word16 cx_275 = 0x0002
	word16 ax_265 = 0x0000
	bool Z_270 = (bool) cond(0x0000)
	bool C_271 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> si:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A1:
	branch cx_275 == 0x0000 l0800_34A3
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A1_1:
	byte SCZO_268 = cond(Mem0[ds:si_277:byte] - Mem0[ds:di_276:byte])
	Z_270 = (bool) SCZO_268 (alias)
	C_271 = (bool) SCZO_268 (alias)
	si_272 = si_277 + 0x0001
	di_273 = di_276 + 0x0001
	cx_275 = cx_275 - 0x0001
	word16 di_276 = di_273
	word16 si_277 = si_272
	branch Mem0[ds:si_277:byte] != Mem0[ds:di_276:byte] l0800_34A1
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A3:
	branch Z_270 l0800_34AA
// DataOut: ax dl ds ss
// DataOut (flags): CDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A5:
	word16 ax_262 = 0x0000 - C_271
	ax_265 = ax_262 - 0xFFFF - (ax_262 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34AA:
	branch ax_265 == 0x0000 l0800_347E
// DataOut: dl ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34AE:
	word16 di_108 = 0x0A3D
	word16 si_110 = 0x4641
	word16 cx_111 = 0x0003
	word16 ax_112 = 0x0000
	bool Z_115 = (bool) cond(0x0000)
	bool C_116 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BB:
	branch cx_111 == 0x0000 l0800_34BD
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BB_1:
	byte SCZO_254 = cond(Mem0[ds:si_279:byte] - Mem0[ds:di_278:byte])
	Z_115 = (bool) SCZO_254 (alias)
	C_116 = (bool) SCZO_254 (alias)
	si_110 = si_279 + 0x0001
	di_108 = di_278 + 0x0001
	cx_111 = cx_111 - 0x0001
	word16 di_278 = di_108
	word16 si_279 = si_110
	branch Mem0[ds:si_279:byte] != Mem0[ds:di_278:byte] l0800_34BB
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BD:
	branch Z_115 l0800_34C4
// DataOut: ax dl ds ss
// DataOut (flags): CDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BF:
	word16 ax_248 = 0x0000 - C_116
	ax_112 = ax_248 - 0xFFFF - (ax_248 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34C4:
	branch ax_112 == 0x0000 l0800_347E
// DataOut: dl ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34C8:
	branch ((int16) Mem0[ds:0x4638:byte] & wArg06) != wArg06 l0800_347E
// DataOut: dl ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34D4:
	branch (wArg02 | wArg04) == 0x0000 l0800_3503
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_34DC:
	word16 di_178 = (word16) ptrArg02
	selector es_179 = SLICE(ptrArg02, selector, 16)
	word16 di_188 = 0x4641
	word16 cx_194 = 0xFFFF
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_34EB:
	branch cx_194 == 0x0000 l0800_34ED
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_34EB_1:
	di_188 = di_188 + 0x0001
	cx_194 = cx_194 - 0x0001
	branch 0x00 == Mem0[ds:di_188:byte] l0800_34EB
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_34ED:
	word16 cx_202 = ~cx_194
	word16 cx_204 = cx_202 >>u 0x0001
	word16 si_209 = di_188 - cx_202
	word16 di_210 = di_178
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_34FC:
	branch cx_204 == 0x0000 l0800_34FE
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_34FE:
	word16 cx_229 = cx_204 * 0x0002 + (cx_202 >>u 0x0001 <u 0x0000)
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3500:
	branch cx_229 == 0x0000 l0800_3502
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3502:
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_3503:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_3500_1:
	Mem236[es_179:di_210:byte] = Mem0[ds:si_209:byte]
	si_209 = si_209 + 0x0001
	di_210 = di_210 + 0x0001
	cx_229 = cx_229 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_34FC_2:
	Mem224[es_179:di_210:word16] = Mem0[ds:si_209:word16]
	si_209 = si_209 + 0x0002
	di_210 = di_210 + 0x0002
	cx_204 = cx_204 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_348D:
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> si:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_3479_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



void fn0800_3509(word16 wArg02, selector psegArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_3509_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_3509:
	fn0800_BE3B(wArg06, wArg08, fp - 0x0006, ss, fp - 0x005A, ss, fp - 0x0010, ss, fp - 0x0016, ss)
	word16 di_203 = fp - 0x0006
	word16 cx_204 = 0xFFFF
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0060(16) Local -0062(16) Stack +0002(16) Stack +0004(16)

l0800_354B:
	branch cx_204 == 0x0000 l0800_354D
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0062 bp:fp - 2 ax:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0060(16) Local -0062(16) Stack +0002(16) Stack +0004(16)

l0800_354B_1:
	di_203 = di_203 + 0x0001
	cx_204 = cx_204 - 0x0001
	branch 0x00 == Mem0[ss:di_203:byte] l0800_354B
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0062 bp:fp - 2 ax:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0060(16) Local -0062(16) Stack +0002(16) Stack +0004(16)

l0800_354D:
	word16 cx_79 = ~cx_204
	word16 cx_104 = cx_79 >>u 0x0001
	word16 si_102 = di_203 - cx_79
	word16 di_103 = wArg02
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0062 bp:fp - 2 ax:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_355C:
	branch cx_104 == 0x0000 l0800_355E
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:ss es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):ds -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_355E:
	word16 cx_105 = cx_104 * 0x0002 + (cx_79 >>u 0x0001 <u 0x0000)
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:ss es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):ds -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3560:
	branch cx_105 == 0x0000 l0800_3562
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:ss es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):ds -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3562:
	word16 di_129 = fp - 0x005A
	word16 cx_142 = 0xFFFF
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:ss es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):ds -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0060(16) Local -0062(16)

l0800_357D:
	branch cx_142 == 0x0000 l0800_357F
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0062 bp:fp - 2 ax:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ds bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0060(16) Local -0062(16)

l0800_357D_1:
	di_129 = di_129 + 0x0001
	cx_142 = cx_142 - 0x0001
	branch 0x00 == Mem0[ss:di_129:byte] l0800_357D
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0062 bp:fp - 2 ax:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ds bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0060(16) Local -0062(16)

l0800_357F:
	word16 cx_151 = ~cx_142
	word16 si_153 = di_129 - cx_151
	word16 di_154 = wArg02
	word16 cx_163 = 0xFFFF
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0062 bp:fp - 2 ax:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ds bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0060(16)

l0800_3594:
	branch cx_163 == 0x0000 l0800_3596
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:0x0000 es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:0x00 -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0060(16)

l0800_3594_2:
	di_154 = di_154 + 0x0001
	cx_163 = cx_163 - 0x0001
	branch 0x00 == Mem0[psegArg04:di_154:byte] l0800_3594
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:0x0000 es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:0x00 -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0060(16)

l0800_3596:
	word16 di_174 = di_154 - 0x0001
	word16 cx_176 = cx_151
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:0x0000 es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:0x00 -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_3598:
	branch cx_176 == 0x0000 l0800_359A
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 ax:0x0000 es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:0x00 -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_359A:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 ax:0x0000 es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:0x00 -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

fn0800_3509_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:0x0000 es:<invalid> di:di dx:<invalid> cx:<invalid> si:si ds:ds bx:<invalid> al:0x00 -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3598_3:
	Mem182[psegArg04:di_174:byte] = Mem0[ss:si_153:byte]
	si_153 = si_153 + 0x0001
	di_174 = di_174 + 0x0001
	cx_176 = cx_176 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 ax:0x0000 es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:0x00 -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_3560_1:
	Mem111[psegArg04:di_103:byte] = Mem0[ss:si_102:byte]
	si_102 = si_102 + 0x0001
	di_103 = di_103 + 0x0001
	cx_105 = cx_105 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:ss es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):ds -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_355C_2:
	Mem101[psegArg04:di_103:word16] = Mem0[ss:si_102:word16]
	si_102 = si_102 + 0x0002
	di_103 = di_103 + 0x0002
	cx_104 = cx_104 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:ss es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):ds -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)



byte fn0800_35A3(word16 wArg02, selector psegArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut: dl
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_35A3_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_35A3:
	fn0800_BE3B(wArg06, wArg08, fp - 0x0006, ss, fp - 0x005A, ss, fp - 0x0010, ss, fp - 0x0016, ss)
	word16 di_204 = fp - 0x0010
	word16 cx_205 = 0xFFFF
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0060(16) Local -0062(16) Stack +0002(16) Stack +0004(16)

l0800_35E5:
	branch cx_205 == 0x0000 l0800_35E7
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0062 bp:fp - 2 ax:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0060(16) Local -0062(16) Stack +0002(16) Stack +0004(16)

l0800_35E5_1:
	di_204 = di_204 + 0x0001
	cx_205 = cx_205 - 0x0001
	branch 0x00 == Mem0[ss:di_204:byte] l0800_35E5
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0062 bp:fp - 2 ax:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0060(16) Local -0062(16) Stack +0002(16) Stack +0004(16)

l0800_35E7:
	word16 cx_79 = ~cx_205
	word16 cx_104 = cx_79 >>u 0x0001
	word16 si_102 = di_204 - cx_79
	word16 di_103 = wArg02
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0062 bp:fp - 2 ax:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_35F6:
	branch cx_104 == 0x0000 l0800_35F8
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:ss es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):ds -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_35F8:
	word16 cx_105 = cx_104 * 0x0002 + (cx_79 >>u 0x0001 <u 0x0000)
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:ss es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):ds -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_35FA:
	branch cx_105 == 0x0000 l0800_35FC
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:ss es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):ds -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_35FC:
	word16 di_129 = fp - 0x0016
	byte dl_132 = (byte) psegArg04
	word16 cx_143 = 0xFFFF
// DataOut: al cx di dl es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:ss es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):ds -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0060(16) Local -0062(16)

l0800_3617:
	branch cx_143 == 0x0000 l0800_3619
// DataOut: al cx di dl es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0062 bp:fp - 2 ax:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ds bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0060(16) Local -0062(16)

l0800_3617_1:
	di_129 = di_129 + 0x0001
	cx_143 = cx_143 - 0x0001
	branch 0x00 == Mem0[ss:di_129:byte] l0800_3617
// DataOut: al cx di dl es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0062 bp:fp - 2 ax:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ds bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0060(16) Local -0062(16)

l0800_3619:
	word16 cx_152 = ~cx_143
	word16 si_154 = di_129 - cx_152
	word16 di_155 = wArg02
	word16 cx_164 = 0xFFFF
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0062 bp:fp - 2 ax:<invalid> es:ss di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ds bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0060(16)

l0800_362E:
	branch cx_164 == 0x0000 l0800_3630
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:0x0000 es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:0x00 -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0060(16)

l0800_362E_2:
	di_155 = di_155 + 0x0001
	cx_164 = cx_164 - 0x0001
	branch 0x00 == Mem0[psegArg04:di_155:byte] l0800_362E
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:0x0000 es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:0x00 -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0060(16)

l0800_3630:
	word16 di_175 = di_155 - 0x0001
	word16 cx_177 = cx_152
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:0x0000 es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:0x00 -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_3632:
	branch cx_177 == 0x0000 l0800_3634
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 ax:0x0000 es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:0x00 -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_3634:
	return dl_132
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 ax:0x0000 es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:0x00 -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

fn0800_35A3_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:0x0000 es:<invalid> di:di dx:<invalid> cx:<invalid> si:si ds:ds bx:<invalid> al:0x00 -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3632_3:
	Mem183[psegArg04:di_175:byte] = Mem0[ss:si_154:byte]
	si_154 = si_154 + 0x0001
	di_175 = di_175 + 0x0001
	cx_177 = cx_177 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 ax:0x0000 es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:0x00 -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_35FA_1:
	Mem111[psegArg04:di_103:byte] = Mem0[ss:si_102:byte]
	si_102 = si_102 + 0x0001
	di_103 = di_103 + 0x0001
	cx_105 = cx_105 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:ss es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):ds -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_35F6_2:
	Mem101[psegArg04:di_103:word16] = Mem0[ss:si_102:word16]
	si_102 = si_102 + 0x0002
	di_103 = di_103 + 0x0002
	cx_104 = cx_104 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0060 bp:fp - 2 ax:ss es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:ss bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):ds -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)



selector fn0800_363D(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_363D_entry:
// DataOut: ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0016(16) Local -0018(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_363D:
	byte dl_32
	branch fn0800_A817((byte) (fp - 0x002E), ds, DPB(ptrLoc38, wArg06, 0), DPB(ptrLoc34, fp - 0x002E, 0), 0x0000, out dl_32) == 0x0000 l0800_3662
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0016(16) Local -0018(16) Stack +0002(32)

l0800_3662:
	Mem60[ptrArg02:word16] = wLoc18
	Mem63[ptrArg02 + 0x0002:word16] = wLoc16
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002E bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp

l0800_365B:
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002E bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp

fn0800_363D_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp



word16 fn0800_3678(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3678_entry:
	*dsOut = ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_3678:
	word16 di_18 = (word16) ptrArg02
	selector es_19 = SLICE(ptrArg02, selector, 16)
	word16 cx_24 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_3693:
	branch cx_24 == 0x0000 l0800_3695
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_3693_1:
	di_18 = di_18 + 0x0001
	cx_24 = cx_24 - 0x0001
	branch 0x00 == Mem0[es_19:di_18:byte] l0800_3693
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_3695:
	word16 cx_296 = ~cx_24
	word16 di_284 = di_18 - cx_296
	bool Z_292 = (bool) cond(di_284)
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_369C:
	branch cx_296 == 0x0000 l0800_369E
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_369C_2:
	Z_292 = (bool) cond(0x5C - Mem0[es_19:di_284:byte]) (alias)
	di_284 = di_284 + 0x0001
	cx_296 = cx_296 - 0x0001
	branch 0x5C == Mem0[es_19:di_284:byte] l0800_369C
// DataOut: al cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_369E:
	branch Z_292 l0800_36A7
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_36A0:
	di_284 = 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_36A7:
	word16 di_60 = di_284 - 0x0001
	branch di_60 == 0x0000 l0800_3732
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000A(32) Stack +0002(16) Stack +0004(16)

l0800_36B6:
	branch 0x0000 != wArg04 l0800_36C6
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000A(32) Stack +0002(16) Stack +0004(16)

l0800_36C1:
	branch di_60 == wArg02 l0800_36D0
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000A(32) Stack +0002(16) Stack +0004(16)

l0800_36C6:
	branch Mem0[0x0000:(word16) ptrLoc0A - 0x0001:byte] != 0x3A l0800_3732
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_36D0:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_3732:
	word16 di_103 = (word16) ptrLoc06
	selector es_104 = SLICE(ptrLoc06, selector, 16)
	word16 cx_109 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_373A:
	branch cx_109 == 0x0000 l0800_373C
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_373A_1:
	di_103 = di_103 + 0x0001
	cx_109 = cx_109 - 0x0001
	branch 0x00 == Mem0[es_104:di_103:byte] l0800_373A
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_373C:
	word16 cx_117 = ~cx_109
	word16 di_119 = di_103 - cx_117
	bool Z_123 = (bool) cond(di_119)
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3743:
	branch cx_117 == 0x0000 l0800_3745
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3743_2:
	Z_123 = (bool) cond(0x5C - Mem0[es_104:di_119:byte]) (alias)
	di_119 = di_119 + 0x0001
	cx_117 = cx_117 - 0x0001
	branch 0x5C == Mem0[es_104:di_119:byte] l0800_3743
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3745:
	branch Z_123 l0800_374E
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3747:
	di_119 = 0x0001
	es_104 = 0x0000
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_374E:
	branch (di_119 - 0x0001 | es_104) != 0x0000 l0800_36DF
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(32) Stack +0002(16) Stack +0004(16)

l0800_36DF:
	Mem164[ptrLoc0A:byte] = 0x00
	ptrLoc16 = DPB(ptrLoc16, 0x0000, 0) (alias)
	byte dl_182
	word16 ax_184 = fn0800_33CD(ds, ptrLoc16, 0x0000, 0x0010, wArg02, wArg04, out dl_182, out ds)
	byte al_187 = (byte) ax_184
	branch ax_184 == 0x0000 l0800_371E
// DataOut: al ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(32) Local -0012(16) Local -0014(16) Stack +0002(16) Stack +0004(16)

l0800_36FE:
	ptrLoc10 = DPB(ptrLoc10, wArg02, 0) (alias)
	branch fn0800_8E52(al_187, ds, ptrLoc10) == 0x0000 l0800_371E
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(32) Local -0014(16) Stack +0002(16) Stack +0004(16)

l0800_370E:
	ptrLoc10 = DPB(ptrLoc10, wArg02, 0) (alias)
	word16 di_238
	fn0800_0D24(ds, 0x000E, ptrLoc10, wArg04, out si, out di_238, out ds)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(32) Stack +0002(16) Stack +0004(16)

l0800_371E:
	Mem207[ptrLoc0A:byte] = 0x5C
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_375D:
	return si
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_3678_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:di es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_3764(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: di ds si sp
fn0800_3764_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3764:
	branch Mem0[ds:0x427E:byte] == 0x00 l0800_3796
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3796:
	fn0800_3509(0x44DC, ds, 0x4541, ds)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_376D:
	word16 di_116 = 0x427E
	word16 cx_117 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377C:
	branch cx_117 == 0x0000 l0800_377E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377C_1:
	di_116 = di_116 + 0x0001
	cx_117 = cx_117 - 0x0001
	branch 0x00 == Mem0[ds:di_116:byte] l0800_377C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377E:
	word16 cx_76 = ~cx_117
	word16 cx_78 = cx_76 >>u 0x0001
	word16 si_102 = di_116 - cx_76
	word16 di_103 = 0x44DC
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 8 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378D:
	branch cx_78 == 0x0000 l0800_378F
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 6 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378F:
	word16 cx_100 = cx_78 * 0x0002 + (cx_76 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_3791:
	branch cx_100 == 0x0000 l0800_3793
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_3793:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_37A6:
	word16 di_130 = 0x44DC
	word16 si_23 = 0x0A40
	word16 cx_24 = 0xFFFF
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:ds dx:<invalid> bx:<invalid> al:0x00 -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_37B3:
	branch cx_24 == 0x0000 l0800_37B5
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:ds di:<invalid> si:0x0A40 cx:<invalid> ds:ds dx:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_37B3_1:
	di_130 = di_130 + 0x0001
	cx_24 = cx_24 - 0x0001
	branch 0x00 == Mem0[ds:di_130:byte] l0800_37B3
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:ds di:<invalid> si:0x0A40 cx:<invalid> ds:ds dx:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_37B5:
	word16 di_36 = di_130 - 0x0001
	word16 cx_38 = 0x000D
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:ds di:<invalid> si:0x0A40 cx:<invalid> ds:ds dx:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_37B9:
	branch cx_38 == 0x0000 l0800_37BB
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:ds di:<invalid> si:<invalid> cx:<invalid> ds:ds dx:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_37BB:
	return
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:ds di:<invalid> si:<invalid> cx:<invalid> ds:ds dx:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

fn0800_3764_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:ds di:di si:si cx:<invalid> ds:ds dx:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B9_2:
	Mem43[ds:di_36:byte] = Mem0[ds:si_23:byte]
	si_23 = si_23 + 0x0001
	di_36 = di_36 + 0x0001
	cx_38 = cx_38 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:ds di:<invalid> si:<invalid> cx:<invalid> ds:ds dx:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_3791_1:
	Mem106[ds:di_103:byte] = Mem0[ds:si_102:byte]
	si_102 = si_102 + 0x0001
	di_103 = di_103 + 0x0001
	cx_100 = cx_100 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378D_2:
	Mem96[ds:di_103:word16] = Mem0[ds:si_102:word16]
	si_102 = si_102 + 0x0002
	di_103 = di_103 + 0x0002
	cx_78 = cx_78 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 6 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)



word16 fn0800_37BE(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_37BE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_37BE:
	word16 si_35
	word16 di_36
	fn0800_BEA2(ds, DPB(ptrLoc12, wArg02, 0), 0x0A2B, ds, out si_35, out di_36)
	return si_35
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_37BE_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> es:<invalid> bx:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x0A2B -12(fp):ds -10(fp):0x42E3 -8(fp):ds -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_37DF(word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp di sp
fn0800_37DF_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_37DF:
	fn0800_3509(fp - 0x006C, ss, 0x44DC, ds)
	selector es_190 = ss
	word16 di_200 = fp - 0x006C
	word16 cx_201 = 0xFFFF
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0070(16) Local -0072(16)

l0800_3805:
	branch cx_201 == 0x0000 l0800_3807
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0072 bp:fp - 2 ax:0x0000 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):0x4541 -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0070(16) Local -0072(16)

l0800_3805_1:
	di_200 = di_200 + 0x0001
	cx_201 = cx_201 - 0x0001
	branch 0x00 == Mem0[ss:di_200:byte] l0800_3805
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0072 bp:fp - 2 ax:0x0000 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):0x4541 -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0070(16) Local -0072(16)

l0800_3807:
	word16 cx_197 = ~cx_201
	word16 di_186 = di_200 - cx_197
	bool Z_194 = (bool) cond(di_186)
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0072 bp:fp - 2 ax:0x0000 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):0x4541 -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0070(16) Local -0072(16)

l0800_380D:
	branch cx_197 == 0x0000 l0800_380F
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0072 bp:fp - 2 ax:0x0000 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):0x4541 -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0070(16) Local -0072(16)

l0800_380D_2:
	Z_194 = (bool) cond(0x00 - Mem0[ss:di_186:byte]) (alias)
	di_186 = di_186 + 0x0001
	cx_197 = cx_197 - 0x0001
	branch 0x00 == Mem0[ss:di_186:byte] l0800_380D
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0072 bp:fp - 2 ax:0x0000 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):0x4541 -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0070(16) Local -0072(16)

l0800_380F:
	branch Z_194 l0800_3818
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0072 bp:fp - 2 ax:0x0000 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):0x4541 -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0070(16) Local -0072(16)

l0800_3811:
	di_186 = 0x0001
	es_190 = 0x0000
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0072 bp:fp - 2 ax:0x0000 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):0x4541 -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0070(16) Local -0072(16)

l0800_3818:
	word16 di_66 = di_186 - 0x0001
	fn0800_35A3(di_66, es_190, 0x4541, ds)
	word16 dx_89
	word16 di_90
	selector ds_102
	word16 ax_92 = fn0800_AA7E(si, di_66, ds, fp - 0x006C, ss, 0x0A4D, ds, out dx_89, out di_90, out ds_102)
	branch (ax_92 | dx_89) == 0x0000 l0800_3863
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0072 bp:fp - 2 ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):0x4541 -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0074(16) Local -0076(16)

l0800_383D:
	byte dl_159
	word16 di_160
	selector ds_161
	fn0800_A614(ds_102, DPB(ptrLoc72, ax_92, 0), dx_89, out dl_159, out di_160, out ds_161)
	ds_102 = fn0800_A4F6(fp - 2, ds_161, fp - 0x006C, ss, 0x0180)
	*dsOut = ds_102
	ptrLoc72 = DPB(ptrLoc72, fp - 0x006C, 0) (alias)
	fn0800_8F7F((byte) (fp - 0x006C), ds_102, ptrLoc72)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -118(fp):fp - 0x006C -116(fp):ss -114(fp):0x0A4D -112(fp):ds -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_3863:
	branch fn0800_BA4A(0xDC, ds_102, DPB(ptrLoc76, 0x44DC, 0), DPB(ptrLoc72, fp - 0x006C, 0)) != 0xFFFF l0800_3887
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):fp - 0x006C -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0076(16)

l0800_3878:
	word16 di_147
	selector ds_148
	fn0800_0D24(ds_102, 0x000A, DPB(ptrLoc72, 0x44DC, 0), ds_102, out si, out di_147, out ds_148)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):0x44DC -116(fp):<invalid> -114(fp):fp - 0x006C -112(fp):ss -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_3887:
	return si
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):0x44DC -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_37DF_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> es:<invalid> di:di cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):0x44DC -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_388C(word16 si, word16 di, selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: ax ds si
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
fn0800_388C_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_388C:
	word16 di_21
	selector ds_22
	word16 si_23 = fn0800_4234(si, di, ds, 0x4541, ds, 0x0A13, ds, out di_21, out ds_22)
	Mem27[ds_22:0x29E5:word16] = dx
	Mem28[ds_22:0x29E3:word16] = 0x4541
	word16 di_39
	selector ds_40
	word16 si_41
	*siOut = fn0800_4234(si_23, di_21, ds_22, 0x44DC, ds_22, 0x0A50, ds_22, out di_39, out ds_40)
	Mem44[ds_40:0x29E1:word16] = dx
	Mem45[ds_40:0x29DF:word16] = 0x44DC
	selector ds_59 = fn0800_363D(ds_40, DPB(ptrLoc12, fp - 0x0006, 0), 0x44DC, ds_40)
	*dsOut = ds_59
	branch Mem45[ds_59:0x0A12:byte] != 0x00 l0800_38EF
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_38EF:
	selector ds_110 = fn0800_363D(ds_59, DPB(ptrLoc12, fp - 0x000A, 0), 0x4541, ds_59)
	*dsOut = ds_110
	branch fn0800_395B(DPB(ptrLoc12, fp - 0x000A, 0), DPB(ptrLoc0E, 0x461F, 0)) < 0x0000 l0800_3927
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> cl:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):0x44DC -12(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_3913:
	branch fn0800_395B(DPB(ptrLoc12, fp - 0x000A, 0), DPB(ptrLoc0E, fp - 0x0006, 0)) <= 0x0000 l0800_392E
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> cl:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):fp - 0x000A -16(fp):ss -14(fp):0x461F -12(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0010(16)

l0800_392E:
	byte dl_168
	word16 di_169
	selector ds_170
	fn0800_A614(ds_110, DPB(ptrLoc0E, Mem45[ds_110:0x29E3:word16], 0), Mem45[ds_110:0x29E5:word16], out dl_168, out di_169, out ds_170)
	byte dl_181
	word16 di_182
	selector ds_183
	fn0800_A614(ds_170, DPB(ptrLoc0E, Mem45[ds_170:0x29DF:word16], 0), Mem45[ds_170:0x29E1:word16], out dl_181, out di_182, out ds_183)
	fn0800_8F7F(0xDC, ds_183, DPB(ptrLoc0E, 0x44DC, 0))
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> cl:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):fp - 0x000A -16(fp):ss -14(fp):fp - 0x0006 -12(fp):ss -2(fp):bp

l0800_3927:
	return 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> cl:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_38D7:
	Mem84[ds_59:0x4621:word16] = wLoc04
	Mem87[ds_59:0x461F:word16] = wLoc06
	Mem88[ds_59:0x0A12:byte] = 0x01
	return 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> cl:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):0x44DC -12(fp):<invalid> -2(fp):bp

fn0800_388C_exit:
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> si:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp



word16 fn0800_395B(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx eax ebx es rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_395B_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_395B:
	word16 ax_12 = Mem0[ptrArg02 + 0x0002:word16]
	branch ax_12 != Mem0[ptrArg06 + 0x0002:word16] l0800_3984
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0006(32)

l0800_3984:
	return ax_12 - Mem0[ptrArg06 + 0x0002:word16]
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3974:
	return Mem0[ptrArg02:word16] - Mem0[ptrArg06:word16]
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_395B_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3992(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di sp
fn0800_3992_entry:
	*dsOut = ds
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3992:
	branch Mem0[ds:0x427E:byte] == 0x00 l0800_39AE
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_39A0:
	branch Mem0[ds:0x2A23:word16] != 0x0001 l0800_39AE
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 2 -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_39A7:
	branch Mem0[ds:0x2A17:word16] != 0x0000 l0800_39B5
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 2 -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_39B5:
	fn0800_3509(fp - 0x0074, ss, 0x44DC, ds)
	selector es_131 = ss
	word16 di_100 = fp - 0x0074
	word16 cx_101 = 0xFFFF
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 2 -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0078(16) Local -007A(16)

l0800_39D4:
	branch cx_101 == 0x0000 l0800_39D6
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007A bp:fp - 2 ax:0x0000 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):0x4541 -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0078(16) Local -007A(16)

l0800_39D4_1:
	di_100 = di_100 + 0x0001
	cx_101 = cx_101 - 0x0001
	branch 0x00 == Mem0[ss:di_100:byte] l0800_39D4
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007A bp:fp - 2 ax:0x0000 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):0x4541 -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0078(16) Local -007A(16)

l0800_39D6:
	word16 cx_103 = ~cx_101
	word16 di_106 = di_100 - cx_103
	byte SCZO_107 = cond(di_106)
	bool Z_108 = (bool) SCZO_107
	byte CZ_112 = SCZO_107
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x007A bp:fp - 2 ax:0x0000 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):0x4541 -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0078(16) Local -007A(16)

l0800_39DC:
	branch cx_103 == 0x0000 l0800_39DE
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x007A bp:fp - 2 ax:0x0000 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):0x4541 -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0078(16) Local -007A(16)

l0800_39DC_2:
	byte SCZO_407 = cond(0x00 - Mem0[ss:di_106:byte])
	Z_108 = (bool) SCZO_407 (alias)
	CZ_112 = SCZO_407 (alias)
	di_106 = di_106 + 0x0001
	cx_103 = cx_103 - 0x0001
	branch 0x00 == Mem0[ss:di_106:byte] l0800_39DC
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x007A bp:fp - 2 ax:0x0000 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):0x4541 -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0078(16) Local -007A(16)

l0800_39DE:
	branch Z_108 l0800_39E7
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007A bp:fp - 2 ax:0x0000 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):0x4541 -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0078(16) Local -007A(16)

l0800_39E0:
	di_106 = 0x0001
	es_131 = 0x0000
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007A bp:fp - 2 ax:0x0000 es:ss di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):0x4541 -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0078(16) Local -007A(16)

l0800_39E7:
	word16 di_133 = di_106 - 0x0001
	fn0800_35A3(di_133, es_131, 0x4541, ds)
	word16 dx_155
	word16 di_156
	selector ds_157
	word16 ax_158 = fn0800_AA7E(si, di_133, ds, fp - 0x0074, ss, 0x0A4D, ds, out dx_155, out di_156, out ds_157)
	branch (ax_158 | dx_155) != 0x0000 l0800_3A13
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007A bp:fp - 2 ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):0x4541 -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -007C(16)

l0800_3A13:
	selector ds_181
	word16 ax_182 = fn0800_4194(ds_157, ax_158, dx_155, out ds_181)
	branch DPB(CZ_112, false, 0) l0800_3A3D
// DataOut: ax ds si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0076 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):0x0A4D -120(fp):ds -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -007C(16)

l0800_3A23:
	branch dx_155 != 0x0000 l0800_3A2A
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -007C(16)

l0800_3A25:
	branch ax_182 >u 0x0012 l0800_3A3D
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -007C(16)

l0800_3A3D:
	selector ds_200
	word16 dx_205
	word16 ax_206 = fn0800_8CAA(ax_182, 0x08, fn0800_3E5D(ds_181, ax_158, dx_155, out ds_200), dx_155, out dx_205)
	branch dx_205 != 0x0052 l0800_3A58
// DataOut: ax ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_3A53:
	branch ax_206 == 0x4E43 l0800_3A6B
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_3A6B:
	Mem239[ss:fp - 0x0078:word16] = dx_155
	Mem242[ss:fp - 0x007A:word16] = ax_158
	selector ds_244
	word16 dx_245 = fn0800_3E5D(ds_200, wArg00, wArg02, out ds_244)
	branch dx_245 != Mem242[ds_244:0x2A09:word16] l0800_3A83
// DataOut: ax ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_3A7D:
	branch ax_206 == Mem242[ds_244:0x2A07:word16] l0800_3A96
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_3A96:
	Mem275[ss:fp - 0x0078:word16] = ss
	Mem278[ss:fp - 0x007A:word16] = fp - 0x0074
	Mem280[ss:fp - 0x007C:word16] = ss
	Mem283[ss:fp - 0x007E:word16] = fp - 0x000E
	selector ds_286 = fn0800_363D(ds_244, ptrArg00, wArg04, wArg06)
	Mem290[ss:fp - 0x0078:word16] = ds_286
	Mem293[ss:fp - 0x007A:word16] = 0x4541
	Mem295[ss:fp - 0x007C:word16] = ss
	Mem298[ss:fp - 0x007E:word16] = fp - 0x000A
	selector ds_299 = fn0800_363D(ds_286, ptrArg00, wArg04, wArg06)
	Mem303[ss:fp - 0x0078:word16] = ss
	Mem306[ss:fp - 0x007A:word16] = fp - 0x000A
	Mem308[ss:fp - 0x007C:word16] = ss
	Mem311[ss:fp - 0x007E:word16] = fp - 0x000E
	word16 ax_313 = fn0800_395B(ptrArg00, ptrArg04)
	branch ax_313 >= 0x0000 l0800_3ADD
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_3ADD:
	Mem341[ss:fp - 0x0078:word16] = dx_155
	Mem344[ss:fp - 0x007A:word16] = ax_158
	selector ds_345
	ui32 dx_ax_349 = SEQ(fn0800_3E5D(ds_299, wArg00, wArg02, out ds_345), ax_313 + 0x0012)
	Mem356[ds_345:0x2A05:word16] = SLICE(dx_ax_349 + 0x00000012, word16, 16)
	Mem357[ds_345:0x2A03:word16] = (word16) (dx_ax_349 + 0x00000012)
	Mem360[ss:fp - 0x0078:word16] = dx_155
	Mem363[ss:fp - 0x007A:word16] = ax_158
	byte dl_364
	word16 di_365
	selector ds_366
	fn0800_A614(ds_345, ptrArg00, wArg02, out dl_364, out di_365, out ds_366)
	return 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3ACA:
	Mem321[ss:fp - 0x0078:word16] = dx_155
	Mem324[ss:fp - 0x007A:word16] = ax_158
	byte dl_325
	word16 di_326
	selector ds_327
	fn0800_A614(ds_299, ptrArg00, wArg02, out dl_325, out di_326, out ds_327)
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A83:
	Mem254[ss:fp - 0x0078:word16] = dx_155
	Mem257[ss:fp - 0x007A:word16] = ax_158
	byte dl_258
	word16 di_259
	selector ds_260
	fn0800_A614(ds_244, ptrArg00, wArg02, out dl_258, out di_259, out ds_260)
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A58:
	Mem215[ss:fp - 0x0078:word16] = dx_155
	Mem218[ss:fp - 0x007A:word16] = ax_158
	byte dl_221
	word16 di_222
	selector ds_223
	fn0800_A614(ds_200, ptrArg00, wArg02, out dl_221, out di_222, out ds_223)
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A2A:
	byte dl_386
	word16 di_387
	selector ds_388
	fn0800_A614(ds_181, DPB(ptrLoc7A, ax_158, 0), dx_155, out dl_386, out di_387, out ds_388)
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A0C:
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 2 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):0x0A4D -120(fp):ds -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_39AE:
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 2 -118(fp):di -2(fp):bp

fn0800_3992_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3B0A(word16 bp, selector ds, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +000A(16) Stack +000C(16)
fn0800_3B0A_entry:
	*dsOut = ds
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +000A(16) Stack +000C(16)

l0800_3B0A:
	branch (wArg0A | wArg0C) != 0x0000 l0800_3B1B
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B1B:
	word16 dx_194
	word16 ax_196
	branch wArg0C < 0x0000 l0800_3B31
// DataOut: bp ds ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B21:
	branch wArg0C > 0x0000 l0800_3B2A
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B23:
	branch wArg0A <=u 0xFDE8 l0800_3B31
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B31:
	dx_194 = wArg0C
	ax_196 = wArg0A
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_3B2A:
	dx_194 = 0x0000
	ax_196 = 0xFDE8
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_3B37:
	selector ds_163
	si = fn0800_4311(fp - 2, ds, ax_196, dx_194, out ds_163)
	Mem76[ss:fp - 0x0004:word16] = dx_194
	Mem77[ss:fp - 0x0006:word16] = ax_196
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3BAB:
	branch (Mem77[ss:fp + 0x000A:word16] | Mem77[ss:fp + 0x000C:word16]) != 0x0000 l0800_3B4F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B4F:
	word16 dx_116
	word16 ax_115
	branch Mem77[ss:fp + 0x000C:word16] < 0x0000 l0800_3B65
// DataOut: bp ds sp ss
// DataOut (flags): SZO
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B55:
	branch Mem77[ss:fp + 0x000C:word16] > 0x0000 l0800_3B5E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B57:
	branch Mem77[ss:fp + 0x000A:word16] <=u 0xFDE8 l0800_3B65
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B65:
	dx_116 = Mem77[ss:fp + 0x000C:word16]
	ax_115 = Mem77[ss:fp + 0x000A:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B5E:
	dx_116 = 0x0000
	ax_115 = 0xFDE8
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B6B:
	Mem118[ss:fp - 0x0008:word16] = dx_116
	Mem119[ss:fp - 0x000A:word16] = ax_115
	Mem122[ss:fp - 0x000C:word16] = Mem119[ss:fp + 0x0004:word16]
	Mem125[ss:fp - 0x000E:word16] = Mem122[ss:fp + 0x0002:word16]
	Mem128[ss:fp - 0x0010:word16] = Mem125[ss:fp - 0x0008:word16]
	Mem130[ss:fp - 0x0012:word16] = ax_115
	Mem133[ss:fp - 0x0014:word16] = Mem130[ss:fp - 0x0004:word16]
	Mem136[ss:fp - 0x0016:word16] = Mem133[ss:fp - 0x0006:word16]
	word16 di_140
	selector ds_141
	fn0800_4110(ds_163, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_140, out ds_141)
	Mem147[ss:fp - 0x000C:word16] = Mem136[ss:fp + 0x0008:word16]
	Mem150[ss:fp - 0x000E:word16] = Mem147[ss:fp + 0x0006:word16]
	Mem153[ss:fp - 0x0010:word16] = Mem150[ss:fp - 0x0008:word16]
	Mem156[ss:fp - 0x0012:word16] = Mem153[ss:fp - 0x000A:word16]
	Mem159[ss:fp - 0x0014:word16] = Mem156[ss:fp - 0x0004:word16]
	Mem162[ss:fp - 0x0016:word16] = Mem159[ss:fp - 0x0006:word16]
	si = fn0800_4152(ds_141, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out ds_163)
	Mem170[ss:fp + 0x000A:word16] = Mem162[ss:fp + 0x000A:word16] - Mem162[ss:fp - 0x000A:word16]
	Mem174[ss:fp + 0x000C:word16] = v28
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3BB3:
	Mem96[ss:fp - 0x000C:word16] = Mem77[ss:fp - 0x0004:word16]
	Mem99[ss:fp - 0x000E:word16] = Mem96[ss:fp - 0x0006:word16]
	selector ds_102
	fn0800_4346(ds_163, wArg00, wArg02, out ds_102)
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

l0800_3B18:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> -2(fp):bp

l0800_3BBF:
	return si
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> es:<invalid> cx:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

fn0800_3B0A_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> es:<invalid> cx:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>



word16 fn0800_3BC3(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_3BC3_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_3BC3:
	word16 di_19
	word16 si_20 = fn0800_37BE(ds, 0x43AD, ds, 0x0A54, ds, out di_19)
	word16 di_33
	selector ds_34
	fn0800_4234(si_20, di_19, ds, 0x43AD, ds, 0x0A61, ds, out di_33, out ds_34)
	Mem39[ds_34:0x29D5:word16] = dx
	Mem40[ds_34:0x29D3:word16] = 0x43AD
	selector ds_49
	ui32 dx_ax_57 = SEQ(dx, fn0800_4194(ds_34, wArg02, wArg04, out ds_49) - wArg06) - _
	selector ds_82
	fn0800_ACB3(ds_49, DPB(ptrLoc10, wArg02, 0), wArg04, wArg06, wArg08, 0x0000, out ds_82)
	selector ds_104
	fn0800_3B0A(fp - 2, ds_82, (word16) dx_ax_57, SLICE(dx_ax_57, word16, 16), out ds_104)
	Mem110[ss:fp - 0x0008:word16] = Mem40[ds_104:0x29D5:word16]
	Mem114[ss:fp - 0x000A:word16] = Mem110[ds_104:0x29D3:word16]
	selector ds_116 = fn0800_BA67(ds_104, ptrArg00, wArg02)
	Mem120[ss:fp - 0x0008:word16] = 0x0000
	word16 ax_121 = Mem120[ss:fp + 0x0008:word16]
	word16 dx_123 = Mem120[ss:fp + 0x0006:word16] + Mem120[ss:fp + 0x000A:word16]
	Mem131[ss:fp - 0x000A:word16] = ax_121 + Mem120[ss:fp + 0x000C:word16] + (SEQ(dx_123, ax_121) <u 0x00000000)
	Mem133[ss:fp - 0x000C:word16] = dx_123
	Mem136[ss:fp - 0x000E:word16] = Mem133[ss:fp + 0x0004:word16]
	Mem139[ss:fp - 0x0010:word16] = Mem136[ss:fp + 0x0002:word16]
	selector ds_140
	fn0800_ACB3(ds_116, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_140)
	Mem146[ss:fp - 0x0008:word16] = Mem139[ss:fp - 0x0004:word16]
	Mem149[ss:fp - 0x000A:word16] = Mem146[ss:fp - 0x0006:word16]
	Mem152[ss:fp - 0x000C:word16] = Mem149[ss:fp + 0x0004:word16]
	Mem155[ss:fp - 0x000E:word16] = Mem152[ss:fp + 0x0002:word16]
	Mem158[ss:fp - 0x0010:word16] = Mem155[ds_140:0x29D5:word16]
	Mem161[ss:fp - 0x0012:word16] = Mem158[ds_140:0x29D3:word16]
	selector ds_163
	word16 si_164 = fn0800_3B0A(fp - 2, ds_140, wArg08, wArg0A, out ds_163)
	Mem169[ss:fp - 0x0008:word16] = Mem161[ds_163:0x29D5:word16]
	Mem172[ss:fp - 0x000A:word16] = Mem169[ds_163:0x29D3:word16]
	byte dl_173
	word16 di_174
	selector ds_175
	fn0800_A614(ds_163, ptrArg00, wArg02, out dl_173, out di_174, out ds_175)
	Mem180[ss:fp - 0x0008:word16] = ds_175
	Mem184[ss:fp - 0x000A:word16] = 0x43AD
	fn0800_8F7F(0xAD, ds_175, ptrArg00)
	return si_164
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3BC3_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> di:<invalid> si:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_3C99(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_3C99_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -007A(16) Local -007C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_3C99:
	fn0800_3509(fp - 0x006C, ss, 0x4348, ds)
	word16 di_307 = fp - 0x006C
	word16 si_32 = 0x0A54
	word16 cx_308 = 0xFFFF
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -007A(16) Local -007C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_3CBE:
	branch cx_308 == 0x0000 l0800_3CC0
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 2 ax:<invalid> es:ss di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):ss -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -007A(16) Local -007C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_3CBE_1:
	di_307 = di_307 + 0x0001
	cx_308 = cx_308 - 0x0001
	branch 0x00 == Mem0[ss:di_307:byte] l0800_3CBE
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 2 ax:<invalid> es:ss di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):ss -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -007A(16) Local -007C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_3CC0:
	word16 di_48 = di_307 - 0x0001
	word16 cx_50 = 0x000D
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 2 ax:<invalid> es:ss di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):ss -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -007A(16) Local -007C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_3CC4:
	branch cx_50 == 0x0000 l0800_3CC6
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 2 ax:<invalid> es:ss di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):ss -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -007A(16) Local -007C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_3CC6:
	word16 di_73
	selector ds_74
	fn0800_4234(si_32, di_48, ds, fp - 0x006C, ss, 0x0A61, ds, out di_73, out ds_74)
	selector ds_99
	fn0800_ACB3(ds_74, DPB(ptrLoc7A, wArg02, 0), wArg04, 0x0000, 0x0000, 0x0000, out ds_99)
	selector ds_123
	fn0800_3B0A(fp - 2, ds_99, wArg06, wArg08, out ds_123)
	Mem128[ss:fp - 0x0072:word16] = 0x0000
	ui32 ax_dx_134 = SEQ(Mem128[ss:fp + 0x0008:word16], Mem128[ss:fp + 0x0006:word16] + Mem128[ss:fp + 0x000A:word16]) + Mem128[ss:fp + 0x000A:ui32]
	Mem139[ss:fp - 0x0074:word16] = SLICE(ax_dx_134, word16, 16)
	word16 dx_136 = (word16) ax_dx_134
	Mem141[ss:fp - 0x0076:word16] = dx_136
	Mem144[ss:fp - 0x0078:word16] = Mem141[ss:fp + 0x0004:word16]
	Mem147[ss:fp - 0x007A:word16] = Mem144[ss:fp + 0x0002:word16]
	selector ds_149
	fn0800_ACB3(ds_123, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_149)
	Mem155[ss:fp - 0x0072:word16] = Mem147[ss:fp + 0x0004:word16]
	Mem158[ss:fp - 0x0074:word16] = Mem155[ss:fp + 0x0002:word16]
	selector ds_160
	word16 ax_161 = fn0800_4194(ds_149, wArg00, wArg02, out ds_160)
	ui32 bx_cx_168 = SEQ(Mem158[ss:fp + 0x0008:word16], Mem158[ss:fp + 0x0006:word16] + Mem158[ss:fp + 0x000A:word16]) + Mem158[ss:fp + 0x000A:ui32]
	ui32 dx_ax_173 = SEQ(dx_136, ax_161 - (word16) bx_cx_168) - bx_cx_168
	word16 dx_175 = SLICE(dx_ax_173, word16, 16)
	Mem178[ss:fp + 0x000C:word16] = dx_175
	word16 ax_174 = (word16) dx_ax_173
	Mem179[ss:fp + 0x000A:word16] = ax_174
	Mem182[ss:fp - 0x0072:word16] = Mem179[ss:fp + 0x000C:word16]
	Mem184[ss:fp - 0x0074:word16] = ax_174
	Mem187[ss:fp - 0x0076:word16] = Mem184[ss:fp - 0x0004:word16]
	Mem190[ss:fp - 0x0078:word16] = Mem187[ss:fp - 0x0006:word16]
	Mem193[ss:fp - 0x007A:word16] = Mem190[ss:fp + 0x0004:word16]
	Mem196[ss:fp - 0x007C:word16] = Mem193[ss:fp + 0x0002:word16]
	selector ds_198
	word16 si_199 = fn0800_3B0A(fp - 2, ds_160, wArg08, wArg0A, out ds_198)
	Mem204[ss:fp - 0x0072:word16] = Mem196[ss:fp - 0x0004:word16]
	Mem207[ss:fp - 0x0074:word16] = Mem204[ss:fp - 0x0006:word16]
	byte dl_208
	word16 di_209
	selector ds_210
	fn0800_A614(ds_198, ptrArg00, wArg02, out dl_208, out di_209, out ds_210)
	Mem216[ss:fp - 0x0072:word16] = Mem207[ds_210:0x29D1:word16]
	Mem219[ss:fp - 0x0074:word16] = Mem216[ds_210:0x29CF:word16]
	byte dl_220
	selector ds_222
	word16 di_221
	fn0800_A614(ds_210, ptrArg00, wArg02, out dl_220, out di_221, out ds_222)
	Mem228[ss:fp - 0x0072:word16] = 0x0180
	Mem230[ss:fp - 0x0074:word16] = ds_222
	Mem233[ss:fp - 0x0076:word16] = 0x4348
	selector ds_234 = fn0800_A4F6(fp - 2, ds_222, wArg00, wArg02, wArg04)
	Mem238[ss:fp - 0x0072:word16] = ds_234
	Mem242[ss:fp - 0x0074:word16] = 0x4348
	fn0800_8F7F(0x48, ds_234, ptrArg00)
	Mem247[ss:fp - 0x0072:word16] = ds_234
	Mem250[ss:fp - 0x0074:word16] = 0x4348
	Mem252[ss:fp - 0x0076:word16] = ss
	Mem256[ss:fp - 0x0078:word16] = fp - 0x006C
	branch fn0800_BA4A((byte) (fp - 0x006C), ds_234, ptrArg00, ptrArg04) != 0xFFFF l0800_3DB2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 2 ax:<invalid> es:ss di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):ss -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3DA3:
	Mem291[ss:fp - 0x0072:word16] = ss
	Mem294[ss:fp - 0x0074:word16] = fp - 0x006C
	Mem297[ss:fp - 0x0076:word16] = 0x000A
	fn0800_0D24(ds_234, wArg00, ptrArg02, wArg04, out si_199, out di_221, out ds_234)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):di -110(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3DB2:
	Mem268[ss:fp - 0x0072:word16] = ds_234
	Mem271[ss:fp - 0x0074:word16] = 0x0A65
	Mem273[ss:fp - 0x0076:word16] = ds_234
	Mem276[ss:fp - 0x0078:word16] = 0x4348
	word16 di_277
	selector ds_278
	fn0800_4234(si_199, di_221, ds_234, wArg00, wArg02, wArg04, wArg06, out di_277, out ds_278)
	Mem282[ds_278:0x29D1:word16] = dx_175
	Mem283[ds_278:0x29CF:word16] = 0x4348
	return ds_278
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):di -110(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

fn0800_3C99_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):di -110(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

l0800_3CC4_2:
	Mem58[ss:di_48:byte] = Mem0[ds:si_32:byte]
	si_32 = si_32 + 0x0001
	di_48 = di_48 + 0x0001
	cx_50 = cx_50 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 2 ax:<invalid> es:ss di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:0x00 -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):ss -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -007A(16) Local -007C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)



word16 fn0800_3DCF(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: al ax di ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3DCF_entry:
	*diOut = di
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16)

l0800_3DCF:
	word16 ax_104
	word16 v10_16 = Mem0[ptrArg02:word16] - 0x0001
	Mem17[ptrArg02:word16] = v10_16
	branch v10_16 < 0x0000 l0800_3DF3
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3DF3:
	ptrLoc0A = DPB(ptrLoc0A, wArg02, 0) (alias)
	ax_104 = fn0800_AEC2(ds, ptrLoc0A, wArg04, out ds)
// DataOut: al ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3DDE:
	word16 ax_83 = Mem17[ptrArg02 + 0x000E:word16]
	Mem86[ptrArg02 + 0x000C:word16] = Mem17[ptrArg02 + 0x000C:word16] + 0x0001
	ax_104 = DPB(ax_83, 0x00, 8) (alias)
// DataOut: al ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3DFF:
	branch ax_104 != 0xFFFF l0800_3E1F
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3E07:
	word16 dx_65
	segptr32 ptrLoc0A_73 = DPB(ptrLoc0A, fn0800_4271(ds, wArg02, wArg04, out dx_65), 0)
	word16 si_77
	word16 di_78
	selector ds_79
	fn0800_0D24(ds, 0x0008, ptrLoc0A_73, dx_65, out si_77, out di_78, out ds_79)
	ax_104 = 0x0008
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_3E1F:
	return DPB(ax_104, bLoc04, 0)
// DataOut: al ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_3DCF_exit:
// DataOut: al ax di ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> si:si es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_3E27(selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax di ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3E27_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3E27:
	word16 di_19
	selector ds_20
	word16 ax_25 = DPB(fn0800_3DCF(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_19, out ds_20), 0x00, 8)
	word16 di_34
	selector ds_35
	return (ax_25 << 0x08) + DPB(fn0800_3DCF(ds_20, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_34, out ds_35), 0x00, 8)
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3E27_exit:
// DataOut: ax di ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> ax:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3E5D(selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds dx
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: ax bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3E5D_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3E5D:
	word16 di_17
	selector ds_18
	word16 ax_19 = fn0800_3E27(ds, wArg02, wArg04, out di_17, out ds_18)
	word16 di_30
	selector ds_31
	return ax_19 + (fn0800_3E27(ds_18, wArg02, wArg04, out di_30, out ds_31) <u 0x0000)
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3E5D_exit:
// DataOut: ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_3E9A(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3E9A_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16) Stack +0002(32) Stack +0004(16)

l0800_3E9A:
	word16 ax_104
	word16 v10_16 = Mem0[ptrArg02:word16] - 0x0001
	Mem17[ptrArg02:word16] = v10_16
	branch v10_16 < 0x0000 l0800_3EBE
// DataOut: bx ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_3EBE:
	ptrLoc0A = DPB(ptrLoc0A, wArg02, 0) (alias)
	ax_104 = fn0800_AEC2(ds, ptrLoc0A, wArg04, out ds)
// DataOut: al ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_3EA9:
	word16 ax_96 = Mem17[ptrArg02 + 0x000E:word16]
	Mem99[ptrArg02 + 0x000C:word16] = Mem17[ptrArg02 + 0x000C:word16] + 0x0001
	ax_104 = DPB(ax_96, 0x00, 8) (alias)
// DataOut: al ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_3ECA:
	branch ax_104 != 0xFFFF l0800_3EEA
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000C(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_3ED2:
	word16 dx_78
	segptr32 ptrLoc0A_86 = DPB(ptrLoc0A, fn0800_4271(ds, wArg02, wArg04, out dx_78), 0)
	word16 si_90
	word16 di_91
	fn0800_0D24(ds, 0x0008, ptrLoc0A_86, dx_78, out si_90, out di_91, out ds)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(16) Stack +0004(16)

l0800_3EEA:
	selector ds_59
	return DPB(fn0800_ACB3(ds, DPB(ptrLoc10, wArg02, 0), wArg04, 0xFFFF, 0xFFFF, 0x0001, out ds_59), bLoc04, 0)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_3E9A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> si:si es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -8(fp):0x0001 -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_3F0A(selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3F0A_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3F0A:
	word16 di_19
	selector ds_20
	word16 ax_25 = DPB(fn0800_3DCF(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_19, out ds_20), 0x00, 8)
	word16 di_34
	selector ds_35
	word16 ax_40 = DPB(fn0800_3DCF(ds_20, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_34, out ds_35), 0x00, 8)
	selector ds_59
	fn0800_ACB3(ds_35, DPB(ptrLoc10, wArg02, 0), wArg04, 0xFFFE, 0xFFFF, 0x0001, out ds_59)
	return (ax_25 << 0x08) + ax_40
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3F0A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> ax:<invalid> dx:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFE -10(fp):0xFFFF -8(fp):0x0001 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3F58(selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds dx
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: ax bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3F58_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0010(16) Stack +0002(16) Stack +0004(16)

l0800_3F58:
	word16 di_17
	selector ds_18
	word16 ax_19 = fn0800_3E27(ds, wArg02, wArg04, out di_17, out ds_18)
	word16 di_30
	selector ds_31
	word16 ax_32 = fn0800_3E27(ds_18, wArg02, wArg04, out di_30, out ds_31)
	selector ds_54
	fn0800_ACB3(ds_31, DPB(ptrLoc14, wArg02, 0), wArg04, 0xFFFC, 0xFFFF, 0x0001, out ds_54)
	return ax_19 + (ax_32 <u 0x0000)
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3F58_exit:
// DataOut: di ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):0xFFFC -14(fp):0xFFFF -12(fp):0x0001 -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_3FAD(selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax di ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3FAD_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3FAD:
	word16 di_19
	selector ds_20
	word16 ax_25 = DPB(fn0800_3DCF(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_19, out ds_20), 0x00, 8)
	word16 di_34
	selector ds_35
	return (DPB(fn0800_3DCF(ds_20, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_34, out ds_35), 0x00, 8) << 0x08) + ax_25
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3FAD_exit:
// DataOut: ax di ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> cl:0x08 ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_401E(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_401E_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_401E:
	selector ds_25
	fn0800_4047(ds, (byte) (wArg02 >>u 0x08), DPB(ptrLoc06, wArg04, 0), wArg06, out ds_25)
	selector ds_42
	fn0800_4047(ds_25, bArg02, DPB(ptrLoc06, wArg04, 0), wArg06, out ds_42)
	return ds_42
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_401E_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4047(selector ds, byte bArg02, segptr32 ptrArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(8) Stack +0004(32) Stack +0006(16)
fn0800_4047_entry:
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(8) Stack +0004(32) Stack +0006(16)

l0800_4047:
	word16 ax_109
	word16 v10_18 = Mem0[ptrArg04:word16] + 0x0001
	Mem19[ptrArg04:word16] = v10_18
	branch v10_18 >= 0x0000 l0800_406F
// DataOut: bx cl cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_406F:
	ptrLoc08 = DPB(ptrLoc08, wArg04, 0) (alias)
	ax_109 = fn0800_B30A(ds, bArg02, ptrLoc08, wArg06, out ds)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 cl:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_4056:
	word16 ax_81 = Mem19[ptrArg04 + 0x000E:word16]
	word16 si_82 = Mem19[ptrArg04 + 0x000C:word16]
	Mem84[ptrArg04 + 0x000C:word16] = Mem19[ptrArg04 + 0x000C:word16] + 0x0001
	Mem88[ax_81:si_82:byte] = bArg02
	ax_109 = DPB(ax_81, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 cl:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_407C:
	branch ax_109 != 0xFFFF l0800_4099
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):cx -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_4081:
	word16 dx_63
	segptr32 ptrLoc08_71 = DPB(ptrLoc08, fn0800_4271(ds, wArg04, wArg06, out dx_63), 0)
	word16 si_75
	selector ds_77
	fn0800_0D24(ds, 0x0009, ptrLoc08_71, dx_63, out si_75, out di, out ds_77)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):cx -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_4099:
	return di
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_4047_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:si dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



selector fn0800_409C(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_409C_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_409C:
	return fn0800_401E(fn0800_401E(ds, wArg04, wArg06, wArg08), wArg02, wArg06, wArg08)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_409C_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_40BF(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(8) Stack +0004(16) Stack +0006(16)
fn0800_40BF_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16)

l0800_40BF:
	selector ds_27
	fn0800_4047(ds, bArg02 & 0xFF, DPB(ptrLoc06, wArg04, 0), wArg06, out ds_27)
	selector ds_49
	return fn0800_4047(ds_27, (byte) (wArg02 >>u 0x08) & 0xFF, DPB(ptrLoc06, wArg04, 0), wArg06, out ds_49)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_40BF_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> ax:<invalid> cl:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4110(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_4110_entry:
	*diOut = di
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_4110:
	selector ds_30
	word16 ax_31 = fn0800_ABA3(fp - 2, ds, wArg02, wArg04, 0x0001, wArg06, wArg0A, wArg0C, out ds_30)
	branch 0x0000 != wArg08 l0800_4138
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0006(16) Stack +000A(16) Stack +000C(16)

l0800_4133:
	branch ax_31 == wArg06 l0800_4150
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +000A(16) Stack +000C(16)

l0800_4138:
	word16 dx_60
	segptr32 ptrLoc06_69 = DPB(ptrLoc06, fn0800_4271(ds_30, wArg0A, wArg0C, out dx_60), 0)
	word16 di_74
	selector ds_75
	fn0800_0D24(ds_30, 0x0008, ptrLoc06_69, dx_60, out si, out di_74, out ds_75)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4150:
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4110_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4152(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_4152_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_4152:
	selector ds_30
	word16 ax_31 = fn0800_AD85(fp - 2, ds, wArg02, wArg04, 0x0001, wArg06, wArg0A, wArg0C, out ds_30)
	branch 0x0000 != wArg08 l0800_417A
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0006(16) Stack +000A(16) Stack +000C(16)

l0800_4175:
	branch ax_31 == wArg06 l0800_4192
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +000A(16) Stack +000C(16)

l0800_417A:
	word16 dx_59
	segptr32 ptrLoc06_68 = DPB(ptrLoc06, fn0800_4271(ds_30, wArg0A, wArg0C, out dx_59), 0)
	word16 di_73
	selector ds_74
	fn0800_0D24(ds_30, 0x0009, ptrLoc06_68, dx_59, out si, out di_73, out ds_74)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4192:
	return si
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4152_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4194(selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4194_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0010(16) Stack +0002(16) Stack +0004(16)

l0800_4194:
	word16 ax_19 = fn0800_AD2F(ds, DPB(ptrLoc0E, wArg02, 0), wArg04)
	selector ds_42
	fn0800_ACB3(ds, DPB(ptrLoc14, wArg02, 0), wArg04, 0x0000, 0x0000, 0x0002, out ds_42)
	word16 ax_53 = fn0800_AD2F(ds_42, DPB(ptrLoc0E, wArg02, 0), wArg04)
	selector ds_75
	fn0800_ACB3(ds_42, DPB(ptrLoc14, wArg02, 0), wArg04, ax_19, dx, 0x0000, out ds_75)
	return ax_53
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_4194_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4234(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ax bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_4234_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_4234:
	word16 dx_27
	word16 di_28
	selector ds_29
	word16 ax_30 = fn0800_AA7E(si, di, ds, wArg02, wArg04, wArg06, wArg08, out dx_27, out di_28, out ds_29)
	branch (ax_30 | dx_27) != 0x0000 l0800_4267
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_4257:
	word16 di_67
	selector ds_68
	fn0800_0D24(ds_29, 0x0007, DPB(ptrLoc0A, wArg02, 0), wArg04, out si, out di_67, out ds_68)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_4267:
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> cl:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4234_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> cl:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4271(selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4271_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4271:
	branch wArg04 != Mem0[ds:0x29E5:word16] l0800_428D
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_4280:
	branch wArg02 != Mem0[ds:0x29E3:word16] l0800_428D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_428D:
	branch wArg04 != Mem0[ds:0x29E1:word16] l0800_42A6
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_4299:
	branch wArg02 != Mem0[ds:0x29DF:word16] l0800_42A6
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42A6:
	branch wArg04 != Mem0[ds:0x29D1:word16] l0800_42BF
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42B2:
	branch wArg02 != Mem0[ds:0x29CF:word16] l0800_42BF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42BF:
	branch wArg04 != Mem0[ds:0x29DD:word16] l0800_42D8
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42CB:
	branch wArg02 != Mem0[ds:0x29DB:word16] l0800_42D8
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42D8:
	branch wArg04 != Mem0[ds:0x29D9:word16] l0800_42F1
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42E4:
	branch wArg02 != Mem0[ds:0x29D7:word16] l0800_42F1
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42F1:
	branch wArg04 != Mem0[ds:0x29D5:word16] l0800_430A
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42FD:
	branch wArg02 != Mem0[ds:0x29D3:word16] l0800_430A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_430A:
	return 0x0A60
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_4303:
	return 0x43AD
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42EA:
	return 0x4412
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42D1:
	return 0x4477
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42B8:
	return 0x4348
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_429F:
	return 0x44DC
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_4286:
	return 0x4541
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_4271_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:ds -2(fp):bp



word16 fn0800_4311(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4311_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4311:
	word16 dx_17
	word16 bx_18
	word16 bp_19
	selector ds_21
	word16 si_20
	word16 ax_22 = fn0800_9F89(fp - 2, ds, wArg02, wArg04, out dx_17, out bx_18, out bp_19, out si_20, out ds_21)
	Mem24[ss:bp_19 - 0x0002:word16] = dx_17
	Mem26[ss:bp_19 - 0x0004:word16] = ax_22
	branch (ax_22 | dx_17) != 0x0000 l0800_433C
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_432D:
	Mem45[ss:fp - 0x0008:word16] = ds_21
	Mem48[ss:fp - 0x000A:word16] = 0x0A6C
	Mem51[ss:fp - 0x000C:word16] = 0x0006
	word16 di_55
	selector ds_56
	fn0800_0D24(ds_21, wArg00, ptrArg02, wArg04, out si_20, out di_55, out ds_56)
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):ax -4(fp):dx -2(fp):bp

l0800_433C:
	return si_20
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -12(fp):0x0006 -10(fp):<invalid> -8(fp):<invalid> -6(fp):ax -4(fp):dx -2(fp):bp

fn0800_4311_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -12(fp):0x0006 -10(fp):<invalid> -8(fp):<invalid> -6(fp):ax -4(fp):dx -2(fp):bp



byte fn0800_4346(selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4346_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4346:
	selector ds_15
	return fn0800_9E75(ds, wArg04, out ds_15)
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_4346_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4357(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_4357_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4357:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_43B9:
	branch Mem0[ptrArg06:byte] != 0x00 l0800_435C
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_435C:
	byte al_59 = Mem0[ptrArg06:byte]
	word16 ax_61 = (int16) al_59
	branch ax_61 == 0x002A l0800_4379
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_4379:
	branch Mem0[ptrArg02:byte] == 0x2E l0800_43B6
// DataOut: bx ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_4382:
	branch Mem0[ptrArg02:byte] != 0x00 l0800_4376
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_4376:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_4388:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_436A:
	branch ax_61 == 0x002E l0800_439E
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_439E:
	branch Mem0[ptrArg02:byte] == 0x00 l0800_43B6
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_436F:
	branch ax_61 == 0x003F l0800_438A
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_438A:
	branch Mem0[ptrArg02:byte] == 0x2E l0800_43B6
// DataOut: bx ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_4393:
	branch Mem0[ptrArg02:byte] == 0x00 l0800_43B6
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_4399:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_4374:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_43A7:
	branch al_59 == Mem0[ptrArg02:byte] l0800_43B3
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_43B3:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_43B6:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_43AF:
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43C2:
	word16 ax_45
	branch Mem0[ptrArg02:byte] != 0x00 l0800_43D0
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43D0:
	ax_45 = 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43CB:
	ax_45 = 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43D2:
	return ax_45
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dl:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

fn0800_4357_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dl:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>



void fn0800_43D4(word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx es rax rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_43D4_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_43D4:
	word16 cx_10 = wArg06
	word16 si_17 = wArg02 + (word16) (wArg06 *s 0x000C)
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_440F:
	si_17 = si_17 - 0x000C
	cx_10 = cx_10 - 0x0001
	branch cx_10 != 0x0000 l0800_43E9
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_43E9:
	Mem36[psegArg04:si_17 + 0x0002:word16] = 0x0000
	Mem37[psegArg04:si_17:word16] = 0x0000
	Mem38[psegArg04:si_17 + 0x0004:word16] = 0xFFFF
	Mem39[psegArg04:si_17 + 0x0008:word16] = 0x0000
	Mem40[psegArg04:si_17 + 0x0006:word16] = 0x0000
	Mem41[psegArg04:si_17 + 0x000A:word16] = 0x0000
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_4419:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp

fn0800_43D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> si:si ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp



void fn0800_441C(selector ds, segptr32 ptrArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_441C_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_441C:
	word16 di_13 = 0x0000
	word16 cx_14 = 0x0000
	word16 si_20 = wArg02
	branch 0x0000 >=u wArg06 l0800_4452
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4439:
	branch (Mem0[psegArg04:si_20:word16] | Mem0[psegArg04:si_20 + 0x0002:word16]) == 0x0000 l0800_4449
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4445:
	di_13 = di_13 + 0x0001
	wLoc04 = cx_14
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4449:
	si_20 = si_20 + 0x000C
	cx_14 = cx_14 + 0x0001
	branch cx_14 <u wArg06 l0800_4439
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4452:
	branch di_13 != 0x0000 l0800_4459
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4459:
	branch di_13 == 0x0001 l0800_4461
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4461:
	selector es_229 = SLICE(ptrArg02, selector, 16)
	word16 bx_231 = (word16) (ptrArg02 + wLoc04 *s 0x000C)
	Mem234[es_229:bx_231 + 0x000A:word16] = Mem0[es_229:bx_231 + 0x000A:word16] + 0x0001
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_445E:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_4525:
	branch fn0800_463B(ds, wArg02, psegArg04, wArg06) == 0x0000 l0800_453B
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_453B:
	fn0800_4550(fp - 2)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_4538:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4478:
	word16 ax_113 = (word16) (Mem0[ds:0x4658:word16] *s 0x000C)
	word16 ax_129 = (word16) (Mem0[ds:0x465A:word16] *s 0x000C)
	selector es_117 = SLICE(ptrArg02, selector, 16)
	word16 bx_119 = (word16) ptrArg02 + ax_113
	word16 bx_132 = wArg02 + ax_129
	word16 ax_120 = Mem0[es_117:bx_119 + 0x0002:word16]
	word16 v23_135 = Mem0[es_117:bx_132:word16] + Mem0[es_117:bx_119:word16]
	Mem136[es_117:bx_132:word16] = v23_135
	Mem143[es_117:bx_132 + 0x0002:word16] = Mem136[es_117:bx_132 + 0x0002:word16] + ax_120 + (v23_135 <u 0x0000)
	word16 bx_145 = wArg02 + ax_113
	Mem146[es_117:bx_145 + 0x0002:word16] = 0x0000
	Mem147[es_117:bx_145:word16] = 0x0000
	word16 bx_149 = wArg02 + ax_129
	Mem152[es_117:bx_149 + 0x000A:word16] = Mem147[es_117:bx_149 + 0x000A:word16] + 0x0001
	word16 cx_114 = ax_113
	word16 dx_130 = ax_129
// DataOut: bp cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_44DD:
	selector es_159 = SLICE(ptrArg02, selector, 16)
	word16 bx_161 = (word16) ptrArg02 + dx_130
	branch Mem152[es_159:bx_161 + 0x0004:word16] != 0xFFFF l0800_44C3
// DataOut: bp cx ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_44C3:
	word16 ax_200 = Mem152[psegArg04:bx_161 + 0x0004:word16]
	Mem201[ds:0x465A:word16] = ax_200
	word16 ax_204 = (word16) (ax_200 *s 0x000C)
	word16 bx_208 = wArg02 + ax_204
	Mem211[psegArg04:bx_208 + 0x000A:word16] = Mem201[psegArg04:bx_208 + 0x000A:word16] + 0x0001
	dx_130 = ax_204
// DataOut: bp cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_44EB:
	Mem167[es_159:bx_161 + 0x0004:word16] = Mem152[ds:0x4658:word16]
	word16 bx_169 = wArg02 + ax_113
	Mem172[es_159:bx_169 + 0x000A:word16] = Mem167[es_159:bx_169 + 0x000A:word16] + 0x0001
// DataOut: bp cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4517:
	word16 bx_182 = (word16) ptrArg02 + cx_114
	branch Mem172[SLICE(ptrArg02, selector, 16):bx_182 + 0x0004:word16] != 0xFFFF l0800_44FD
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_44FD:
	word16 ax_187 = Mem172[psegArg04:bx_182 + 0x0004:word16]
	Mem188[ds:0x4658:word16] = ax_187
	word16 ax_191 = (word16) (ax_187 *s 0x000C)
	word16 bx_194 = wArg02 + ax_191
	Mem197[psegArg04:bx_194 + 0x000A:word16] = Mem188[psegArg04:bx_194 + 0x000A:word16] + 0x0001
	cx_114 = ax_191
// DataOut: bp cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4456:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_454A:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> Sequence es:bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_441C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



void fn0800_4550(word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_4550_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4550:
	word16 bp_102 = fp - 2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_45D6:
	branch Mem0[ss:bp_102 - 0x000A:word16] <=u 0x0010 l0800_4573
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4573:
	word16 di_104 = 0x0000
	word16 si_103 = Mem0[ss:bp_102 + 0x0004:word16]
	branch 0x0000 >=u Mem0[ss:bp_102 + 0x0008:word16] l0800_45C3
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_457D:
	branch Mem0[Mem0[ss:bp_102 + 0x0006:selector]:si_103 + 0x000A:word16] != Mem0[ss:bp_102 - 0x000A:word16] l0800_45BA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4589:
	Mem88[ss:fp - 0x0012:word16] = Mem0[ss:bp_102 - 0x000A:word16]
	Mem91[ss:fp - 0x0014:word16] = Mem88[ss:bp_102 - 0x0006:word16]
	Mem94[ss:fp - 0x0016:word16] = Mem91[ss:bp_102 - 0x0008:word16]
	Mem97[ss:fp - 0x0018:word16] = Mem94[ss:bp_102 - 0x0002:word16]
	Mem100[ss:fp - 0x001A:word16] = Mem97[ss:bp_102 - 0x0004:word16]
	word16 dx_101
	word16 ax_105 = fn0800_8BC2(bp_102, si_103, di_104, bp, out dx_101, out bp_102, out si_103, out di_104)
	Mem108[ss:fp - 0x0014:word16] = dx_101
	Mem110[ss:fp - 0x0016:word16] = ax_105
	word16 dx_114
	word16 ax_115 = fn0800_45E2(wArg00, wArg02, wArg04, out dx_114)
	selector es_117 = Mem110[ss:bp_102 + 0x0006:selector]
	Mem118[es_117:si_103 + 0x0008:word16] = dx_114
	Mem119[es_117:si_103 + 0x0006:word16] = ax_115
	word16 ax_120 = Mem119[ss:bp_102 - 0x0006:word16]
	word16 v20_122 = Mem119[ss:bp_102 - 0x0004:word16] + Mem119[ss:bp_102 - 0x0008:word16]
	Mem123[ss:bp_102 - 0x0004:word16] = v20_122
	Mem127[ss:bp_102 - 0x0002:word16] = Mem123[ss:bp_102 - 0x0002:word16] + ax_120 + (v20_122 <u 0x0000)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45BA:
	si_103 = si_103 + 0x000C
	di_104 = di_104 + 0x0001
	branch di_104 <u Mem0[ss:bp_102 + 0x0008:word16] l0800_457D
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45C3:
	Mem54[ss:bp_102 - 0x000A:word16] = Mem0[ss:bp_102 - 0x000A:word16] + 0x0001
	word16 ax_55 = Mem54[ss:bp_102 - 0x0006:word16]
	word16 dx_61 = __rcr(Mem54[ss:bp_102 - 0x0008:word16], 0x01, (bool) cond(ax_55 >>u 0x0001))
	Mem63[ss:bp_102 - 0x0006:word16] = ax_55 >>u 0x0001
	Mem64[ss:bp_102 - 0x0008:word16] = dx_61
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45DC:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4550_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_45E2(word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_45E2_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_45E2:
	word16 bx_15 = wArg06
	word16 wLoc04_10 = 0x0000
	word16 wLoc06_11 = 0x0000
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_462A:
	bx_15 = bx_15 - 0x0001
	branch bx_15 != 0x0000 l0800_45F7
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_45F7:
	word16 dx_36 = wLoc06_11 << 0x0001
	word16 ax_40 = __rcl(wLoc04_10, 0x01, (bool) cond(dx_36))
	wLoc06_11 = dx_36
	branch (wArg02 & 0x0001) == 0x0000 l0800_461A
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_4612:
	wLoc06_11 = dx_36 | 0x0001
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_461A:
	word16 ax_54 = wArg04 >>u 0x0001
	wLoc04_10 = ax_40
	wArg04 = ax_54
	wArg02 = __rcr(wArg02, 0x01, (bool) cond(ax_54))
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_4631:
	word16 dx_28
	*dxOut = wLoc04_10
	return wLoc06_11
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_45E2_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



word16 fn0800_463B(selector ds, word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx es rax rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_463B_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_463B:
	word16 wLoc0C_102 = 0xFFFF
	word16 wLoc0E_103 = 0xFFFF
	word16 wLoc08_105 = 0xFFFF
	word16 wLoc0A_106 = 0xFFFF
	word16 cx_111 = 0x0000
	word16 si_110 = wArg02
	branch 0x0000 >=u wArg06 l0800_46D5
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4661:
	word16 ax_93 = Mem0[psegArg04:si_110 + 0x0002:word16]
	word16 dx_94 = Mem0[psegArg04:si_110:word16]
	branch (dx_94 | ax_93) == 0x0000 l0800_46CD
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4675:
	branch ax_93 >u wLoc08_105 l0800_46AB
// DataOut: cx di ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4680:
	branch ax_93 <u wLoc08_105 l0800_4687
// DataOut: cx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4682:
	branch dx_94 >=u wLoc0A_106 l0800_46AB
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46AB:
	branch ax_93 >u wLoc0C_102 l0800_46CD
// DataOut: cx di ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46B6:
	branch ax_93 <u wLoc0C_102 l0800_46BD
// DataOut: cx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46B8:
	branch dx_94 >=u wLoc0E_103 l0800_46CD
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46BD:
	Mem134[ds:0x4658:word16] = cx_111
	wLoc0C_102 = ax_93
	wLoc0E_103 = dx_94
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4687:
	Mem145[ds:0x4658:word16] = Mem0[ds:0x465A:word16]
	Mem150[ds:0x465A:word16] = cx_111
	wLoc0C_102 = wLoc08_105
	wLoc0E_103 = wLoc0A_106
	wLoc08_105 = ax_93
	wLoc0A_106 = dx_94
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46CD:
	si_110 = si_110 + 0x000C
	cx_111 = cx_111 + 0x0001
	branch cx_111 <u wArg06 l0800_4661
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46D5:
	branch wLoc08_105 != 0xFFFF l0800_46E1
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(0) Local -000E(0)

l0800_46DB:
	branch wLoc0A_106 == 0xFFFF l0800_46ED
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(0) Local -000E(0)

l0800_46E1:
	branch wLoc0C_102 != 0xFFFF l0800_46F5
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000E(0)

l0800_46E7:
	branch wLoc0E_103 != 0xFFFF l0800_46F5
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_46F5:
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_46ED:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_463B_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di ax:<invalid> dx:<invalid> cx:<invalid> si:si es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_46FE(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_46FE_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_46FE:
	branch Mem0[ds:0x2A05:word16] >u 0x0000 l0800_471F
// DataOut: bp ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_470D:
	branch Mem0[ds:0x2A05:word16] <u 0x0000 l0800_4716
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 2 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_470F:
	branch Mem0[ds:0x2A03:word16] >=u 0x002A l0800_471F
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 2 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_471F:
	selector ds_79
	fn0800_ACB3(ds, DPB(ptrLoc30, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16], 0x0028, 0x0000, 0x0000, out ds_79)
	word16 di_89
	selector ds_90
	word16 ax_91 = fn0800_3FAD(ds_79, Mem0[ds_79:0x29E3:word16], Mem0[ds_79:0x29E5:word16], out di_89, out ds_90)
	branch 0x0000 <u Mem0[ds_90:0x2A05:word16] l0800_4761
// DataOut: ax bp di ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0026 bp:fp - 2 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_4750:
	branch 0x0000 >u Mem0[ds_90:0x2A05:word16] l0800_4758
// DataOut: ax bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_4752:
	branch ax_91 + 0x0024 <=u Mem0[ds_90:0x2A03:word16] l0800_4761
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_4761:
	selector ds_125
	word16 ax_126 = fn0800_ACB3(ds_90, DPB(ptrLoc30, Mem0[ds_90:0x29E3:word16], 0), Mem0[ds_90:0x29E5:word16], ax_91 + 0x0020, 0x0000, 0x0000, out ds_125)
	word16 v20_129 = Mem0[ds_125:0x29E5:word16]
	word16 di_135
	selector ds_136
	word16 dx_141
	word16 ax_142 = fn0800_8CAA(ax_126, 0x08, fn0800_3F58(ds_125, Mem0[ds_125:0x29E3:word16], v20_129, out di_135, out ds_136), v20_129, out dx_141)
	branch dx_141 != 0x0052 l0800_4798
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_4793:
	branch ax_142 == 0x4E43 l0800_47A1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_47A1:
	Mem181[ss:fp - 0x0028:word16] = Mem0[ds_136:0x29E5:word16]
	Mem184[ss:fp - 0x002A:word16] = Mem181[ds_136:0x29E3:word16]
	word16 ax_187 = fn0800_AD2F(ds_136, ptrArg00, wArg02)
	Mem195[ss:fp - 0x0028:word16] = 0x0000
	Mem198[ss:fp - 0x002A:word16] = 0x0000
	Mem200[ss:fp - 0x002C:word16] = 0x0002
	Mem203[ss:fp - 0x002E:word16] = Mem200[ds_136:0x29E5:word16]
	Mem206[ss:fp - 0x0030:word16] = Mem203[ds_136:0x29E3:word16]
	selector ds_210
	fn0800_ACB3(ds_136, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_210)
	Mem216[ss:fp - 0x0028:word16] = Mem206[ds_210:0x29E5:word16]
	Mem219[ss:fp - 0x002A:word16] = Mem216[ds_210:0x29E3:word16]
	word16 di_221
	selector ds_222
	fn0800_3FAD(ds_210, wArg00, wArg02, out di_221, out ds_222)
	Mem229[ss:fp - 0x0028:word16] = Mem219[ds_222:0x29E5:word16]
	Mem232[ss:fp - 0x002A:word16] = Mem229[ds_222:0x29E3:word16]
	word16 di_233
	selector ds_234
	word16 ax_235 = fn0800_3FAD(ds_222, wArg00, wArg02, out di_233, out ds_234)
	word16 wLoc0C_237 = ax_235
	branch di_233 == 0x0000 l0800_47F3
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16) Local -000C(16)

l0800_47F0:
	wLoc0C_237 = ax_235 - 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16) Local -000C(16)

l0800_47F3:
	word16 dx_248
	fn0800_8C69(wLoc0C_237, 0x09, 0x0000, bp, out dx_248)
	Mem260[ss:fp - 0x0028:word16] = 0x0000
	Mem263[ss:fp - 0x002A:word16] = 0x0000
	Mem265[ss:fp - 0x002C:word16] = 0x0016
	Mem268[ss:fp - 0x002E:word16] = Mem265[ds_234:0x29E5:word16]
	Mem271[ss:fp - 0x0030:word16] = Mem268[ds_234:0x29E3:word16]
	selector ds_272
	fn0800_ACB3(ds_234, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_272)
	Mem278[ss:fp - 0x0028:word16] = Mem271[ds_272:0x29E5:word16]
	Mem281[ss:fp - 0x002A:word16] = Mem278[ds_272:0x29E3:word16]
	word16 di_282
	selector ds_283
	fn0800_3FAD(ds_272, wArg00, wArg02, out di_282, out ds_283)
	Mem289[ss:fp - 0x0028:word16] = Mem281[ds_283:0x29E5:word16]
	Mem292[ss:fp - 0x002A:word16] = Mem289[ds_283:0x29E3:word16]
	word16 di_293
	selector ds_294
	word16 ax_295 = fn0800_3FAD(ds_283, wArg00, wArg02, out di_293, out ds_294)
	Mem301[ss:fp - 0x0028:word16] = Mem292[ds_294:0x29E5:word16]
	Mem304[ss:fp - 0x002A:word16] = Mem301[ds_294:0x29E3:word16]
	word16 di_305
	selector ds_306
	word16 ax_307 = fn0800_3FAD(ds_294, wArg00, wArg02, out di_305, out ds_306)
	Mem313[ss:fp - 0x0028:word16] = Mem304[ds_306:0x29E5:word16]
	Mem316[ss:fp - 0x002A:word16] = Mem313[ds_306:0x29E3:word16]
	word16 di_317
	selector ds_318
	word16 ax_319 = fn0800_3FAD(ds_306, wArg00, wArg02, out di_317, out ds_318)
	Mem325[ss:fp - 0x0028:word16] = Mem316[ds_318:0x29E5:word16]
	Mem328[ss:fp - 0x002A:word16] = Mem325[ds_318:0x29E3:word16]
	word16 di_329
	selector ds_330
	word16 ax_331 = fn0800_3FAD(ds_318, wArg00, wArg02, out di_329, out ds_330)
	Mem337[ss:fp - 0x0028:word16] = Mem328[ds_330:0x29E5:word16]
	Mem340[ss:fp - 0x002A:word16] = Mem337[ds_330:0x29E3:word16]
	word16 di_341
	selector ds_342
	word16 ax_343 = fn0800_3FAD(ds_330, wArg00, wArg02, out di_341, out ds_342)
	Mem349[ss:fp - 0x0028:word16] = Mem340[ds_342:0x29E5:word16]
	Mem352[ss:fp - 0x002A:word16] = Mem349[ds_342:0x29E3:word16]
	word16 di_353
	selector ds_354
	word16 ax_355 = fn0800_3FAD(ds_342, wArg00, wArg02, out di_353, out ds_354)
	Mem361[ss:fp - 0x0028:word16] = Mem352[ds_354:0x29E5:word16]
	Mem364[ss:fp - 0x002A:word16] = Mem361[ds_354:0x29E3:word16]
	word16 di_365
	selector ds_366
	word16 ax_367 = fn0800_3FAD(ds_354, wArg00, wArg02, out di_365, out ds_366)
	Mem373[ss:fp - 0x0028:word16] = Mem364[ds_366:0x29E5:word16]
	Mem376[ss:fp - 0x002A:word16] = Mem373[ds_366:0x29E3:word16]
	word16 di_377
	selector ds_378
	word16 ax_379 = fn0800_3FAD(ds_366, wArg00, wArg02, out di_377, out ds_378)
	Mem385[ss:fp - 0x0028:word16] = Mem376[ds_378:0x29E1:word16]
	Mem388[ss:fp - 0x002A:word16] = Mem385[ds_378:0x29DF:word16]
	Mem391[ss:fp - 0x002C:word16] = 0x4D5A
	selector ds_392 = fn0800_401E(ds_378, wArg00, wArg02, wArg04)
	Mem396[ss:fp - 0x0028:word16] = Mem391[ds_392:0x29E1:word16]
	Mem399[ss:fp - 0x002A:word16] = Mem396[ds_392:0x29DF:word16]
	Mem404[ss:fp - 0x002C:word16] = 0x0000
	Mem406[ss:fp - 0x002E:word16] = 0x0000
	selector ds_407 = fn0800_409C(ds_392, wArg00, wArg02, wArg04, wArg06)
	Mem411[ss:fp - 0x0028:word16] = Mem406[ds_407:0x29E1:word16]
	Mem414[ss:fp - 0x002A:word16] = Mem411[ds_407:0x29DF:word16]
	Mem419[ss:fp - 0x002C:word16] = 0x0000
	Mem421[ss:fp - 0x002E:word16] = 0x0000
	selector ds_422 = fn0800_409C(ds_407, wArg00, wArg02, wArg04, wArg06)
	Mem427[ss:fp - 0x0028:word16] = Mem421[ds_422:0x29E1:word16]
	Mem430[ss:fp - 0x002A:word16] = Mem427[ds_422:0x29DF:word16]
	Mem433[ss:fp - 0x002C:word16] = ax_319
	selector ds_434
	fn0800_40BF(ds_422, wArg00, wArg02, wArg04, out ds_434)
	Mem440[ss:fp - 0x0028:word16] = Mem433[ds_434:0x29E1:word16]
	Mem443[ss:fp - 0x002A:word16] = Mem440[ds_434:0x29DF:word16]
	Mem446[ss:fp - 0x002C:word16] = ax_331
	selector ds_447
	fn0800_40BF(ds_434, wArg00, wArg02, wArg04, out ds_447)
	Mem453[ss:fp - 0x0028:word16] = Mem446[ds_447:0x29E1:word16]
	Mem456[ss:fp - 0x002A:word16] = Mem453[ds_447:0x29DF:word16]
	Mem459[ss:fp - 0x002C:word16] = ax_379
	selector ds_460
	fn0800_40BF(ds_447, wArg00, wArg02, wArg04, out ds_460)
	Mem466[ss:fp - 0x0028:word16] = Mem459[ds_460:0x29E1:word16]
	Mem469[ss:fp - 0x002A:word16] = Mem466[ds_460:0x29DF:word16]
	Mem472[ss:fp - 0x002C:word16] = ax_367
	selector ds_473
	fn0800_40BF(ds_460, wArg00, wArg02, wArg04, out ds_473)
	Mem478[ss:fp - 0x0028:word16] = Mem472[ds_473:0x29E1:word16]
	Mem481[ss:fp - 0x002A:word16] = Mem478[ds_473:0x29DF:word16]
	Mem486[ss:fp - 0x002C:word16] = 0x0000
	selector ds_487 = fn0800_401E(ds_473, wArg00, wArg02, wArg04)
	Mem492[ss:fp - 0x0028:word16] = Mem486[ds_487:0x29E1:word16]
	Mem495[ss:fp - 0x002A:word16] = Mem492[ds_487:0x29DF:word16]
	Mem498[ss:fp - 0x002C:word16] = ax_343
	selector ds_499
	fn0800_40BF(ds_487, wArg00, wArg02, wArg04, out ds_499)
	Mem505[ss:fp - 0x0028:word16] = Mem498[ds_499:0x29E1:word16]
	Mem508[ss:fp - 0x002A:word16] = Mem505[ds_499:0x29DF:word16]
	Mem511[ss:fp - 0x002C:word16] = ax_355
	selector ds_512
	fn0800_40BF(ds_499, wArg00, wArg02, wArg04, out ds_512)
	Mem518[ss:fp - 0x0028:word16] = Mem511[ds_512:0x29E1:word16]
	Mem521[ss:fp - 0x002A:word16] = Mem518[ds_512:0x29DF:word16]
	Mem524[ss:fp - 0x002C:word16] = 0x001E
	selector ds_525
	fn0800_40BF(ds_512, wArg00, wArg02, wArg04, out ds_525)
	Mem531[ss:fp - 0x0028:word16] = Mem524[ds_525:0x29E1:word16]
	Mem534[ss:fp - 0x002A:word16] = Mem531[ds_525:0x29DF:word16]
	Mem537[ss:fp - 0x002C:word16] = ax_307
	selector ds_538
	fn0800_40BF(ds_525, wArg00, wArg02, wArg04, out ds_538)
	Mem543[ss:fp - 0x0028:word16] = Mem537[ds_538:0x29E1:word16]
	Mem546[ss:fp - 0x002A:word16] = Mem543[ds_538:0x29DF:word16]
	Mem551[ss:fp - 0x002C:word16] = 0x0000
	selector ds_552 = fn0800_401E(ds_538, wArg00, wArg02, wArg04)
	Mem556[ss:fp - 0x0028:word16] = 0x0000
	Mem563[ss:fp - 0x002A:word16] = 0x0000
	Mem565[ss:fp - 0x002C:word16] = ax_295 + 0x0020
	Mem568[ss:fp - 0x002E:word16] = Mem565[ds_552:0x29E5:word16]
	Mem571[ss:fp - 0x0030:word16] = Mem568[ds_552:0x29E3:word16]
	selector ds_572
	fn0800_ACB3(ds_552, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_572)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16) Local -000E(16)

l0800_49B5:
	Mem586[ss:fp - 0x0028:word16] = Mem571[ds_572:0x29E5:word16]
	Mem589[ss:fp - 0x002A:word16] = Mem586[ds_572:0x29E3:word16]
	word16 di_590
	word16 ax_595 = DPB(fn0800_3DCF(ds_572, ptrArg00, wArg02, out di_590, out ds_572), 0x00, 8)
	word16 di_597 = ax_595
	branch ax_595 == 0x0000 l0800_4A22
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16) Local -000E(16)

l0800_49CB:
	Mem907[ss:fp - 0x0028:word16] = Mem589[ds_572:0x29E5:word16]
	Mem910[ss:fp - 0x002A:word16] = Mem907[ds_572:0x29E3:word16]
	word16 ax_913 = fn0800_3FAD(ds_572, wArg00, wArg02, out di_597, out ds_572)
	word16 si_916 = 0x0000
	word16 wLoc0C_919 = di_597
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:0x00 cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16) Local -000C(16) Local -000E(16) Local -0022(16)

l0800_4A15:
	wLoc0C_919 = wLoc0C_919 - 0x0001
	branch wLoc0C_919 != 0x0000 l0800_49E3
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16) Local -000C(16) Local -000E(16) Local -0022(16)

l0800_49E3:
	Mem939[ss:fp - 0x0028:word16] = Mem910[ds_572:0x29E5:word16]
	Mem942[ss:fp - 0x002A:word16] = Mem939[ds_572:0x29E3:word16]
	word16 di_943
	selector ds_944
	si_916 = si_916 + DPB(fn0800_3DCF(ds_572, ptrArg00, wArg02, out di_943, out ds_944), 0x00, 8)
	Mem953[ss:fp - 0x0028:word16] = Mem942[ds_944:0x29E1:word16]
	Mem956[ss:fp - 0x002A:word16] = Mem953[ds_944:0x29DF:word16]
	Mem958[ss:fp - 0x002C:word16] = si_916
	selector ds_959
	fn0800_40BF(ds_944, wArg00, wArg02, wArg04, out ds_959)
	Mem965[ss:fp - 0x0028:word16] = Mem958[ds_959:0x29E1:word16]
	Mem968[ss:fp - 0x002A:word16] = Mem965[ds_959:0x29DF:word16]
	Mem971[ss:fp - 0x002C:word16] = ax_913
	di_597 = fn0800_40BF(ds_959, wArg00, wArg02, wArg04, out ds_572)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16) Local -000C(16) Local -000E(16) Local -0022(16)

l0800_4A1F:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16) Local -000E(16)

l0800_4A22:
	branch di_597 != 0x0000 l0800_49B5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16) Local -000E(16)

l0800_4A26:
	word16 di_637
	word16 dx_633
	Mem617[ss:fp - 0x0028:word16] = Mem589[ds_572:0x29E1:word16]
	Mem620[ss:fp - 0x002A:word16] = Mem617[ds_572:0x29DF:word16]
	word16 ax_621 = fn0800_AD2F(ds_572, ptrArg00, wArg02)
	branch false l0800_4A56
// DataOut: ax bp ds sp ss
// DataOut (flags): SO
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16)

l0800_4A38:
	branch false l0800_4A3F
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16)

l0800_4A3A:
	branch ax_621 >=u 0x0200 l0800_4A56
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16)

l0800_4A56:
	Mem878[ss:fp - 0x0028:word16] = Mem620[ds_572:0x29E1:word16]
	Mem881[ss:fp - 0x002A:word16] = Mem878[ds_572:0x29DF:word16]
	word16 dx_885 = 0x0010 - fn0800_AD2F(ds_572, ptrArg00, wArg02)
	dx_633 = dx_885 & 0x000F
	di_637 = dx_885 & 0x000F
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16)

l0800_4A3F:
	Mem893[ss:fp - 0x0028:word16] = Mem620[ds_572:0x29E1:word16]
	Mem896[ss:fp - 0x002A:word16] = Mem893[ds_572:0x29DF:word16]
	dx_633 = 0x0200 - fn0800_AD2F(ds_572, ptrArg00, wArg02)
	di_637 = dx_633
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16)

l0800_4A81:
	branch di_637 != 0x0000 l0800_4A70
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16)

l0800_4A70:
	Mem861[ss:fp - 0x0028:word16] = Mem620[ds_572:0x29E1:word16]
	Mem864[ss:fp - 0x002A:word16] = Mem861[ds_572:0x29DF:word16]
	Mem868[ss:fp - 0x002C:word16] = DPB(di_637, 0x00, 0)
	di_637 = fn0800_4047(ds_572, bArg00, ptrArg02, wArg04, out ds_572)
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0008(16) Local -000A(16)

l0800_4A88:
	Mem647[ss:fp - 0x0028:word16] = Mem620[ds_572:0x29E1:word16]
	Mem650[ss:fp - 0x002A:word16] = Mem647[ds_572:0x29DF:word16]
	word16 dx_655
	fn0800_8C8A(fn0800_AD2F(ds_572, ptrArg00, wArg02), 0x04, dx_633, bp, out dx_655)
	Mem662[ss:fp - 0x0028:word16] = 0x0000
	Mem665[ss:fp - 0x002A:word16] = dx_141
	Mem668[ss:fp - 0x002C:word16] = ax_187
	Mem671[ss:fp - 0x002E:word16] = Mem668[ds_572:0x29E5:word16]
	Mem674[ss:fp - 0x0030:word16] = Mem671[ds_572:0x29E3:word16]
	selector ds_675
	fn0800_ACB3(ds_572, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_675)
	selector ds_679
	word16 ax_680 = fn0800_5374(fp - 2, ds_675, out ds_679)
	branch ax_680 == 0x0000 l0800_4AC4
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4AC4:
	Mem697[ss:fp - 0x0028:word16] = Mem674[ds_679:0x29E1:word16]
	Mem700[ss:fp - 0x002A:word16] = Mem697[ds_679:0x29DF:word16]
	word16 ax_701 = fn0800_AD2F(ds_679, ptrArg00, wArg02)
	Mem703[ss:fp - 0x0008:word16] = ax_680
	Mem704[ss:fp - 0x000A:word16] = ax_701
	Mem709[ss:fp - 0x0028:word16] = 0x0000
	Mem712[ss:fp - 0x002A:word16] = Mem709[ss:fp - 0x0004:word16]
	Mem715[ss:fp - 0x002C:word16] = Mem712[ss:fp - 0x0006:word16]
	Mem718[ss:fp - 0x002E:word16] = Mem715[ds_679:0x29E5:word16]
	Mem721[ss:fp - 0x0030:word16] = Mem718[ds_679:0x29E3:word16]
	selector ds_722
	fn0800_ACB3(ds_679, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_722)
	Mem728[ss:fp - 0x0028:word16] = Mem721[ds_722:0x29E5:word16]
	Mem731[ss:fp - 0x002A:word16] = Mem728[ds_722:0x29E3:word16]
	selector ds_732
	word16 ax_735 = fn0800_4194(ds_722, wArg00, wArg02, out ds_732) - Mem731[ss:fp - 0x0006:word16]
	Mem741[ss:fp - 0x0028:word16] = ax_680 - Mem731[ss:fp - 0x0004:word16] - (ax_735 <u 0x0000)
	Mem743[ss:fp - 0x002A:word16] = ax_735
	Mem746[ss:fp - 0x002C:word16] = Mem743[ds_732:0x29E1:word16]
	Mem749[ss:fp - 0x002E:word16] = Mem746[ds_732:0x29DF:word16]
	Mem752[ss:fp - 0x0030:word16] = Mem749[ds_732:0x29E5:word16]
	Mem755[ss:fp - 0x0032:word16] = Mem752[ds_732:0x29E3:word16]
	selector ds_757
	fn0800_3B0A(fp - 2, ds_732, wArg08, wArg0A, out ds_757)
	word16 di_760 = Mem755[ss:fp - 0x000A:word16]
	word16 dx_767
	Mem769[ss:fp - 0x000C:word16] = fn0800_8CAA(Mem755[ss:fp - 0x000A:word16], 0x09, Mem755[ss:fp - 0x0008:word16], bp, out dx_767)
	branch (di_760 & 0x01FF) == 0x0000 l0800_4B37
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4B34:
	Mem857[ss:fp - 0x000C:word16] = Mem769[ss:fp - 0x000C:word16] + 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4B37:
	Mem778[ss:fp - 0x0028:word16] = 0x0000
	Mem781[ss:fp - 0x002A:word16] = 0x0000
	Mem783[ss:fp - 0x002C:word16] = 0x0002
	Mem786[ss:fp - 0x002E:word16] = Mem783[ds_757:0x29E1:word16]
	Mem789[ss:fp - 0x0030:word16] = Mem786[ds_757:0x29DF:word16]
	selector ds_790
	fn0800_ACB3(ds_757, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_790)
	Mem796[ss:fp - 0x0028:word16] = Mem789[ds_790:0x29E1:word16]
	Mem799[ss:fp - 0x002A:word16] = Mem796[ds_790:0x29DF:word16]
	Mem801[ss:fp - 0x002C:word16] = di_760 & 0x01FF
	selector ds_802
	fn0800_40BF(ds_790, wArg00, wArg02, wArg04, out ds_802)
	Mem808[ss:fp - 0x0028:word16] = Mem801[ds_802:0x29E1:word16]
	Mem811[ss:fp - 0x002A:word16] = Mem808[ds_802:0x29DF:word16]
	Mem814[ss:fp - 0x002C:word16] = Mem811[ss:fp - 0x000C:word16]
	selector ds_815
	fn0800_40BF(ds_802, wArg00, wArg02, wArg04, out ds_815)
	Mem821[ss:fp - 0x0028:word16] = Mem814[ds_815:0x29E1:word16]
	Mem824[ss:fp - 0x002A:word16] = Mem821[ds_815:0x29DF:word16]
	Mem827[ss:fp - 0x002C:word16] = Mem824[ss:fp - 0x000E:word16]
	selector ds_828
	fn0800_40BF(ds_815, wArg00, wArg02, wArg04, out ds_828)
	Mem834[ss:fp - 0x0028:word16] = Mem827[ds_828:0x29E1:word16]
	Mem837[ss:fp - 0x002A:word16] = Mem834[ds_828:0x29DF:word16]
	Mem840[ss:fp - 0x002C:word16] = Mem837[ss:fp - 0x0010:word16]
	selector ds_841
	fn0800_40BF(ds_828, wArg00, wArg02, wArg04, out ds_841)
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4ABE:
	return ax_680
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4798:
	return 0x0007
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp

l0800_4758:
	return 0x0007
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 2 ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp

l0800_4716:
	return 0x0007
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 2 -38(fp):di -36(fp):si -2(fp):bp

fn0800_46FE_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4B97(word16 bp, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_4B97_entry:
	*bpOut = bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4B97:
	selector ds_10
	branch fn0800_5DCE(ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_10) != 0x0000 l0800_4BAD
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_4BAD:
	selector ds_23
	return fn0800_5374(bp, ds_10, out ds_23)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4BA9:
	return 0x0007
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_4B97_exit:
// DataOut: ax bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_4BB1(word16 bp, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_4BB1_entry:
	*bpOut = bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -000C(0)

l0800_4BB1:
	selector ds_10
	branch fn0800_5DCE(ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_10) != 0x0000 l0800_4BC7
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(0)

l0800_4BC7:
	selector ds_62
	fn0800_ACB3(ds_10, DPB(ptrLoc0A, Mem0[ds_10:0x29E3:word16], 0), Mem0[ds_10:0x29E5:word16], 0xFFEE, 0xFFFF, 0x0001, out ds_62)
	selector ds_97
	fn0800_3B0A(bp, fn0800_401E(ds_62, 0x601A, Mem0[ds_62:0x29DF:word16], Mem0[ds_62:0x29E1:word16]), 0x0010, 0x0000, out ds_97)
	Mem102[ss:fp - 2:word16] = Mem0[ds_97:0x29E1:word16]
	Mem106[ss:fp - 4:word16] = Mem102[ds_97:0x29DF:word16]
	Mem111[ss:fp - 6:word16] = 0x0000
	Mem113[ss:fp - 8:word16] = 0x0000
	selector ds_118 = fn0800_409C(ds_97, wArg00, wArg02, wArg04, wArg06)
	Mem122[ss:fp - 2:word16] = Mem113[ds_118:0x29E1:word16]
	Mem125[ss:fp - 4:word16] = Mem122[ds_118:0x29DF:word16]
	Mem130[ss:fp - 6:word16] = 0x0000
	Mem132[ss:fp - 8:word16] = 0x0000
	selector ds_133 = fn0800_409C(ds_118, wArg00, wArg02, wArg04, wArg06)
	Mem138[ss:fp - 2:word16] = Mem132[ds_133:0x29E1:word16]
	Mem141[ss:fp - 4:word16] = Mem138[ds_133:0x29DF:word16]
	Mem144[ss:fp - 6:word16] = Mem141[ds_133:0x29E5:word16]
	Mem147[ss:fp - 8:word16] = Mem144[ds_133:0x29E3:word16]
	word16 di_148
	selector ds_149
	Mem154[ss:fp - 0x0006:word16] = fn0800_3E27(ds_133, wArg00, wArg02, out di_148, out ds_149)
	selector ds_158
	return fn0800_5374(bp, fn0800_401E(ds_149, wArg00, wArg02, wArg04), out ds_158)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4BC3:
	return 0x0007
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_4BB1_exit:
// DataOut: ax bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_4C55(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es rax rbp rbx rcx rdi rdx
// Preserved: bp dx sp
fn0800_4C55_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0020(16) Local -0024(16)

l0800_4C55:
	selector ds_16
	branch fn0800_3E5D(ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_16) != 0x0000 l0800_4C72
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0024(16)

l0800_4C6D:
	branch ax == 0x03F3 l0800_4C79
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0024(16)

l0800_4C79:
	word16 ax_108 = 0x0000
	selector ds_116 = fn0800_409C(ds_16, 0x03F3, 0x0000, Mem0[ds_16:0x29DF:word16], Mem0[ds_16:0x29E1:word16])
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16) Local -0024(16)

l0800_4C8E:
	selector ds_132
	word16 dx_133 = fn0800_3E5D(ds_116, Mem0[ds_116:0x29E3:word16], Mem0[ds_116:0x29E5:word16], out ds_132)
	word16 wLoc08_136 = dx_133
	word16 wLoc0A_137 = ax_108
	ds_116 = fn0800_409C(ds_132, ax_108, dx_133, Mem0[ds_132:0x29DF:word16], Mem0[ds_132:0x29E1:word16])
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 dx:<invalid> ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0020(16) Local -0024(16)

l0800_4CDA:
	wLoc0A_137 = wLoc0A_137 - 0x0001
	wLoc08_136 = v22
	word16 ax_171 = wLoc0A_137 | wLoc08_136
	branch ax_171 != 0x0000 l0800_4CBC
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0020(16) Local -0024(16)

l0800_4CBC:
	word16 v41_550 = Mem0[ds_116:0x29E1:word16]
	word16 v42_553 = Mem0[ds_116:0x29DF:word16]
	selector ds_562
	word16 dx_563 = fn0800_3E5D(ds_116, Mem0[ds_116:0x29E3:word16], Mem0[ds_116:0x29E5:word16], out ds_562)
	ds_116 = fn0800_409C(ds_562, ax_171, dx_563, v42_553, v41_550)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0020(16) Local -0024(16)

l0800_4CEC:
	ax_108 = ax_108 | dx_133
	branch ax_108 != 0x0000 l0800_4C8E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16) Local -0024(16)

l0800_4CF4:
	word16 v23_180 = Mem0[ds_116:0x29E1:word16]
	word16 v24_183 = Mem0[ds_116:0x29DF:word16]
	selector ds_192
	ui32 dx_ax_196 = SEQ(fn0800_3E5D(ds_116, Mem0[ds_116:0x29E3:word16], Mem0[ds_116:0x29E5:word16], out ds_192), ax_108 - 0x0001)
	word16 ax_200 = (word16) (dx_ax_196 - 0x00000001)
	selector ds_206 = fn0800_409C(ds_192, ax_200, SLICE(dx_ax_196 - 0x00000001, word16, 16), v24_183, v23_180)
	selector ds_215
	word16 dx_216 = fn0800_3E5D(ds_206, Mem0[ds_206:0x29E3:word16], Mem0[ds_206:0x29E5:word16], out ds_215)
	selector ds_228
	word16 dx_229 = fn0800_3E5D(ds_215, Mem0[ds_215:0x29E3:word16], Mem0[ds_215:0x29E5:word16], out ds_228)
	ui32 ax_dx_267 = SEQ(dx_229, ax_200 - 0x0001)
	selector ds_256 = fn0800_409C(ds_228, ax_200, dx_216, Mem0[ds_228:0x29DF:word16], Mem0[ds_228:0x29E1:word16])
	word16 dx_271 = (word16) (ax_dx_267 - 0x00000001)
	selector ds_277 = fn0800_409C(ds_256, dx_271, SLICE(ax_dx_267 - 0x00000001, word16, 16), Mem0[ds_256:0x29DF:word16], Mem0[ds_256:0x29E1:word16])
	segptr32 ptrLoc1E_286 = DPB(ptrLoc1E, Mem0[ds_277:0x29DF:word16], 0)
	word16 ax_287 = fn0800_AD2F(ds_277, ptrLoc1E_286, Mem0[ds_277:0x29E1:word16])
	Mem289[ds_277:0x4E8E:word16] = dx_271
	Mem290[ds_277:0x4E8C:word16] = ax_287
	selector ds_309
	fn0800_ACB3(ds_277, DPB(ptrLoc24, Mem290[ds_277:0x29E3:word16], 0), Mem290[ds_277:0x29E5:word16], 0x0004, 0x0000, 0x0001, out ds_309)
	ui32 ax_dx_238 = SEQ(dx_229, 0x0000) - SEQ(dx_216, ax_200)
	word16 wLoc04_315 = SLICE(ax_dx_238, word16, 16)
	word16 wLoc06_316 = (word16) ax_dx_238
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0024(16)

l0800_4DE4:
	word16 ax_330 = wLoc06_316 | wLoc04_315
	branch ax_330 != 0x0000 l0800_4DBE
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0024(16)

l0800_4DBE:
	word16 v52_520 = Mem290[ds_309:0x29E1:word16]
	word16 v53_523 = Mem290[ds_309:0x29DF:word16]
	selector ds_532
	word16 dx_533 = fn0800_3E5D(ds_309, Mem290[ds_309:0x29E3:word16], Mem290[ds_309:0x29E5:word16], out ds_532)
	ds_309 = fn0800_409C(ds_532, ax_330, dx_533, v53_523, v52_520)
	wLoc06_316 = wLoc06_316 - 0x0001
	wLoc04_315 = v57
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0024(16)

l0800_4DEC:
	segptr32 ptrLoc24_351 = DPB(ptrLoc24, Mem290[ds_309:0x29E3:word16], 0)
	selector ds_352
	word16 ax_353 = fn0800_ACB3(ds_309, ptrLoc24_351, Mem290[ds_309:0x29E5:word16], 0x0004, 0x0000, 0x0001, out ds_352)
	word16 v48_359 = Mem290[ds_352:0x29E3:word16]
	selector ds_362
	ui32 dx_ax_366 = SEQ(fn0800_3E5D(ds_352, v48_359, Mem290[ds_352:0x29E5:word16], out ds_362), ax_353 + 0x0001)
	word16 dx_380
	word16 ax_381 = fn0800_8C69((word16) (dx_ax_366 + 0x00000001), 0x02, SLICE(dx_ax_366 + 0x00000001, word16, 16), v48_359, out dx_380)
	Mem383[ss:fp - 0x001E:word16] = dx_380
	Mem385[ss:fp - 0x0020:word16] = ax_381
	Mem388[ss:fp - 0x0022:word16] = Mem385[ds_362:0x29E5:word16]
	Mem391[ss:fp - 0x0024:word16] = Mem388[ds_362:0x29E3:word16]
	selector ds_397
	fn0800_ACB3(ds_362, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_397)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_4EDE:
	Mem403[ss:fp - 0x001C:word16] = Mem391[ds_397:0x29E5:word16]
	Mem406[ss:fp - 0x001E:word16] = Mem403[ds_397:0x29E3:word16]
	Mem411[ss:fp - 0x001C:word16] = fn0800_AD2F(ds_397, ptrArg00, wArg02)
	Mem413[ss:fp - 0x001E:word16] = dx_380
	Mem416[ss:fp - 0x0020:word16] = Mem413[ds_397:0x29E5:word16]
	Mem419[ss:fp - 0x0022:word16] = Mem416[ds_397:0x29E3:word16]
	selector ds_421
	word16 ax_422 = fn0800_4194(ds_397, wArg00, wArg02, out ds_421)
	word16 bx_424 = Mem419[ss:fp - 0x001E:word16]
	word16 dx_430 = Mem419[ss:fp - 0x001C:word16]
	branch bx_424 >=u dx_380 l0800_4F05
// DataOut: ax ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x0004 -30(fp):<invalid> -28(fp):0x0001 -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_4F05:
	branch bx_424 != dx_380 l0800_4F0E
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x0004 -30(fp):<invalid> -28(fp):0x0001 -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_4F07:
	branch dx_430 >=u ax_422 l0800_4F0E
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x0004 -30(fp):<invalid> -28(fp):0x0001 -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_4F0E:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x0004 -30(fp):<invalid> -28(fp):0x0001 -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4F0B:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x0004 -30(fp):<invalid> -28(fp):0x0001 -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_4F02:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x0004 -30(fp):<invalid> -28(fp):0x0001 -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_4E41:
	Mem436[ss:fp - 0x001C:word16] = Mem419[ds_421:0x29E5:word16]
	Mem439[ss:fp - 0x001E:word16] = Mem436[ds_421:0x29E3:word16]
	selector ds_440
	word16 dx_441 = fn0800_3E5D(ds_421, wArg00, wArg02, out ds_440)
	Mem448[ss:fp - 0x001C:word16] = Mem439[ds_440:0x29E1:word16]
	Mem451[ss:fp - 0x001E:word16] = Mem448[ds_440:0x29DF:word16]
	Mem454[ss:fp - 0x0020:word16] = dx_441
	Mem456[ss:fp - 0x0022:word16] = ax_422
	selector ds_457 = fn0800_409C(ds_440, wArg00, wArg02, wArg04, wArg06)
	*dsOut = ds_457
	word16 cx_466 = 0x0004
	word16 bx_468 = 0x4F14
// DataOut: bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x0004 -30(fp):<invalid> -28(fp):0x0001 -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -0018(0)

l0800_4E7C:
	branch Mem456[0x0800:bx_468:word16] != ax_422 l0800_4E8D
// DataOut: bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x0004 -30(fp):<invalid> -28(fp):0x0001 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -0018(0)

l0800_4E84:
	word16 ax_491 = Mem456[0x0800:bx_468 + 0x0008:word16]
	branch ax_491 == (dx_441 & 0x3FFF) l0800_4E94
// DataOut: ax bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x0004 -30(fp):<invalid> -28(fp):0x0001 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -0018(0)

l0800_4E94:
	word16 sp_496
	word16 bp_497
	selector ss_498
	byte SCZO_499
	selector ds_500
	word16 dx_501
	byte SZO_502
	bool C_503
	bool Z_504
	word16 ax_505
	byte cl_506
	word16 bx_507
	word16 cx_508
	call Mem456[0x0800:bx_468 + 0x0010:word16] (retsize: 2; depth: 2)
		uses: ax_491,bp_5,bx_469,C_463,cl_471,cx_470,ds_457,dx_460,ptrLoc1E_286,ptrLoc24_351,SCZO_494,sp_458,ss,SZO_462,wLoc02_4,wLoc04_372,wLoc06_373,wLoc08_444,wLoc0A_445,wLoc0C_219,wLoc0E_220,wLoc10_231,wLoc12_232,wLoc14_242,wLoc16_243,wLoc18_465,wLoc1A_464,wLoc1C_376,wLoc1E_361,wLoc20_344,wLoc22_347,wLoc24_350,Z_495
		defs: ax_505,bp_497,bx_507,C_503,cl_506,cx_508,ds_500,dx_501,SCZO_499,sp_496,ss_498,SZO_502,Z_504
	return ax_505
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x0004 -30(fp):<invalid> -28(fp):0x0001 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E8D:
	bx_468 = bx_468 + 0x0002
	cx_466 = cx_466 - 0x0001
	branch cx_466 != 0x0000 l0800_4E7C
// DataOut: bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x0004 -30(fp):<invalid> -28(fp):0x0001 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -0018(0)

l0800_4E92:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x0004 -30(fp):<invalid> -28(fp):0x0001 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_4ED7:
	return 0x0009
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x0004 -30(fp):<invalid> -28(fp):0x0001 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4C72:
	return 0x0007
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp

fn0800_4C55_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x0004 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_4F2C(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_4F2C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Local -0010(16) Local -0016(16) Local -0018(16)

l0800_4F2C:
	word16 v7_10 = Mem0[ds:0x29E5:word16]
	word16 dx_22
	selector ds_16
	word16 ax_23 = fn0800_8C69(ax, 0x02, fn0800_3E5D(ds, Mem0[ds:0x29E3:word16], v7_10, out ds_16), v7_10, out dx_22)
	Mem28[ss:fp - 0x001E:word16] = Mem0[ds_16:0x29E5:word16]
	Mem32[ss:fp - 0x0020:word16] = Mem28[ds_16:0x29E3:word16]
	word16 ax_35 = fn0800_AD2F(ds_16, ptrArg00, wArg02)
	branch dx_22 <u 0x0000 l0800_4F95
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16) Local -000E(16) Local -0010(16) Local -0012(16) Local -0014(0) Local -0016(16) Local -0018(16) Local -001A(16) Local -001C(16)

l0800_4F65:
	branch dx_22 >u 0x0000 l0800_4F6D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000E(16) Local -0010(16) Local -0012(16) Local -0014(0) Local -0016(16) Local -0018(16) Local -001A(16) Local -001C(16)

l0800_4F67:
	branch ax_23 <=u 0x0012 l0800_4F95
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000E(16) Local -0010(16) Local -0012(16) Local -0014(16) Local -0016(16) Local -0018(16) Local -001A(16) Local -001C(16)

l0800_4F6D:
	Mem463[ss:fp - 0x001E:word16] = Mem32[ds_16:0x29E5:word16]
	Mem466[ss:fp - 0x0020:word16] = Mem463[ds_16:0x29E3:word16]
	selector ds_467
	wLoc16 = fn0800_3E5D(ds_16, wArg00, wArg02, out ds_467)
	Mem475[ss:fp - 0x001E:word16] = Mem466[ds_467:0x29E5:word16]
	Mem478[ss:fp - 0x0020:word16] = Mem475[ds_467:0x29E3:word16]
	wLoc18 = ax_35
	wLoc0E = fn0800_3E5D(ds_467, wArg00, wArg02, out ds_16)
	wLoc10 = ax_35
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000E(16) Local -0010(16) Local -0012(16) Local -0014(16) Local -0016(16) Local -0018(16) Local -001A(16) Local -001C(16)

l0800_4F95:
	Mem57[ss:fp - 0x001E:word16] = Mem32[ds_16:0x29E5:word16]
	Mem60[ss:fp - 0x0020:word16] = Mem57[ds_16:0x29E3:word16]
	word16 di_62
	selector ds_63
	word16 dx_68
	word16 ax_69 = fn0800_8CAA(ax_35, 0x08, fn0800_3F58(ds_16, wArg00, wArg02, out di_62, out ds_63), bp, out dx_68)
	branch dx_68 != 0x0052 l0800_4FB5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000E(16) Local -0010(16) Local -0012(16) Local -0014(16) Local -0016(16) Local -0018(16) Local -001A(16) Local -001C(16)

l0800_4FAD:
	branch ax_69 != 0x4E43 l0800_4FB5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000E(16) Local -0010(16) Local -0012(16) Local -0014(16) Local -0016(16) Local -0018(16) Local -001A(16) Local -001C(16)

l0800_4FB5:
	Mem93[ss:fp - 0x001E:word16] = Mem60[ds_63:0x29E1:word16]
	Mem96[ss:fp - 0x0020:word16] = Mem93[ds_63:0x29DF:word16]
	word16 dx_100
	word16 ax_101 = fn0800_8CAA(ax_23, 0x02, dx_22, bp, out dx_100)
	Mem103[ss:fp - 0x0022:word16] = dx_100
	Mem105[ss:fp - 0x0024:word16] = ax_101
	selector ds_108 = fn0800_409C(ds_63, wArg00, wArg02, wArg04, wArg06)
	Mem114[ss:fp - 0x001E:word16] = 0x0000
	Mem117[ss:fp - 0x0020:word16] = dx_22
	Mem120[ss:fp - 0x0022:word16] = ax_35
	Mem123[ss:fp - 0x0024:word16] = Mem120[ds_108:0x29E5:word16]
	Mem126[ss:fp - 0x0026:word16] = Mem123[ds_108:0x29E3:word16]
	selector ds_128
	word16 ax_129 = fn0800_ACB3(ds_108, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_128)
	Mem134[ss:fp - 0x001E:word16] = dx_22
	Mem137[ss:fp - 0x0020:word16] = ax_23
	Mem140[ss:fp - 0x0022:word16] = Mem137[ds_128:0x29E1:word16]
	Mem143[ss:fp - 0x0024:word16] = Mem140[ds_128:0x29DF:word16]
	Mem146[ss:fp - 0x0026:word16] = Mem143[ds_128:0x29E5:word16]
	Mem149[ss:fp - 0x0028:word16] = Mem146[ds_128:0x29E3:word16]
	selector ds_151
	fn0800_3B0A(fp - 2, ds_128, wArg08, wArg0A, out ds_151)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50BC:
	Mem163[ss:fp - 0x001E:word16] = Mem149[ds_151:0x29E5:word16]
	Mem166[ss:fp - 0x0020:word16] = Mem163[ds_151:0x29E3:word16]
	word16 di_167
	selector ds_168
	branch fn0800_3F58(ds_151, wArg00, wArg02, out di_167, out ds_168) != 0x0000 l0800_50D6
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50CE:
	branch ax_129 != 0x03EC l0800_50D6
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50D6:
	word16 v58_178 = Mem166[ds_168:0x4E8C:word16] + 0x0004
	Mem179[ds_168:0x4E8C:word16] = v58_178
	Mem183[ds_168:0x4E8E:word16] = Mem179[ds_168:0x4E8E:word16] + (v58_178 <u 0x0000)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp

l0800_50D3:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5006:
	Mem196[ss:fp - 0x001E:word16] = 0x0001
	Mem202[ss:fp - 0x0020:word16] = 0x0000
	Mem204[ss:fp - 0x0022:word16] = 0x0004
	Mem207[ss:fp - 0x0024:word16] = Mem204[ds_168:0x29E5:word16]
	Mem210[ss:fp - 0x0026:word16] = Mem207[ds_168:0x29E3:word16]
	selector ds_211
	fn0800_ACB3(ds_168, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_211)
	Mem216[ss:fp - 0x001E:word16] = Mem210[ds_211:0x29E1:word16]
	Mem219[ss:fp - 0x0020:word16] = Mem216[ds_211:0x29DF:word16]
	Mem225[ss:fp - 0x0022:word16] = 0x0000
	Mem227[ss:fp - 0x0024:word16] = 0x03EC
	ax_129 = 0x0000
	ds_151 = fn0800_409C(ds_211, wArg00, wArg02, wArg04, wArg06)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5034:
	Mem239[ss:fp - 0x001E:word16] = Mem227[ds_151:0x29E5:word16]
	Mem242[ss:fp - 0x0020:word16] = Mem239[ds_151:0x29E3:word16]
	selector ds_243
	Mem247[ss:fp - 0x0006:word16] = fn0800_3E5D(ds_151, wArg00, wArg02, out ds_243)
	Mem248[ss:fp - 0x0008:word16] = ax_129
	Mem251[ss:fp - 0x001E:word16] = Mem248[ds_243:0x29E1:word16]
	Mem254[ss:fp - 0x0020:word16] = Mem251[ds_243:0x29DF:word16]
	Mem257[ss:fp - 0x0022:word16] = Mem254[ss:fp - 0x0006:word16]
	Mem259[ss:fp - 0x0024:word16] = ax_129
	ds_151 = fn0800_409C(ds_243, wArg00, wArg02, wArg04, wArg06)
	word16 ax_263 = Mem259[ss:fp - 0x0008:word16] | Mem259[ss:fp - 0x0006:word16]
	branch ax_263 == 0x0000 l0800_50B1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5062:
	Mem281[ss:fp - 0x001E:word16] = Mem259[ds_151:0x29E5:word16]
	Mem284[ss:fp - 0x0020:word16] = Mem281[ds_151:0x29E3:word16]
	selector ds_285
	ui32 dx_ax_289 = SEQ(fn0800_3E5D(ds_151, wArg00, wArg02, out ds_285), ax_263 - 0x0001)
	Mem295[ss:fp - 0x000A:word16] = SLICE(dx_ax_289 - 0x00000001, word16, 16)
	word16 ax_293 = (word16) (dx_ax_289 - 0x00000001)
	Mem296[ss:fp - 0x000C:word16] = ax_293
	Mem299[ss:fp - 0x001E:word16] = Mem296[ds_285:0x29E1:word16]
	Mem302[ss:fp - 0x0020:word16] = Mem299[ds_285:0x29DF:word16]
	Mem305[ss:fp - 0x0022:word16] = Mem302[ss:fp - 0x000A:word16]
	Mem307[ss:fp - 0x0024:word16] = ax_293
	selector ds_308 = fn0800_409C(ds_285, wArg00, wArg02, wArg04, wArg06)
	word16 dx_314
	word16 ax_315 = fn0800_8C69(Mem307[ss:fp - 0x0008:word16], 0x02, Mem307[ss:fp - 0x0006:word16], bp, out dx_314)
	Mem317[ss:fp - 0x001E:word16] = dx_314
	Mem319[ss:fp - 0x0020:word16] = ax_315
	Mem322[ss:fp - 0x0022:word16] = Mem319[ds_308:0x29E1:word16]
	Mem325[ss:fp - 0x0024:word16] = Mem322[ds_308:0x29DF:word16]
	Mem328[ss:fp - 0x0026:word16] = Mem325[ds_308:0x29E5:word16]
	Mem331[ss:fp - 0x0028:word16] = Mem328[ds_308:0x29E3:word16]
	fn0800_3B0A(fp - 2, ds_308, wArg08, wArg0A, out ds_151)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50B1:
	ax_129 = Mem259[ss:fp - 0x0008:word16] | Mem259[ss:fp - 0x0006:word16]
	branch ax_129 == 0x0000 l0800_50BC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50B9:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4FB2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000E(16) Local -0010(16) Local -0016(16) Local -0018(16)

l0800_50E6:
	Mem340[ss:fp - 0x001E:word16] = Mem60[ds_63:0x29E1:word16]
	Mem343[ss:fp - 0x0020:word16] = Mem340[ds_63:0x29DF:word16]
	word16 dx_347
	word16 ax_348 = fn0800_8CAA(wLoc18, 0x02, wLoc16, bp, out dx_347)
	Mem350[ss:fp - 0x0022:word16] = dx_347
	Mem352[ss:fp - 0x0024:word16] = ax_348
	selector ds_353 = fn0800_409C(ds_63, wArg00, wArg02, wArg04, wArg06)
	Mem358[ss:fp - 0x001E:word16] = Mem352[ds_353:0x29E1:word16]
	Mem361[ss:fp - 0x0020:word16] = Mem358[ds_353:0x29DF:word16]
	word16 ax_362 = fn0800_AD2F(ds_353, ptrArg00, wArg02)
	Mem370[ss:fp - 0x001E:word16] = 0x0000
	Mem373[ss:fp - 0x0020:word16] = Mem370[ds_353:0x4E8E:word16]
	Mem376[ss:fp - 0x0022:word16] = Mem373[ds_353:0x4E8C:word16]
	Mem379[ss:fp - 0x0024:word16] = Mem376[ds_353:0x29E1:word16]
	Mem382[ss:fp - 0x0026:word16] = Mem379[ds_353:0x29DF:word16]
	selector ds_383
	fn0800_ACB3(ds_353, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_383)
	Mem389[ss:fp - 0x001E:word16] = Mem382[ds_383:0x29E1:word16]
	Mem392[ss:fp - 0x0020:word16] = Mem389[ds_383:0x29DF:word16]
	Mem395[ss:fp - 0x0022:word16] = wLoc0E
	Mem398[ss:fp - 0x0024:word16] = wLoc10
	selector ds_399 = fn0800_409C(ds_383, wArg00, wArg02, wArg04, wArg06)
	word16 v48_401 = Mem398[ds_399:0x4E8C:word16] + 0x0004
	Mem402[ds_399:0x4E8C:word16] = v48_401
	Mem406[ds_399:0x4E8E:word16] = Mem402[ds_399:0x4E8E:word16] + (v48_401 <u 0x0000)
	Mem411[ss:fp - 0x001E:word16] = 0x0000
	Mem414[ss:fp - 0x0020:word16] = dx_347
	Mem417[ss:fp - 0x0022:word16] = ax_362
	Mem420[ss:fp - 0x0024:word16] = Mem417[ds_399:0x29E1:word16]
	Mem423[ss:fp - 0x0026:word16] = Mem420[ds_399:0x29DF:word16]
	selector ds_424
	fn0800_ACB3(ds_399, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_424)
	selector ds_428
	Mem430[ss:fp - 0x0004:word16] = fn0800_5374(fp - 2, ds_424, out ds_428)
	Mem433[ss:fp - 0x001E:word16] = 0x0000
	word16 dx_436 = Mem433[ss:fp - 0x001C:word16] + Mem433[ss:fp - 0x0014:word16]
	Mem442[ss:fp - 0x0020:word16] = Mem433[ss:fp - 0x001A:word16] + Mem433[ss:fp - 0x0012:word16] + (dx_436 <u 0x0000)
	Mem444[ss:fp - 0x0022:word16] = dx_436
	Mem447[ss:fp - 0x0024:word16] = Mem444[ds_428:0x29E5:word16]
	Mem450[ss:fp - 0x0026:word16] = Mem447[ds_428:0x29E3:word16]
	selector ds_451
	fn0800_ACB3(ds_428, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_451)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp

fn0800_4F2C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> bx:<invalid> al:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_518F(word16 bp, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_518F_entry:
	*bpOut = bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_518F:
	selector ds_10
	branch fn0800_5DCE(ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_10) != 0x0000 l0800_51A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_51A5:
	selector ds_23
	return fn0800_5374(bp, ds_10, out ds_23)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_51A1:
	return 0x0007
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_518F_exit:
// DataOut: ax bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_51A9(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_51A9_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_51A9:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_533D:
	Mem28[ss:fp - 0x000A:word16] = Mem0[ds:0x29E5:word16]
	Mem32[ss:fp - 0x000C:word16] = Mem28[ds:0x29E3:word16]
	Mem39[ss:fp - 0x000A:word16] = fn0800_AD2F(ds, ptrArg00, wArg02)
	Mem41[ss:fp - 0x000C:word16] = dx
	Mem44[ss:fp - 0x000E:word16] = Mem41[ds:0x29E5:word16]
	Mem47[ss:fp - 0x0010:word16] = Mem44[ds:0x29E3:word16]
	selector ds_49
	word16 ax_50 = fn0800_4194(ds, wArg00, wArg02, out ds_49)
	word16 bx_52 = Mem47[ss:fp - 0x000C:word16]
	dx = Mem47[ss:fp - 0x000A:word16]
	branch bx_52 >=u dx l0800_5364
// DataOut: ax bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5364:
	branch bx_52 != dx l0800_536D
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5366:
	branch dx >=u ax_50 l0800_536D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_536D:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_536A:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5361:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51B3:
	Mem80[ss:fp - 0x000A:word16] = Mem47[ds_49:0x29E5:word16]
	Mem83[ss:fp - 0x000C:word16] = Mem80[ds_49:0x29E3:word16]
	word16 ax_85 = fn0800_3E9A(ds_49, ptrArg00, wArg02, out ds)
	branch ax_85 == 0x0000 l0800_51D5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51D5:
	Mem362[ss:fp - 0x000A:word16] = Mem83[ds:0x29E1:word16]
	Mem365[ss:fp - 0x000C:word16] = Mem362[ds:0x29DF:word16]
	Mem368[ss:fp - 0x000E:word16] = Mem365[ds:0x29E5:word16]
	Mem371[ss:fp - 0x0010:word16] = Mem368[ds:0x29E3:word16]
	word16 di_372
	selector ds_373
	Mem378[ss:fp - 0x000E:word16] = fn0800_3DCF(ds, ptrArg00, wArg02, out di_372, out ds_373)
	fn0800_4047(ds_373, bArg00, ptrArg02, wArg04, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51C5:
	branch ax_85 == 0x0001 l0800_51F5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51F5:
	Mem194[ss:fp - 0x000A:word16] = Mem83[ds:0x29E1:word16]
	Mem197[ss:fp - 0x000C:word16] = Mem194[ds:0x29DF:word16]
	Mem200[ss:fp - 0x000E:word16] = Mem197[ds:0x29E5:word16]
	Mem203[ss:fp - 0x0010:word16] = Mem200[ds:0x29E3:word16]
	selector ds_204
	Mem209[ss:fp - 0x000E:word16] = fn0800_3E5D(ds, wArg00, wArg02, out ds_204)
	Mem211[ss:fp - 0x0010:word16] = ax_85
	selector ds_213 = fn0800_409C(ds_204, wArg00, wArg02, wArg04, wArg06)
	Mem218[ss:fp - 0x000A:word16] = Mem211[ds_213:0x29E5:word16]
	Mem221[ss:fp - 0x000C:word16] = Mem218[ds_213:0x29E3:word16]
	word16 di_222
	selector ds_223
	word16 ax_224 = fn0800_3FAD(ds_213, wArg00, wArg02, out di_222, out ds_223)
	Mem227[ss:fp - 0x0004:word16] = 0x0000
	Mem228[ss:fp - 0x0006:word16] = ax_224
	Mem231[ss:fp - 0x000A:word16] = Mem228[ds_223:0x29E1:word16]
	Mem234[ss:fp - 0x000C:word16] = Mem231[ds_223:0x29DF:word16]
	Mem236[ss:fp - 0x000E:word16] = ax_224
	selector ds_237
	fn0800_40BF(ds_223, wArg00, wArg02, wArg04, out ds_237)
	Mem243[ss:fp - 0x000A:word16] = Mem236[ds_237:0x29E5:word16]
	Mem246[ss:fp - 0x000C:word16] = Mem243[ds_237:0x29E3:word16]
	word16 di_247
	selector ds_248
	word16 ax_254 = fn0800_8CAA(ax_224, 0x08, fn0800_3F58(ds_237, wArg00, wArg02, out di_247, out ds_248), bp, out dx)
	branch dx != 0x0052 l0800_52BA
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5250:
	branch ax_254 != 0x4E43 l0800_52BA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52BA:
	Mem262[ss:fp - 0x000A:word16] = Mem246[ss:fp - 0x0004:word16]
	Mem265[ss:fp - 0x000C:word16] = Mem262[ss:fp - 0x0006:word16]
	Mem268[ss:fp - 0x000E:word16] = Mem265[ds_248:0x29E1:word16]
	Mem271[ss:fp - 0x0010:word16] = Mem268[ds_248:0x29DF:word16]
	Mem274[ss:fp - 0x0012:word16] = Mem271[ds_248:0x29E5:word16]
	Mem277[ss:fp - 0x0014:word16] = Mem274[ds_248:0x29E3:word16]
	fn0800_3B0A(fp - 2, ds_248, wArg08, wArg0A, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5255:
	selector ds_284
	word16 ax_285 = fn0800_5374(fp - 2, ds_248, out ds_284)
	branch ax_285 == 0x0000 l0800_5263
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5263:
	Mem299[ss:fp - 0x000A:word16] = 0x0001
	ui32 ax_dx_303 = SEQ(Mem299[ds_284:0x2A09:word16], Mem299[ds_284:0x2A07:word16] + 0x0002)
	dx = -(word16) (ax_dx_303 + 0x00000002)
	Mem315[ss:fp - 0x000C:word16] = -SLICE(ax_dx_303 + 0x00000002, word16, 16) - (dx == 0x0000)
	Mem317[ss:fp - 0x000E:word16] = dx
	Mem320[ss:fp - 0x0010:word16] = Mem317[ds_284:0x29E1:word16]
	Mem323[ss:fp - 0x0012:word16] = Mem320[ds_284:0x29DF:word16]
	selector ds_324
	fn0800_ACB3(ds_284, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_324)
	Mem330[ss:fp - 0x000A:word16] = Mem323[ds_324:0x29E1:word16]
	Mem333[ss:fp - 0x000C:word16] = Mem330[ds_324:0x29DF:word16]
	Mem336[ss:fp - 0x000E:word16] = Mem333[ds_324:0x2A07:word16]
	selector ds_337
	fn0800_40BF(ds_324, wArg00, wArg02, wArg04, out ds_337)
	Mem343[ss:fp - 0x000A:word16] = 0x0001
	Mem346[ss:fp - 0x000C:word16] = Mem343[ds_337:0x2A09:word16]
	Mem349[ss:fp - 0x000E:word16] = Mem346[ds_337:0x2A07:word16]
	Mem352[ss:fp - 0x0010:word16] = Mem349[ds_337:0x29E1:word16]
	Mem355[ss:fp - 0x0012:word16] = Mem352[ds_337:0x29DF:word16]
	fn0800_ACB3(ds_337, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_525E:
	return ax_285
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

fn0800_51A9_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_51CA:
	branch ax_85 != 0x0003 l0800_51D2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51D2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5301:
	Mem138[ss:fp - 0x000A:word16] = Mem83[ds:0x29E5:word16]
	Mem141[ss:fp - 0x000C:word16] = Mem138[ds:0x29E3:word16]
	selector ds_142
	Mem147[ss:fp - 0x000A:word16] = fn0800_4194(ds, wArg00, wArg02, out ds_142)
	Mem149[ss:fp - 0x000C:word16] = dx
	Mem152[ss:fp - 0x000E:word16] = Mem149[ds_142:0x29E5:word16]
	Mem155[ss:fp - 0x0010:word16] = Mem152[ds_142:0x29E3:word16]
	word16 ax_156 = fn0800_AD2F(ds_142, ptrArg00, wArg02)
	ui32 bx_cx_166 = SEQ(Mem155[ss:fp - 0x000C:word16], Mem155[ss:fp - 0x000A:word16] - ax_156) - SEQ(dx, ax_156)
	Mem171[ss:fp - 0x000A:word16] = SLICE(bx_cx_166, word16, 16)
	Mem173[ss:fp - 0x000C:word16] = (word16) bx_cx_166
	Mem176[ss:fp - 0x000E:word16] = Mem173[ds_142:0x29E1:word16]
	Mem179[ss:fp - 0x0010:word16] = Mem176[ds_142:0x29DF:word16]
	Mem182[ss:fp - 0x0012:word16] = Mem179[ds_142:0x29E5:word16]
	Mem185[ss:fp - 0x0014:word16] = Mem182[ds_142:0x29E3:word16]
	fn0800_3B0A(fp - 2, ds_142, wArg08, wArg0A, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51CF:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52D8:
	word16 si_104 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52FA:
	branch si_104 != 0x0003 l0800_52DC
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52DC:
	Mem110[ss:fp - 0x000A:word16] = Mem83[ds:0x29E1:word16]
	Mem113[ss:fp - 0x000C:word16] = Mem110[ds:0x29DF:word16]
	Mem116[ss:fp - 0x000E:word16] = Mem113[ds:0x29E5:word16]
	Mem119[ss:fp - 0x0010:word16] = Mem116[ds:0x29E3:word16]
	word16 di_120
	selector ds_121
	Mem126[ss:fp - 0x000E:word16] = fn0800_3DCF(ds, ptrArg00, wArg02, out di_120, out ds_121)
	fn0800_4047(ds_121, bArg00, ptrArg02, wArg04, out ds)
	si_104 = si_104 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52FF:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_5374(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_5374_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0018(16)

l0800_5374:
	word16 ax_21 = fn0800_AD2F(ds, DPB(ptrLoc16, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16])
	selector ds_33
	fn0800_3E5D(ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_33)
	Mem39[ds_33:0x2A21:word16] = ax_21 & 0x0003
	selector ds_46
	word16 dx_47 = fn0800_3E5D(ds_33, Mem39[ds_33:0x29E3:word16], Mem39[ds_33:0x29E5:word16], out ds_46)
	Mem50[ds_46:0x2A09:word16] = dx_47
	Mem51[ds_46:0x2A07:word16] = ax_21 & 0x0003
	branch Mem51[ds_46:0x2A21:word16] != 0x0000 l0800_53EF
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0018(16)

l0800_53EF:
	selector ds_115
	word16 dx_116 = fn0800_3E5D(ds_46, Mem51[ds_46:0x29E3:word16], Mem51[ds_46:0x29E5:word16], out ds_115)
	Mem119[ds_115:0x2A05:word16] = dx_116
	Mem120[ds_115:0x2A03:word16] = ax_21 & 0x0003
	word16 di_127
	selector ds_128
	word16 ax_129 = fn0800_3E27(ds_115, Mem120[ds_115:0x29E3:word16], Mem120[ds_115:0x29E5:word16], out di_127, out ds_128)
	Mem132[ds_128:0x2E4B:word16] = ax_129
	word16 di_139
	selector ds_140
	word16 ax_141 = fn0800_3E27(ds_128, Mem132[ds_128:0x29E3:word16], Mem132[ds_128:0x29E5:word16], out di_139, out ds_140)
	Mem144[ds_140:0x2E49:word16] = ax_141
	word16 di_151
	selector ds_152
	fn0800_3E27(ds_140, Mem144[ds_140:0x29E3:word16], Mem144[ds_140:0x29E5:word16], out di_151, out ds_152)
	selector ds_168
	word16 ax_169 = fn0800_2D0A(fp - 2, ds_152, out ds_168)
	branch ax_169 == Mem144[ds_168:0x2E49:word16] l0800_5458
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5458:
	Mem184[ss:fp - 0x0014:word16] = 0x0001
	Mem186[ss:fp - 0x0016:word16] = 0x000F
	selector ds_189
	fn0800_4311(fp - 2, ds_168, wArg00, wArg02, out ds_189)
	Mem193[ss:fp - 0x0008:word16] = 0x000F
	Mem194[ss:fp - 0x000A:word16] = 0x0001
	Mem197[ds_189:0x2E73:word16] = 0x0010
	Mem198[ds_189:0x2E71:word16] = 0x0000
	Mem202[ss:fp - 0x0014:word16] = 0x0001
	Mem204[ss:fp - 0x0016:word16] = 0x000F
	selector ds_205
	fn0800_4311(fp - 2, ds_189, wArg00, wArg02, out ds_205)
	Mem208[ss:fp - 0x0004:word16] = 0x000F
	Mem209[ss:fp - 0x0006:word16] = 0x0001
	Mem211[ds_205:0x2E5B:word16] = 0x0010
	Mem212[ds_205:0x2E59:word16] = 0x0000
	word16 dx_214 = Mem212[ds_205:0x2E71:word16]
	Mem216[ds_205:0x2E6F:word16] = Mem212[ds_205:0x2E73:word16]
	Mem217[ds_205:0x2E6D:word16] = dx_214 + 0xFFFD
	word16 dx_220 = Mem217[ds_205:0x2E59:word16] + Mem217[ds_205:0x2E31:word16]
	Mem221[ds_205:0x2E57:word16] = Mem217[ds_205:0x2E5B:word16]
	Mem222[ds_205:0x2E55:word16] = dx_220
	Mem223[ds_205:0x2E4D:word16] = 0x0000
	Mem227[ds_205:0x2E45:word16] = 0x0000
	Mem228[ds_205:0x29FD:word16] = 0x0000
	Mem229[ds_205:0x29FB:word16] = 0x0000
	Mem230[ds_205:0x2A01:word16] = 0x0000
	Mem231[ds_205:0x29FF:word16] = 0x0000
	Mem233[ss:fp - 0x0010:word16] = Mem231[ds_205:0x2E4F:word16]
	Mem236[ss:fp - 0x0014:word16] = 0x0001
	word16 si_237
	selector ds_238
	branch fn0800_5C1A(ds_205, wArg00, out si_237, out ds_238) == 0x0000 l0800_5504
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_54F3:
	branch Mem236[ds_238:0x2A25:word16] == 0x0002 l0800_5504
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_54FA:
	branch Mem236[ds_238:0x2A25:word16] == 0x0007 l0800_5504
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5501:
	si_237 = 0x000A
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5504:
	word16 si_247 = si_237
	branch si_237 != 0x0000 l0800_555D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5508:
	Mem361[ss:fp - 0x0014:word16] = 0x0001
	branch fn0800_5C1A(ds_238, wArg00, out si_247, out ds_238) == 0x0000 l0800_5557
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5557:
	Mem402[ds_238:0x2E4F:word16] = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5516:
	branch Mem361[ds_238:0x2A23:word16] == 0x0001 l0800_554B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_551D:
	Mem384[ss:fp - 0x0014:word16] = 0x0010
	word16 ax_387 = fn0800_5C1A(ds_238, wArg00, out si_247, out ds_238)
	branch Mem384[ds_238:0x2A25:word16] != 0x0002 l0800_553B
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5530:
	branch Mem384[ds_238:0x2E4F:word16] != 0x0000 l0800_553B
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5537:
	Mem401[ds_238:0x2E4F:word16] = ax_387
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_553B:
	branch Mem384[ds_238:0x2E4F:word16] == ax_387 l0800_554B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5541:
	branch Mem384[ds_238:0x2E4F:word16] == 0x0000 l0800_554B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5548:
	si_247 = 0x000C
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_554B:
	branch Mem361[ds_238:0x2E4F:word16] != 0x0000 l0800_555D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5552:
	si_247 = 0x000B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_555D:
	word16 si_259 = si_247
	branch si_247 != 0x0000 l0800_557C
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5561:
	word16 ax_347 = Mem236[ds_238:0x2A21:word16]
	branch ax_347 == 0x0001 l0800_5570
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5570:
	si_259 = fn0800_55E8(fp - 2, ds_238, out ds_238)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5569:
	branch ax_347 == 0x0002 l0800_5577
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5577:
	si_259 = fn0800_579B(ds_238, out ds_238)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_556E:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_557C:
	Mem267[ds_238:0x2E4F:word16] = Mem236[ss:fp - 0x0010:word16]
	Mem270[ss:fp - 0x0014:word16] = Mem267[ss:fp - 0x0008:word16]
	Mem273[ss:fp - 0x0016:word16] = Mem270[ss:fp - 0x000A:word16]
	selector ds_274
	fn0800_4346(ds_238, wArg00, wArg02, out ds_274)
	Mem280[ss:fp - 0x0014:word16] = Mem273[ss:fp - 0x0004:word16]
	Mem283[ss:fp - 0x0016:word16] = Mem280[ss:fp - 0x0006:word16]
	selector ds_284
	fn0800_4346(ds_274, wArg00, wArg02, out ds_284)
	word16 v40_287 = Mem283[ds_284:0x2A03:word16] + 0x0012
	Mem288[ds_284:0x2A03:word16] = v40_287
	Mem292[ds_284:0x2A05:word16] = Mem288[ds_284:0x2A05:word16] + (v40_287 <u 0x0000)
	Mem295[ss:fp - 0x0014:word16] = 0x0000
	word16 dx_298 = Mem295[ss:fp - 0x000E:word16] + Mem295[ds_284:0x2A03:word16]
	Mem304[ss:fp - 0x0016:word16] = Mem295[ss:fp - 0x000C:word16] + Mem295[ds_284:0x2A05:word16] + (dx_298 <u 0x0000)
	Mem306[ss:fp - 0x0018:word16] = dx_298
	Mem309[ss:fp - 0x001A:word16] = Mem306[ds_284:0x29E5:word16]
	Mem312[ss:fp - 0x001C:word16] = Mem309[ds_284:0x29E3:word16]
	selector ds_317
	fn0800_ACB3(ds_284, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_317)
	branch si_259 == 0x0000 l0800_55D0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55D0:
	branch Mem312[ds_317:0x2E4D:word16] == Mem312[ds_317:0x2E4B:word16] l0800_55E1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55E1:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55D9:
	return 0x0006
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55C9:
	return si_259
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_5450:
	return 0x0005
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_53BF:
	selector ds_91
	fn0800_3B0A(fp - 2, ds_46, ax_21 & 0x0003, Mem51[ds_46:0x2A09:word16], out ds_91)
	word16 dx_95 = Mem51[ds_91:0x2A07:word16]
	Mem96[ds_91:0x2A05:word16] = Mem51[ds_91:0x2A09:word16]
	Mem97[ds_91:0x2A03:word16] = dx_95
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_5374_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp



word16 fn0800_55E8(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
fn0800_55E8_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_55E8:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_574B:
	word16 ax_44 = Mem0[ds:0x2A01:word16]
	word16 dx_45 = Mem0[ds:0x29FF:word16]
	branch ax_44 >=u Mem0[ds:0x2A09:word16] l0800_575B
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_575B:
	branch ax_44 != Mem0[ds:0x2A09:word16] l0800_5766
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_575D:
	branch dx_45 >=u Mem0[ds:0x2A07:word16] l0800_5766
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5766:
	Mem351[ss:fp - 0x0008:word16] = Mem0[ds:0x29E1:word16]
	Mem354[ss:fp - 0x000A:word16] = Mem351[ds:0x29DF:word16]
	word16 ax_357 = Mem354[ds:0x2E55:word16] - Mem354[ds:0x2E59:word16]
	word16 ax_361 = ax_357 - Mem354[ds:0x2E31:word16]
	Mem366[ss:fp - 0x000C:word16] = 0x0000 - (ax_357 <u 0x0000) - (ax_361 <u 0x0000)
	Mem368[ss:fp - 0x000E:word16] = ax_361
	word16 ax_370 = Mem368[ds:0x2E59:word16] + Mem368[ds:0x2E31:word16]
	Mem374[ss:fp - 0x0010:word16] = Mem368[ds:0x2E5B:word16]
	Mem376[ss:fp - 0x0012:word16] = ax_370
	selector ds_380
	fn0800_4152(ds, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out ds_380)
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_55E8_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> Sequence es:bx:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5763:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5758:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_55F1:
	Mem57[ss:fp - 0x0008:word16] = 0x0010
	Mem60[ss:fp - 0x000A:word16] = ds
	Mem63[ss:fp - 0x000C:word16] = 0x290F
	selector ds_67 = fn0800_5A24(ds, wArg00, wArg02, wArg04)
	Mem72[ss:fp - 0x0008:word16] = 0x0010
	Mem74[ss:fp - 0x000A:word16] = ds_67
	Mem77[ss:fp - 0x000C:word16] = 0x284F
	selector ds_78 = fn0800_5A24(ds_67, wArg00, wArg02, wArg04)
	Mem83[ss:fp - 0x0008:word16] = 0x0010
	Mem85[ss:fp - 0x000A:word16] = ds_78
	Mem88[ss:fp - 0x000C:word16] = 0x278F
	selector ds_89 = fn0800_5A24(ds_78, wArg00, wArg02, wArg04)
	Mem94[ss:fp - 0x0008:word16] = 0x0010
	word16 wLoc04_102 = 0x0000
	word16 wLoc06_100 = fn0800_5C39(fp - 2, ds_89, wArg00, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_5736:
	word16 v11_123 = wLoc06_100 - 0x0001
	wLoc06_100 = v11_123
	wLoc04_102 = v12
	branch (wLoc06_100 | wLoc04_102) == 0x0000 l0800_574B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_5748:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_5633:
	Mem135[ss:fp - 0x0008:word16] = ds
	Mem138[ss:fp - 0x000A:word16] = 0x290F
	word16 ax_140 = fn0800_5A8D(ds, wArg00, wArg02, out ds)
	Mem142[ds:0x2E47:word16] = ax_140
	word16 v17_143 = Mem142[ds:0x29FF:word16] + ax_140
	Mem144[ds:0x29FF:word16] = v17_143
	Mem148[ds:0x2A01:word16] = Mem144[ds:0x2A01:word16] + (v17_143 <u 0x0000)
	branch Mem148[ds:0x2E47:word16] != 0x0000 l0800_5654
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_5654:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_5664:
	word16 ax_238 = Mem148[ds:0x2E47:word16]
	Mem240[ds:0x2E47:word16] = Mem148[ds:0x2E47:word16] - 0x0001
	word16 ax_241 = ax_238
	branch ax_238 != 0x0000 l0800_5656
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_5656:
	word16 si_336
	word16 di_337
	selector ds_338
	byte al_339 = fn0800_5B15(ds, out si_336, out di_337, out ds_338)
	Mem345[ss:fp - 0x0008:word16] = DPB(ax_238, al_339 ^ Mem240[ds_338:0x2E4F:byte], 0)
	ds = fn0800_5D2F(ds_338, bArg00)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_566F:
	branch (Mem240[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_5684
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_5684:
	Mem334[ds:0x2E4F:word16] = Mem240[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_5677:
	ax_241 = Mem240[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
	Mem332[ds:0x2E4F:word16] = ax_241
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_5688:
	word16 bx_251 = (word16) Mem240[ds:0x2E6D:segptr32]
	Mem257[ss:fp - 0x0008:word16] = DPB(ax_241, 0x00, 8)
	word16 dx_261 = DPB(wLoc04_102, 0x00, 8)
	word16 dx_269 = Mem257[ss:fp - 0x0008:word16] + (dx_261 << 0x08 <u 0x0000)
	Mem274[ss:fp - 0x0008:word16] = dx_261 << 0x08
	Mem277[ss:fp - 0x000A:word16] = dx_269
	int32 dx_ax_278 = (int32) DPB(bx_251, 0x00, 8)
	word16 ax_279 = (word16) dx_ax_278
	int32 dx_ax_291 = SEQ(Mem277[ss:fp - 0x000A:word16], Mem277[ss:fp - 0x0008:word16] + ax_279) + SEQ(SLICE(dx_ax_278, word16, 16), ax_279)
	word16 dx_296
	Mem299[ss:fp - 0x0008:word16] = fn0800_8C69((word16) dx_ax_291, Mem277[ds:0x2E45:byte], SLICE(dx_ax_291, word16, 16), bp, out dx_296)
	word16 ax_302 = 0x0001 << Mem299[ds:0x2E45:byte]
	Mem305[ss:fp - 0x000A:word16] = dx_296
	int32 dx_ax_306 = (int32) (ax_302 - 0x0001)
	word16 cx_311 = Mem305[ds:0x29FB:word16] & (word16) dx_ax_306
	ui32 ax_dx_321 = SEQ(Mem305[ss:fp - 0x000A:word16], Mem305[ss:fp - 0x0008:word16] + cx_311) + SEQ(Mem305[ds:0x29FD:word16] & SLICE(dx_ax_306, word16, 16), cx_311)
	Mem325[ds:0x29FD:word16] = SLICE(ax_dx_321, word16, 16)
	Mem326[ds:0x29FB:word16] = (word16) ax_dx_321
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_5651:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_56E6:
	branch (v11_123 | v12) == 0x0000 l0800_574B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> si:<invalid> di:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_56EE:
	Mem177[ss:fp - 0x0008:word16] = ds
	Mem180[ss:fp - 0x000A:word16] = 0x284F
	selector ds_181
	word16 ax_182 = fn0800_5A8D(ds, wArg00, wArg02, out ds_181)
	Mem187[ds_181:0x2E2B:word16] = ax_182 + 0x0001
	Mem189[ss:fp - 0x0008:word16] = ds_181
	Mem192[ss:fp - 0x000A:word16] = 0x278F
	word16 ax_194 = fn0800_5A8D(ds_181, wArg00, wArg02, out ds)
	Mem197[ds:0x2E29:word16] = ax_194 + 0x0002
	word16 v19_198 = Mem197[ds:0x29FF:word16] + (ax_194 + 0x0002)
	Mem199[ds:0x29FF:word16] = v19_198
	Mem203[ds:0x2A01:word16] = Mem199[ds:0x2A01:word16] + (v19_198 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> si:<invalid> di:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_572B:
	word16 ax_212 = Mem203[ds:0x2E29:word16]
	Mem214[ds:0x2E29:word16] = Mem203[ds:0x2E29:word16] - 0x0001
	branch ax_212 != 0x0000 l0800_5719
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> si:<invalid> di:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_5719:
	ptr32 es_bx_219 = Mem214[ds:0x2E55:segptr32]
	Mem227[ss:fp - 0x0008:word16] = DPB(ax_212, Mem214[SLICE(es_bx_219, selector, 16):(word16) es_bx_219 - Mem214[ds:0x2E2B:word16]:byte], 0)
	ds = fn0800_5D2F(ds, bArg00)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> si:<invalid> di:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)



word16 fn0800_579B(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: sp
fn0800_579B_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16)

l0800_579B:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16)

l0800_58F2:
	word16 ax_24 = Mem0[ds:0x2A01:word16]
	word16 dx_25 = Mem0[ds:0x29FF:word16]
	branch ax_24 >=u Mem0[ds:0x2A09:word16] l0800_5902
// DataOut: bp ds dx ss
// DataOut (flags): Z
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(16)

l0800_5902:
	branch ax_24 != Mem0[ds:0x2A09:word16] l0800_590D
// DataOut: bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(16)

l0800_5904:
	branch dx_25 >=u Mem0[ds:0x2A07:word16] l0800_590D
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(16)

l0800_590D:
	word16 ax_297 = Mem0[ds:0x2E55:word16] - Mem0[ds:0x2E59:word16]
	word16 ax_301 = ax_297 - Mem0[ds:0x2E31:word16]
	selector ds_317
	fn0800_4152(ds, Mem0[ds:0x2E59:word16] + Mem0[ds:0x2E31:word16], Mem0[ds:0x2E5B:word16], ax_301, 0x0000 - (ax_297 <u 0x0000) - (ax_301 <u 0x0000), Mem0[ds:0x29DF:word16], Mem0[ds:0x29E1:word16], out ds_317)
	return 0x0000
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

fn0800_579B_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> al:<invalid> ah:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> Sequence es:bx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_590A:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(16)

l0800_58FF:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(16)

l0800_57CF:
	selector ds_44
	branch fn0800_5CD9(ds, 0x0001, out ds_44) == 0x0000 l0800_579E
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_579E:
	word16 si_255
	word16 di_256
	selector ds_257
	byte al_258 = fn0800_5B15(ds_44, out si_255, out di_256, out ds_257)
	ds = fn0800_5D2F(ds_257, al_258 ^ Mem0[ds_257:0x2E4F:byte])
	branch (Mem0[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_57C1
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(16)

l0800_57C1:
	Mem287[ds:0x2E4F:word16] = Mem0[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_57B4:
	Mem285[ds:0x2E4F:word16] = Mem0[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_57C5:
	word16 v16_273 = Mem0[ds:0x29FF:word16] + 0x0001
	Mem274[ds:0x29FF:word16] = v16_273
	Mem278[ds:0x2A01:word16] = Mem274[ds:0x2A01:word16] + (v16_273 <u 0x0000)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_57DD:
	selector ds_54
	branch fn0800_5CD9(ds_44, 0x0001, out ds_54) == 0x0000 l0800_5866
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(16)

l0800_5866:
	selector ds_164 = fn0800_593F(ds_54)
	branch Mem0[ds_164:0x2E29:word16] != 0x0009 l0800_58B7
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(0)

l0800_58B7:
	ds = fn0800_5975(ds_164)
	word16 v28_219 = Mem0[ds:0x29FF:word16] + Mem0[ds:0x2E29:word16]
	Mem220[ds:0x29FF:word16] = v28_219
	Mem224[ds:0x2A01:word16] = Mem220[ds:0x2A01:word16] + (v28_219 <u 0x0000)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(0)

l0800_58DA:
	word16 ax_235 = Mem224[ds:0x2E29:word16]
	Mem237[ds:0x2E29:word16] = Mem224[ds:0x2E29:word16] - 0x0001
	branch ax_235 != 0x0000 l0800_58C8
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_58C8:
	ptr32 es_bx_242 = Mem237[ds:0x2E55:segptr32]
	ds = fn0800_5D2F(ds, Mem237[SLICE(es_bx_242, selector, 16):(word16) es_bx_242 - Mem237[ds:0x2E2B:word16]:byte])
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_58E5:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_5870:
	ds = fn0800_5A0F(ds_164)
	word16 v22_169 = Mem0[ds:0x29FF:word16] + Mem0[ds:0x2E47:word16]
	Mem170[ds:0x29FF:word16] = v22_169
	Mem174[ds:0x2A01:word16] = Mem170[ds:0x2A01:word16] + (v22_169 <u 0x0000)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(0)

l0800_588F:
	word16 ax_184 = Mem174[ds:0x2E47:word16]
	Mem186[ds:0x2E47:word16] = Mem174[ds:0x2E47:word16] - 0x0001
	branch ax_184 != 0x0000 l0800_5881
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_5881:
	word16 si_203
	word16 di_204
	selector ds_205
	byte al_206 = fn0800_5B15(ds, out si_203, out di_204, out ds_205)
	ds = fn0800_5D2F(ds_205, al_206 ^ Mem186[ds_205:0x2E4F:byte])
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_589A:
	branch (Mem186[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_58B0
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_58B0:
	Mem201[ds:0x2E4F:word16] = Mem186[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_58A2:
	Mem199[ds:0x2E4F:word16] = Mem186[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_57EB:
	selector ds_64
	word16 ax_65 = fn0800_5CD9(ds_54, 0x0001, out ds_64)
	branch ax_65 != 0x0000 l0800_580A
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(16)

l0800_580A:
	selector ds_130
	word16 ax_131 = fn0800_5CD9(ds_64, 0x0001, out ds_130)
	branch ax_131 != 0x0000 l0800_5820
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(0)

l0800_5820:
	word16 si_147
	word16 di_148
	fn0800_5B15(ds_130, out si_147, out di_148, out ds_130)
	Mem154[ds_130:0x2E29:word16] = DPB(ax_131, 0x00, 8) + 0x0008
	branch Mem154[ds_130:0x2E29:word16] != 0x0008 l0800_5835
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(0)

l0800_5832:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(0)

l0800_58E8:
	fn0800_5CD9(ds_130, 0x0001, out ds)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(16)

l0800_5818:
	Mem146[ds_130:0x2E29:word16] = 0x0003
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(0)

l0800_5835:
	ds = fn0800_5975(ds_130)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(0)

l0800_57F9:
	Mem117[ds_64:0x2E29:word16] = 0x0002
	word16 si_118
	word16 di_119
	fn0800_5B15(ds_64, out si_118, out di_119, out ds)
	Mem126[ds:0x2E2B:word16] = DPB(ax_65, 0x00, 8) + 0x0001
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(0)

l0800_5838:
	word16 v13_81 = Mem0[ds:0x29FF:word16] + Mem0[ds:0x2E29:word16]
	Mem82[ds:0x29FF:word16] = v13_81
	Mem86[ds:0x2A01:word16] = Mem82[ds:0x2A01:word16] + (v13_81 <u 0x0000)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16) Local -0004(0)

l0800_5858:
	word16 ax_97 = Mem86[ds:0x2E29:word16]
	Mem99[ds:0x2E29:word16] = Mem86[ds:0x2E29:word16] - 0x0001
	branch ax_97 != 0x0000 l0800_5846
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_5846:
	ptr32 es_bx_104 = Mem99[ds:0x2E55:segptr32]
	ds = fn0800_5D2F(ds, Mem99[SLICE(es_bx_104, selector, 16):(word16) es_bx_104 - Mem99[ds:0x2E2B:word16]:byte])
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_5863:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)



selector fn0800_593F(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_593F_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_593F:
	selector ds_6
	word16 ax_7 = fn0800_5CD9(ds, 0x0001, out ds_6)
	Mem11[ds_6:0x2E29:word16] = ax_7 + 0x0004
	selector ds_15
	branch fn0800_5CD9(ds_6, 0x0001, out ds_15) == 0x0000 l0800_5974
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_595D:
	word16 ax_33 = fn0800_5CD9(ds_15, 0x0001, out ds_15)
	Mem40[ds_15:0x2E29:word16] = (Mem11[ds_15:0x2E29:word16] - 0x0001 << 0x0001) + ax_33
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001

l0800_5974:
	return ds_15
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001

fn0800_593F_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001



selector fn0800_5975(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: sp
fn0800_5975_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5975:
	Mem2[ds:0x2E2B:word16] = 0x0000
	selector ds_18
	word16 ax_8 = fn0800_5CD9(ds, 0x0001, out ds_18)
	word16 ax_10 = ax_8
	branch ax_8 == 0x0000 l0800_59FA
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5989:
	selector ds_37
	word16 ax_38 = fn0800_5CD9(ds_18, 0x0001, out ds_37)
	Mem41[ds_37:0x2E2B:word16] = ax_38
	word16 ax_46 = fn0800_5CD9(ds_37, 0x0001, out ds_18)
	ax_10 = ax_46
	branch ax_46 == 0x0000 l0800_59E3
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16)

l0800_59E3:
	branch Mem41[ds_18:0x2E2B:word16] != 0x0000 l0800_59FA
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16)

l0800_59EA:
	word16 ax_92 = fn0800_5CD9(ds_18, 0x0001, out ds_18)
	Mem96[ds_18:0x2E2B:word16] = ax_92 + 0x0002
	ax_10 = ax_92 + 0x0002
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001

l0800_59A4:
	selector ds_55
	word16 ax_56 = fn0800_5CD9(ds_18, 0x0001, out ds_55)
	Mem64[ds_55:0x2E2B:word16] = (Mem41[ds_55:0x2E2B:word16] << 0x0001) + ax_56 | 0x0004
	word16 ax_69 = fn0800_5CD9(ds_55, 0x0001, out ds_18)
	ax_10 = ax_69
	branch ax_69 != 0x0000 l0800_59FA
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001
// LocalsOut: fp(16)

l0800_59CB:
	ax_10 = fn0800_5CD9(ds_18, 0x0001, out ds_18)
	Mem85[ds_18:0x2E2B:word16] = (Mem64[ds_18:0x2E2B:word16] << 0x0001) + ax_10
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001

l0800_59FA:
	word16 si_20
	word16 di_21
	selector ds_22
	fn0800_5B15(ds_18, out si_20, out di_21, out ds_22)
	Mem33[ds_22:0x2E2B:word16] = (Mem2[ds_22:0x2E2B:word16] << 0x08) + DPB(ax_10, 0x00, 8) + 0x0001
	return ds_22
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001

fn0800_5975_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> ah:0x00 dx:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001



selector fn0800_5A0F(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_5A0F_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5A0F:
	selector ds_6
	word16 ax_11 = (fn0800_5CD9(ds, 0x0004, out ds_6) << 0x0002) + 0x000C
	Mem13[ds_6:0x2E47:word16] = ax_11
	return ds_6
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_5A0F_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0004



selector fn0800_5A24(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_5A24_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_5A24:
	fn0800_43D4(wArg02, wArg04, wArg06)
	selector ds_30
	word16 ax_31 = fn0800_5C39(fp - 2, ds, 0x0005, out ds_30)
	word16 wArg06_33 = ax_31
	branch ax_31 == 0x0000 l0800_5A89
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_5A49:
	branch ax_31 <=u 0x0010 l0800_5A54
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_5A4F:
	wArg06_33 = 0x0010
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_5A54:
	word16 di_62 = 0x0000
	word16 si_64 = wArg02 + 0x000A
	branch 0x0000 >=u wArg06_33 l0800_5A7A
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_5A61:
	Mem94[wArg04:si_64:word16] = fn0800_5C39(fp - 2, ds_30, 0x0004, out ds_30)
	si_64 = si_64 + 0x000C
	di_62 = di_62 + 0x0001
	branch di_62 <u wArg06_33 l0800_5A61
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_5A7A:
	fn0800_4550(fp - 2)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>

l0800_5A89:
	return ds_30
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>

fn0800_5A24_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>



word16 fn0800_5A8D(selector ds, word16 wArg02, selector psegArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_5A8D_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_5A8D:
	word16 wLoc04_14 = 0x0000
	word16 di_16 = wArg02
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(16) Stack +0004(16)

l0800_5AA5:
	branch Mem0[psegArg04:di_16 + 0x000A:word16] == 0x0000 l0800_5A9F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(16) Stack +0004(16)

l0800_5AAF:
	int32 dx_ax_54 = (int32) ((0x0001 << Mem0[psegArg04:di_16 + 0x000A:byte]) - 0x0001)
	word16 cx_60 = Mem0[ds:0x29FB:word16] & (word16) dx_ax_54
	branch (Mem0[ds:0x29FD:word16] & SLICE(dx_ax_54, word16, 16)) != Mem0[psegArg04:di_16 + 0x0008:word16] l0800_5A9F
// DataOut: bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(16) Stack +0004(16)

l0800_5ACC:
	branch cx_60 != Mem0[psegArg04:di_16 + 0x0006:word16] l0800_5A9F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(16) Stack +0004(16)

l0800_5A9F:
	di_16 = di_16 + 0x000C
	wLoc04_14 = wLoc04_14 + 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(16) Stack +0004(16)

l0800_5AD2:
	selector ds_77
	fn0800_5C39(fp - 2, ds, Mem0[psegArg04:wArg02 + (word16) (wLoc04_14 *s 0x000C) + 0x000A:word16], out ds_77)
	branch wLoc04_14 >=u 0x0002 l0800_5AF8
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_5AF8:
	selector ds_108
	return fn0800_5C39(fp - 2, ds_77, wLoc04_14 - 0x0001, out ds_108) | 0x0001 << bLoc04 - 0x01
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_5AEF:
	return wLoc04_14
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_5A8D_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:si al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



byte fn0800_5B15(selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: al di ds si
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
fn0800_5B15_entry:
	*dsOut = ds
	*diOut = di
	*siOut = si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0010(16) Local -0014(16)

l0800_5B15:
	word16 dx_10 = Mem0[ds:0x2E71:word16]
	branch Mem0[ds:0x2E73:word16] == Mem0[ds:0x2E6F:word16] l0800_5B2E
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0010(16) Local -0014(16)

l0800_5B2E:
	branch dx_10 + 0xFFFD == Mem0[ds:0x2E6D:word16] l0800_5B37
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0010(16) Local -0014(16)

l0800_5B37:
	word16 ax_125
	word16 dx_123
	selector ds_87
	word16 ax_88 = fn0800_4194(ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_87)
	word16 ax_102 = fn0800_AD2F(ds_87, DPB(ptrLoc12, Mem0[ds_87:0x29E3:word16], 0), Mem0[ds_87:0x29E5:word16])
	ui32 bx_cx_112 = SEQ(dx_10 + 0xFFFD, ax_88 - ax_102) - SEQ(dx_10 + 0xFFFD, ax_102)
	word16 bx_113 = SLICE(bx_cx_112, word16, 16)
	word16 cx_114 = (word16) bx_cx_112
	byte CZ_121 = cond(bx_113)
	branch bx_113 <u 0x0000 l0800_5B76
// DataOut: ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(0)

l0800_5B67:
	branch bx_113 >u 0x0000 l0800_5B6F
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(0)

l0800_5B69:
	CZ_121 = cond(cx_114 - 0xFFFD) (alias)
	branch cx_114 <=u 0xFFFD l0800_5B76
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_5B76:
	dx_123 = bx_113
	ax_125 = cx_114
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_5B6F:
	dx_123 = 0x0000
	ax_125 = 0xFFFD
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_5B7C:
	word16 v23_128 = Mem0[ds_87:0x29E5:word16]
	word16 v24_131 = Mem0[ds_87:0x29E3:word16]
	word16 ax_139 = Mem0[ds_87:0x2E73:word16]
	word16 dx_140 = Mem0[ds_87:0x2E71:word16]
	Mem141[ds_87:0x2E6F:word16] = ax_139
	Mem142[ds_87:0x2E6D:word16] = dx_140
	word16 di_147
	selector ds_148
	fn0800_4110(ds_87, dx_140, ax_139, ax_125, dx_123, v24_131, v23_128, out di_147, out ds_148)
	word16 v26_153 = cx_114 - ax_125
	word16 wLoc06_154 = v26_153
	word16 wLoc04_161 = v27
	byte CZ_170 = DPB(CZ_121, false, 0)
	branch false l0800_5BCB
// DataOut: ds dx ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -000A(16)

l0800_5BBA:
	branch CZ_170 l0800_5BC1
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -000A(16)

l0800_5BBC:
	branch v26_153 <=u 0x0002 l0800_5BCB
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -000A(16)

l0800_5BC1:
	wLoc04_161 = 0x0000
	wLoc06_154 = 0x0002
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -000A(16)

l0800_5BCB:
	word16 dx_204 = -wLoc06_154
	word16 di_194
	selector ds_195
	word16 si_196
	*siOut = fn0800_4110(ds_148, Mem142[ds_148:0x2E71:word16] + ax_125, Mem142[ds_148:0x2E73:word16], wLoc06_154, wLoc04_161, Mem142[ds_148:0x29E3:word16], Mem142[ds_148:0x29E5:word16], out di_194, out ds_195)
	fn0800_ACB3(ds_195, DPB(ptrLoc14, Mem142[ds_195:0x29E3:word16], 0), Mem142[ds_195:0x29E5:word16], dx_204, -wLoc04_161 - (dx_204 == 0x0000), 0x0001, out ds)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_5B34:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_5B2B:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_5C0B:
	ptr32 es_bx_43 = Mem0[ds:0x2E6D:segptr32]
	Mem47[ds:0x2E6D:word16] = Mem0[ds:0x2E6D:word16] + 0x0001
	return Mem47[es_bx_43:byte]
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x0001 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5B15_exit:
// DataOut: al di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x0001 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5C1A(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds si
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_5C1A_entry:
	*siOut = si
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5C1A:
	branch Mem0[ds:0x2A21:word16] != 0x0002 l0800_5C30
// DataOut: ax bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5C30:
	selector ds_31
	return fn0800_5C39(fp - 2, ds, wArg02, out ds_31)
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> -2(fp):bp

l0800_5C27:
	selector ds_23
	return fn0800_5CD9(ds, wArg02, out ds_23)
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> -2(fp):bp

fn0800_5C1A_exit:
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5C39(word16 bp, selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_5C39_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5C39:
	word16 si_14 = wArg02
	word16 di_106 = 0x0000
	word16 wLoc08_18 = 0x0001
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16)

l0800_5CCA:
	word16 si_105 = si_14
	branch si_14 == 0x0000 l0800_5CD1
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16)

l0800_5CD1:
	return di_106
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5C39_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5CCE:
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16)

l0800_5C4D:
	branch Mem0[ds:0x2E45:word16] != 0x0000 l0800_5CA2
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16)

l0800_5C54:
	word16 si_98
	word16 di_99
	selector ds_100
	fn0800_5B15(ds, out si_98, out di_99, out ds_100)
	fn0800_5B15(ds_100, out si_105, out di_106, out ds)
	word16 dx_122
	word16 ax_123 = fn0800_8C69(DPB(ax, 0x00, 8), 0x18, 0x0000, bp, out dx_122)
	word16 ax_137 = ax_123 + (DPB(ax, 0x00, 8) << 0x08)
	word16 ax_141 = ax_137 + DPB(ax, 0x00, 8)
	Mem146[ds:0x29FD:word16] = dx_122 + DPB((word16) Mem0[ds:0x2E6D:segptr32], 0x00, 8) + (ax_123 <u 0x0000) + (ax_137 <u 0x0000) + (ax_141 <u 0x0000)
	Mem147[ds:0x29FB:word16] = ax_141
	Mem148[ds:0x2E45:word16] = 0x0010
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16)

l0800_5CA2:
	branch (Mem0[ds:0x29FB:word16] & 0x0001) == 0x0000 l0800_5CB0
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16)

l0800_5CAD:
	di_106 = di_106 | wLoc08_18
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16)

l0800_5CB0:
	word16 ax_79 = Mem0[ds:0x29FD:word16]
	word16 dx_85 = __rcr(Mem0[ds:0x29FB:word16], 0x01, (bool) cond(ax_79 >>u 0x0001))
	Mem86[ds:0x29FD:word16] = ax_79 >>u 0x0001
	Mem87[ds:0x29FB:word16] = dx_85
	Mem92[ds:0x2E45:word16] = Mem87[ds:0x2E45:word16] - 0x0001
	ax = ax_79 >>u 0x0001
	wLoc08_18 = wLoc08_18 << 0x0001
	si_14 = si_105 - 0x0001
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16)



word16 fn0800_5CD9(selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_5CD9_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5CD9:
	word16 di_13 = wArg02
	word16 si_14 = 0x0000
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5D25:
	word16 di_31 = di_13
	branch di_13 != 0x0000 l0800_5CE5
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_5CE5:
	branch Mem0[ds:0x2E45:word16] != 0x0000 l0800_5D00
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_5CEC:
	fn0800_5B15(ds, out si_14, out di_31, out ds)
	Mem83[ds:0x29FD:word16] = 0x0000
	Mem84[ds:0x29FB:word16] = DPB(ax, 0x00, 8)
	Mem85[ds:0x2E45:word16] = 0x0008
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_5D00:
	si_14 = si_14 << 0x0001
	branch (Mem0[ds:0x29FB:word16] & 0x0080) == 0x0000 l0800_5D0E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_5D0D:
	si_14 = si_14 + 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_5D0E:
	word16 dx_62 = Mem0[ds:0x29FB:word16]
	ax = __rcl(Mem0[ds:0x29FD:word16], 0x01, (bool) cond(dx_62 << 0x0001))
	Mem69[ds:0x29FD:word16] = ax
	Mem70[ds:0x29FB:word16] = dx_62 << 0x0001
	Mem72[ds:0x2E45:word16] = Mem70[ds:0x2E45:word16] - 0x0001
	di_13 = di_31 - 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_5D29:
	return si_14
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_5CD9_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di si:si ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp



selector fn0800_5D2F(selector ds, byte bArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(8)
fn0800_5D2F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_5D2F:
	word16 ax_104 = Mem0[ds:0x2E5B:word16]
	word16 dx_9 = Mem0[ds:0x2E59:word16]
	branch ax_104 != Mem0[ds:0x2E57:word16] l0800_5D9E
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_5D40:
	branch dx_9 - 0x0001 != Mem0[ds:0x2E55:word16] l0800_5D9E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_5D46:
	word16 dx_66 = 0xFFFF - Mem0[ds:0x2E31:word16]
	selector ds_82
	fn0800_4152(ds, Mem0[ds:0x2E59:word16] + Mem0[ds:0x2E31:word16], Mem0[ds:0x2E5B:word16], dx_66, 0x0000 - (dx_66 <u 0x0000), Mem0[ds:0x29DF:word16], Mem0[ds:0x29E1:word16], out ds_82)
	ds = fn0800_B0F3(Mem0[ds_82:0x2E59:word16], Mem0[ds_82:0x2E5B:word16], Mem0[ds_82:0x2E55:word16] - Mem0[ds_82:0x2E31:word16], Mem0[ds_82:0x2E57:word16], Mem0[ds_82:0x2E31:word16])
	ax_104 = Mem0[ds:0x2E5B:word16]
	word16 dx_106 = Mem0[ds:0x2E59:word16] + Mem0[ds:0x2E31:word16]
	Mem108[ds:0x2E57:word16] = ax_104
	Mem109[ds:0x2E55:word16] = dx_106
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(8)

l0800_5D9E:
	Mem36[Mem0[ds:0x2E55:segptr32]:byte] = bArg02
	Mem38[ds:0x2E55:word16] = Mem36[ds:0x2E55:word16] + 0x0001
	Mem53[ds:0x2E4D:word16] = Mem38[ds:((DPB(ax_104, 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem38[ds:0x2E4D:word16] >>u 0x08
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5D2F_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5DCE(selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp dx si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_5DCE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_5DCE:
	word16 ax_165
	selector ds_151
	word16 ax_19 = fn0800_4194(ds, wArg02, wArg04, out ds_151)
	branch false l0800_5DEE
// DataOut: ax ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_5DE2:
	branch dx != 0x0000 l0800_5DE9
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_5DE4:
	branch ax_19 <u 0x0400 l0800_5DEE
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_5DEE:
	ax_165 = fn0800_4194(ds_151, wArg02, wArg04, out ds_151) & 0xFFFC
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_5DE9:
	ax_165 = 0x0400
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_5DFD:
	word16 si_100 = ax_165
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_5E5B:
	branch si_100 != 0x0000 l0800_5E01
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_5E01:
	word16 di_82
	branch fn0800_3E27(ds_151, wArg02, wArg04, out di_82, out ds_151) != 0x524E l0800_5E58
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_5E12:
	word16 di_108
	selector ds_109
	branch (fn0800_3E27(ds_151, wArg02, wArg04, out di_108, out ds_109) & 0xFF00) != 0x4300 l0800_5E40
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_5E40:
	ptrLoc0E = DPB(ptrLoc0E, wArg02, 0) (alias)
	fn0800_ACB3(ds_109, ptrLoc0E, wArg04, 0xFFFE, 0xFFFF, 0x0001, out ds_151)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_5E58:
	si_100 = si_100 - 0x0002
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_5E26:
	selector ds_131
	fn0800_ACB3(ds_109, DPB(ptrLoc0E, wArg02, 0), wArg04, 0xFFFC, 0xFFFF, 0x0001, out ds_131)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_5E5F:
	return si_100
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_5DCE_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> si:si ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_5E64(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_5E64_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5E64:
	word16 di_1685 = 0x2202
	word16 si_1684 = 0x4271
	word16 cx_1686 = 0x0004
	word16 dx_1575 = 0x0003
	branch true l0800_5E80
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E7E:
	cx_1686 = 0x0003
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:0x2202 si:0x4271 cx:0x0004 dx:0x0003 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E80:
	word16 ax_1672 = 0x0000
	bool Z_1681 = (bool) cond(0x0000)
	bool C_1682 = false
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:0x2202 si:0x4271 cx:<invalid> dx:0x0003 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E82:
	branch cx_1686 == 0x0000 l0800_5E84
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E82_1:
	byte SCZO_1679 = cond(Mem0[ds:si_1692:byte] - Mem0[ds:di_1693:byte])
	Z_1681 = (bool) SCZO_1679 (alias)
	C_1682 = (bool) SCZO_1679 (alias)
	si_1684 = si_1692 + 0x0001
	di_1685 = di_1693 + 0x0001
	cx_1686 = cx_1686 - 0x0001
	word16 si_1692 = si_1684
	word16 di_1693 = di_1685
	branch Mem0[ds:si_1692:byte] != Mem0[ds:di_1693:byte] l0800_5E82
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E84:
	branch Z_1681 l0800_5E8B
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E86:
	word16 ax_1669 = 0x0000 - C_1682
	ax_1672 = ax_1669 - 0xFFFF - (ax_1669 <u 0x0000)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E8B:
	word16 ax_1651 = ax_1672
	branch ax_1672 == 0x0000 l0800_5EC3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E8F:
	word16 di_1569 = 0x4271
	word16 si_1570 = 0x2202
	word16 cx_1572 = 0x0004
	dx_1575 = 0xFFFF
	branch true l0800_5EA5
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA1:
	cx_1572 = 0x0003
	dx_1575 = 0x0000
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:0x4271 si:0x2202 cx:0x0004 dx:0xFFFF ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA5:
	word16 cx_1590 = cx_1572 >>u 0x0001
	cx_1600 = cx_1590
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:0x4271 si:0x2202 cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA7:
	word16 cx_1600
	branch cx_1600 == 0x0000 l0800_5EA9
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA9:
	word16 cx_1610 = cx_1600 * 0x0002 + (cx_1590 <u 0x0000)
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EAB:
	branch cx_1610 == 0x0000 l0800_5EAD
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EAD:
	word16 cx_1626 = dx_1575
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EB1:
	branch cx_1626 == 0x0000 l0800_5EB3
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EB3:
	fn0800_09A3(fp - 2, ds, out ds)
	ax_1651 = 0x4271
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EC3:
	word16 ax_98 = (DPB(ax_1651, 0x00, 8) << 0x08) + DPB(dx_1575, 0x00, 8)
	branch 0x0000 <u Mem0[ds:0x2A09:word16] l0800_5EED
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:0x00 bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> ah:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EDC:
	branch 0x0000 != Mem0[ds:0x2A09:word16] l0800_5EE4
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EDE:
	branch ax_98 <u Mem0[ds:0x2A07:word16] l0800_5EED
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EED:
	branch Mem0[ds:0x2A0D:word16] <u 0x0000 l0800_5F0A
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EF4:
	branch Mem0[ds:0x2A0D:word16] >u 0x0000 l0800_5EFE
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EF6:
	branch Mem0[ds:0x2A0B:word16] <=u 0x7FF0 l0800_5F0A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EFE:
	Mem1545[ds:0x2A0D:word16] = 0x0000
	Mem1546[ds:0x2A0B:word16] = 0x7FF0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F0A:
	Mem145[ss:fp - 0x0040:word16] = 0x0000
	Mem149[ss:fp - 0x0042:word16] = 0x0000
	Mem151[ss:fp - 0x0044:word16] = 0x0002
	Mem154[ss:fp - 0x0046:word16] = Mem151[ds:0x29E5:word16]
	Mem157[ss:fp - 0x0048:word16] = Mem154[ds:0x29E3:word16]
	selector ds_163
	fn0800_ACB3(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_163)
	Mem169[ss:fp - 0x0040:word16] = Mem157[ds_163:0x29E5:word16]
	Mem172[ss:fp - 0x0042:word16] = Mem169[ds_163:0x29E3:word16]
	word16 di_174
	selector ds_175
	Mem179[ss:fp - 0x0024:word16] = fn0800_3FAD(ds_163, wArg00, wArg02, out di_174, out ds_175)
	Mem182[ss:fp - 0x0040:word16] = Mem179[ds_175:0x29E5:word16]
	Mem185[ss:fp - 0x0042:word16] = Mem182[ds_175:0x29E3:word16]
	word16 di_186
	selector ds_187
	word16 ax_188 = fn0800_3FAD(ds_175, wArg00, wArg02, out di_186, out ds_187)
	word16 di_1541 = ax_188
	branch Mem185[ss:fp - 0x0024:word16] == 0x0000 l0800_5F48
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5F47:
	di_1541 = ax_188 - 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:0x02 dh:0x00 bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5F48:
	word16 dx_199
	word16 ax_201 = fn0800_8C69(di_1541, 0x09, 0x0000, bp, out dx_199) + Mem185[ss:fp - 0x0024:word16]
	Mem205[ss:fp - 0x0004:word16] = dx_199 + (ax_201 <u 0x0000)
	Mem206[ss:fp - 0x0006:word16] = ax_201
	word16 ax_207 = Mem206[ss:fp - 0x0004:word16]
	word16 dx_1536 = Mem206[ss:fp - 0x0006:word16]
	branch ax_207 <u Mem206[ds_187:0x2A09:word16] l0800_5F7E
// DataOut: bp ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:0x02 dh:0x00 bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F69:
	branch ax_207 >u Mem206[ds_187:0x2A09:word16] l0800_5F71
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F6B:
	branch dx_1536 <=u Mem206[ds_187:0x2A07:word16] l0800_5F7E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F71:
	dx_1536 = Mem206[ds_187:0x2A07:word16]
	Mem1537[ss:fp - 0x0004:word16] = Mem206[ds_187:0x2A09:word16]
	Mem1538[ss:fp - 0x0006:word16] = dx_1536
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F7E:
	Mem224[ss:fp - 0x0040:word16] = Mem206[ds_187:0x29E5:word16]
	Mem227[ss:fp - 0x0042:word16] = Mem224[ds_187:0x29E3:word16]
	word16 di_228
	selector ds_229
	Mem233[ss:fp - 0x0026:word16] = fn0800_3FAD(ds_187, wArg00, wArg02, out di_228, out ds_229)
	Mem236[ss:fp - 0x0040:word16] = Mem233[ds_229:0x29E5:word16]
	Mem239[ss:fp - 0x0042:word16] = Mem236[ds_229:0x29E3:word16]
	word16 di_240
	selector ds_241
	Mem245[ss:fp - 0x0028:word16] = fn0800_3FAD(ds_229, wArg00, wArg02, out di_240, out ds_241)
	Mem248[ss:fp - 0x0040:word16] = Mem245[ds_241:0x29E5:word16]
	Mem251[ss:fp - 0x0042:word16] = Mem248[ds_241:0x29E3:word16]
	word16 di_252
	selector ds_253
	Mem257[ss:fp - 0x002A:word16] = fn0800_3FAD(ds_241, wArg00, wArg02, out di_252, out ds_253)
	Mem260[ss:fp - 0x0040:word16] = Mem257[ds_253:0x29E5:word16]
	Mem263[ss:fp - 0x0042:word16] = Mem260[ds_253:0x29E3:word16]
	word16 di_264
	selector ds_265
	Mem269[ss:fp - 0x002C:word16] = fn0800_3FAD(ds_253, wArg00, wArg02, out di_264, out ds_265)
	Mem272[ss:fp - 0x0040:word16] = Mem269[ds_265:0x29E5:word16]
	Mem275[ss:fp - 0x0042:word16] = Mem272[ds_265:0x29E3:word16]
	word16 di_276
	selector ds_277
	Mem281[ss:fp - 0x002E:word16] = fn0800_3FAD(ds_265, wArg00, wArg02, out di_276, out ds_277)
	Mem284[ss:fp - 0x0040:word16] = Mem281[ds_277:0x29E5:word16]
	Mem287[ss:fp - 0x0042:word16] = Mem284[ds_277:0x29E3:word16]
	word16 di_288
	selector ds_289
	Mem293[ss:fp - 0x0030:word16] = fn0800_3FAD(ds_277, wArg00, wArg02, out di_288, out ds_289)
	Mem296[ss:fp - 0x0040:word16] = Mem293[ds_289:0x29E5:word16]
	Mem299[ss:fp - 0x0042:word16] = Mem296[ds_289:0x29E3:word16]
	word16 di_300
	selector ds_301
	fn0800_3FAD(ds_289, wArg00, wArg02, out di_300, out ds_301)
	Mem307[ss:fp - 0x0040:word16] = Mem299[ds_301:0x29E5:word16]
	Mem310[ss:fp - 0x0042:word16] = Mem307[ds_301:0x29E3:word16]
	word16 di_311
	selector ds_312
	Mem316[ss:fp - 0x0032:word16] = fn0800_3FAD(ds_301, wArg00, wArg02, out di_311, out ds_312)
	Mem319[ss:fp - 0x0040:word16] = Mem316[ds_312:0x29E5:word16]
	Mem322[ss:fp - 0x0042:word16] = Mem319[ds_312:0x29E3:word16]
	word16 di_323
	selector ds_324
	Mem328[ss:fp - 0x0034:word16] = fn0800_3FAD(ds_312, wArg00, wArg02, out di_323, out ds_324)
	Mem331[ss:fp - 0x0040:word16] = Mem328[ds_324:0x29E5:word16]
	Mem334[ss:fp - 0x0042:word16] = Mem331[ds_324:0x29E3:word16]
	word16 di_335
	selector ds_336
	Mem340[ss:fp - 0x0036:word16] = fn0800_3FAD(ds_324, wArg00, wArg02, out di_335, out ds_336)
	Mem343[ss:fp - 0x0040:word16] = Mem340[ds_336:0x29E5:word16]
	Mem346[ss:fp - 0x0042:word16] = Mem343[ds_336:0x29E3:word16]
	word16 di_347
	selector ds_348
	word16 ax_349 = fn0800_3FAD(ds_336, wArg00, wArg02, out di_347, out ds_348)
	Mem353[ss:fp - 0x0040:word16] = Mem346[ds_348:0x29E1:word16]
	Mem356[ss:fp - 0x0042:word16] = Mem353[ds_348:0x29DF:word16]
	Mem370[ss:fp - 0x0044:word16] = 0x0000
	Mem372[ss:fp - 0x0046:word16] = (DPB(ax_349, 0x00, 8) << 0x08) + DPB(dx_1536, 0x00, 8)
	Mem374[ss:fp - 0x0048:word16] = ds_348
	Mem377[ss:fp - 0x004A:word16] = 0x2E77
	selector ds_1487
	fn0800_4152(ds_348, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out ds_1487)
	word16 dx_1199 = 0x0000
	word16 ax_1268 = 0x2E77
	branch Mem377[ss:fp - 0x0026:word16] != 0x0000 l0800_6064
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6064:
	Mem1201[ss:fp - 0x0040:word16] = 0x0000
	Mem1203[ss:fp - 0x0042:word16] = 0xFFFF
	selector ds_1204
	fn0800_4311(fp - 2, ds_1487, wArg00, wArg02, out ds_1204)
	Mem1207[ss:fp - 0x000C:word16] = 0xFFFF
	Mem1208[ss:fp - 0x000E:word16] = 0x0000
	Mem1213[ss:fp - 0x0040:word16] = 0x0000
	Mem1215[ss:fp - 0x0042:word16] = 0x0000
	Mem1218[ss:fp - 0x0044:word16] = Mem1215[ss:fp - 0x0036:word16]
	Mem1221[ss:fp - 0x0046:word16] = Mem1218[ds_1204:0x29E5:word16]
	Mem1224[ss:fp - 0x0048:word16] = Mem1221[ds_1204:0x29E3:word16]
	selector ds_1225
	fn0800_ACB3(ds_1204, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_1225)
	Mem1232[ss:fp - 0x0038:word16] = Mem1224[ss:fp - 0x000E:word16]
	dx_1199 = 0xFFFF
	word16 si_1228 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_60D6:
	branch si_1228 != Mem1232[ss:fp - 0x0026:word16] l0800_6096
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6096:
	Mem1493[ss:fp - 0x0040:word16] = Mem1232[ds_1225:0x29E5:word16]
	Mem1496[ss:fp - 0x0042:word16] = Mem1493[ds_1225:0x29E3:word16]
	word16 di_1497
	selector ds_1498
	Mem1502[ss:fp - 0x0024:word16] = fn0800_3FAD(ds_1225, wArg00, wArg02, out di_1497, out ds_1498)
	Mem1505[ss:fp - 0x0040:word16] = Mem1502[ds_1498:0x29E5:word16]
	Mem1508[ss:fp - 0x0042:word16] = Mem1505[ds_1498:0x29E3:word16]
	word16 di_1509
	word16 dx_1518
	word16 ax_1520 = fn0800_8C69(fn0800_3FAD(ds_1498, wArg00, wArg02, out di_1509, out ds_1225), 0x04, 0x0000, bp, out dx_1518) + Mem1508[ss:fp - 0x0024:word16]
	dx_1199 = dx_1518 + (ax_1520 <u 0x0000)
	selector es_1524 = Mem1508[ss:fp - 0x000C:selector]
	word16 bx_1525 = Mem1508[ss:fp - 0x0038:word16]
	Mem1526[es_1524:bx_1525 + 0x0002:word16] = dx_1199
	Mem1527[es_1524:bx_1525:word16] = ax_1520
	Mem1529[ss:fp - 0x0038:word16] = Mem1527[ss:fp - 0x0038:word16] + 0x0004
	si_1228 = si_1228 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_60DB:
	Mem1248[ss:fp - 0x0040:word16] = 0x667B
	Mem1251[ss:fp - 0x0042:word16] = 0x0004
	Mem1254[ss:fp - 0x0044:word16] = Mem1251[ss:fp - 0x0026:word16]
	Mem1257[ss:fp - 0x0046:word16] = Mem1254[ss:fp - 0x000C:word16]
	Mem1260[ss:fp - 0x0048:word16] = Mem1257[ss:fp - 0x000E:word16]
	selector ds_1261 = fn0800_B95E(ds_1225, wArg00, wArg02, wArg04, wArg06, wArg08)
	word16 di_1264 = Mem1260[ss:fp - 0x000E:word16]
	ax_1268 = -false
	Mem1271[ss:fp - 0x003A:word16] = ax_1268
	word16 si_1263 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_620C:
	branch si_1263 == Mem1271[ss:fp - 0x0026:word16] l0800_6214
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6214:
	Mem1483[ss:fp - 0x0040:word16] = Mem1271[ss:fp - 0x000C:word16]
	Mem1486[ss:fp - 0x0042:word16] = Mem1483[ss:fp - 0x000E:word16]
	fn0800_4346(ds_1261, wArg00, wArg02, out ds_1487)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6211:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6104:
	selector es_1291 = Mem1271[ss:fp - 0x000C:selector]
	word16 ax_1292 = Mem1271[es_1291:di_1264 + 0x0002:word16]
	word16 dx_1293 = Mem1271[es_1291:di_1264:word16]
	Mem1294[ss:fp - 0x0014:word16] = ax_1292
	Mem1295[ss:fp - 0x0016:word16] = dx_1293
	Mem1300[ss:fp - 0x0010:word16] = ax_1292 & 0x000F
	Mem1301[ss:fp - 0x0012:word16] = dx_1293 & 0xFFF0
	Mem1304[ss:fp - 0x0040:word16] = Mem1301[ds_1261:0x29E1:word16]
	Mem1307[ss:fp - 0x0042:word16] = Mem1304[ds_1261:0x29DF:word16]
	Mem1311[ss:fp - 0x0044:word16] = DPB(ax_1292 & 0x000F, 0x00, 0)
	selector ds_1312
	fn0800_4047(ds_1261, bArg00, ptrArg02, wArg04, out ds_1312)
	Mem1318[ss:fp - 0x0040:word16] = Mem1311[ds_1312:0x29E1:word16]
	Mem1321[ss:fp - 0x0042:word16] = Mem1318[ds_1312:0x29DF:word16]
	word16 dx_1325
	Mem1328[ss:fp - 0x0044:word16] = fn0800_8CAA(Mem1321[ss:fp - 0x0012:word16], 0x04, Mem1321[ss:fp - 0x0010:word16], bp, out dx_1325)
	selector ds_1329
	word16 di_1330 = fn0800_40BF(ds_1312, wArg00, wArg02, wArg04, out ds_1329)
	Mem1333[ss:fp - 0x0024:word16] = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6150:
	selector es_1344 = Mem1333[ss:fp - 0x000C:selector]
	word16 dx_1347 = Mem1333[es_1344:di_1330:word16] - Mem1333[ss:fp - 0x0012:word16]
	word16 ax_1350 = Mem1333[es_1344:di_1330 + 0x0002:word16] - Mem1333[ss:fp - 0x0010:word16] - (dx_1347 <u 0x0000)
	Mem1351[ss:fp - 0x0018:word16] = ax_1350
	Mem1352[ss:fp - 0x001A:word16] = dx_1347
	word16 v101_1353 = Mem1352[ss:fp - 0x0012:word16] + dx_1347
	Mem1354[ss:fp - 0x0012:word16] = v101_1353
	Mem1358[ss:fp - 0x0010:word16] = Mem1354[ss:fp - 0x0010:word16] + ax_1350 + (v101_1353 <u 0x0000)
	byte CZ_1363 = cond(Mem1358[ss:fp - 0x0018:word16])
	branch Mem1358[ss:fp - 0x0018:word16] >u 0x0000 l0800_61B9
// DataOut: bp ds si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6172:
	branch Mem1358[ss:fp - 0x0018:word16] != 0x0000 l0800_617B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6174:
	CZ_1363 = cond(Mem1358[ss:fp - 0x001A:word16] - 0x00FF) (alias)
	branch Mem1358[ss:fp - 0x001A:word16] >u 0x00FF l0800_61B9
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_617B:
	word16 dx_1439 = Mem1358[ss:fp - 0x0012:word16] - Mem1358[ss:fp - 0x0016:word16]
	word16 ax_1445 = Mem1358[ss:fp - 0x0010:word16] - Mem1358[ss:fp - 0x0014:word16] - (dx_1439 <u 0x0000)
	branch DPB(CZ_1363, false, 0) l0800_61B9
// DataOut: bp ds dx si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_618B:
	branch false l0800_6192
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_618D:
	branch dx_1439 >=u 0xFFF0 l0800_61B9
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6192:
	branch Mem1358[ss:fp - 0x0024:word16] == 0x00FF l0800_61B9
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6199:
	Mem1459[ss:fp - 0x0040:word16] = Mem1358[ds_1329:0x29E1:word16]
	Mem1462[ss:fp - 0x0042:word16] = Mem1459[ds_1329:0x29DF:word16]
	Mem1466[ss:fp - 0x0044:word16] = DPB(ax_1445, Mem1462[ss:fp - 0x001A:byte], 0)
	word16 di_1468 = fn0800_4047(ds_1329, bArg00, ptrArg02, wArg04, out ds_1329)
	Mem1471[ss:fp - 0x0024:word16] = Mem1466[ss:fp - 0x0024:word16] + 0x0001
	di_1330 = di_1468 + 0x0004
	si_1263 = si_1263 + 0x0001
	branch si_1263 != Mem1471[ss:fp - 0x0026:word16] l0800_6150
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_61B9:
	Mem1377[ss:fp - 0x0040:word16] = 0x0001
	word16 ax_1381 = -(Mem1377[ss:fp - 0x0024:word16] + 0x0003)
	Mem1386[ss:fp - 0x0042:word16] = Mem1377[ss:fp - 0x003A:word16] - (ax_1381 == 0x0000)
	Mem1388[ss:fp - 0x0044:word16] = ax_1381
	Mem1391[ss:fp - 0x0046:word16] = Mem1388[ds_1329:0x29E1:word16]
	Mem1394[ss:fp - 0x0048:word16] = Mem1391[ds_1329:0x29DF:word16]
	selector ds_1395
	word16 ax_1396 = fn0800_ACB3(ds_1329, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_1395)
	Mem1401[ss:fp - 0x0040:word16] = Mem1394[ds_1395:0x29E1:word16]
	Mem1404[ss:fp - 0x0042:word16] = Mem1401[ds_1395:0x29DF:word16]
	Mem1408[ss:fp - 0x0044:word16] = DPB(ax_1396, Mem1404[ss:fp - 0x0024:byte], 0)
	selector ds_1409
	di_1264 = fn0800_4047(ds_1395, bArg00, ptrArg02, wArg04, out ds_1409)
	Mem1414[ss:fp - 0x0040:word16] = 0x0001
	word16 ax_1415 = Mem1414[ss:fp - 0x0024:word16]
	Mem1423[ss:fp - 0x0042:word16] = ax_1415 <u 0x0002
	Mem1425[ss:fp - 0x0044:word16] = ax_1415 + 0x0002
	Mem1428[ss:fp - 0x0046:word16] = Mem1425[ds_1409:0x29E1:word16]
	Mem1431[ss:fp - 0x0048:word16] = Mem1428[ds_1409:0x29DF:word16]
	dx_1199 = ax_1415 <u 0x0002
	ax_1268 = fn0800_ACB3(ds_1409, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_1261)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6061:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6220:
	Mem402[ss:fp - 0x0040:word16] = Mem377[ds_1487:0x29E1:word16]
	Mem405[ss:fp - 0x0042:word16] = Mem402[ds_1487:0x29DF:word16]
	Mem409[ss:fp - 0x0044:word16] = DPB(ax_1268, 0x00, 0)
	selector ds_1186
	fn0800_4047(ds_1487, bArg00, ptrArg02, wArg04, out ds_1186)
	Mem418[ss:fp - 0x0040:word16] = Mem409[ds_1186:0x29E1:word16]
	Mem421[ss:fp - 0x0042:word16] = Mem418[ds_1186:0x29DF:word16]
	ui32 dx_ax_425 = SEQ(dx_1199, fn0800_AD2F(ds_1186, ptrArg00, wArg02) + 0xFFE0)
	Mem431[ss:fp - 0x001C:word16] = SLICE(dx_ax_425 + 0x00FFFFE0, word16, 16)
	Mem432[ss:fp - 0x001E:word16] = (word16) (dx_ax_425 + 0x00FFFFE0)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6266:
	word16 ax_438 = Mem432[ss:fp - 0x001E:word16]
	branch (ax_438 & 0x000F) != 0x0000 l0800_624D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_624D:
	Mem1178[ss:fp - 0x0040:word16] = Mem432[ds_1186:0x29E1:word16]
	Mem1181[ss:fp - 0x0042:word16] = Mem1178[ds_1186:0x29DF:word16]
	Mem1185[ss:fp - 0x0044:word16] = DPB(ax_438 & 0x000F, 0x00, 0)
	fn0800_4047(ds_1186, bArg00, ptrArg02, wArg04, out ds_1186)
	word16 v163_1189 = Mem1185[ss:fp - 0x001E:word16] + 0x0001
	Mem1190[ss:fp - 0x001E:word16] = v163_1189
	Mem1194[ss:fp - 0x001C:word16] = Mem1190[ss:fp - 0x001C:word16] + (v163_1189 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6271:
	word16 v64_447 = Mem432[ss:fp - 0x0006:word16] - (Mem432[ss:fp - 0x0028:word16] << 0x04)
	Mem448[ss:fp - 0x0006:word16] = v64_447
	Mem452[ss:fp - 0x0004:word16] = Mem448[ss:fp - 0x0004:word16] - (v64_447 <u 0x0000)
	Mem455[ss:fp - 0x0040:word16] = 0x0000
	word16 ax_456 = Mem455[ss:fp - 0x0028:word16]
	Mem462[ss:fp - 0x0042:word16] = 0x0000
	Mem464[ss:fp - 0x0044:word16] = ax_456 << 0x04
	Mem467[ss:fp - 0x0046:word16] = Mem464[ds_1186:0x29E5:word16]
	Mem470[ss:fp - 0x0048:word16] = Mem467[ds_1186:0x29E3:word16]
	selector ds_471
	fn0800_ACB3(ds_1186, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_471)
	Mem477[ss:fp - 0x0040:word16] = Mem470[ss:fp - 0x0004:word16]
	Mem480[ss:fp - 0x0042:word16] = Mem477[ss:fp - 0x0006:word16]
	Mem483[ss:fp - 0x0044:word16] = Mem480[ss:fp - 0x0004:word16]
	Mem486[ss:fp - 0x0046:word16] = Mem483[ss:fp - 0x0006:word16]
	selector ds_487 = fn0800_75EA(fp - 2, ds_471, wArg00, wArg02, wArg04, wArg06)
	Mem493[ss:fp - 0x0040:word16] = 0x0000
	Mem496[ss:fp - 0x0042:word16] = 0x0000
	Mem498[ss:fp - 0x0044:word16] = 0x0020
	Mem501[ss:fp - 0x0046:word16] = Mem498[ds_487:0x29E1:word16]
	Mem504[ss:fp - 0x0048:word16] = Mem501[ds_487:0x29DF:word16]
	selector ds_505
	fn0800_ACB3(ds_487, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_505)
	Mem511[ss:fp - 0x0040:word16] = Mem504[ds_505:0x29E1:word16]
	Mem514[ss:fp - 0x0042:word16] = Mem511[ds_505:0x29DF:word16]
	Mem517[ss:fp - 0x0044:word16] = Mem514[ss:fp - 0x0032:word16]
	selector ds_518
	fn0800_40BF(ds_505, wArg00, wArg02, wArg04, out ds_518)
	Mem524[ss:fp - 0x0040:word16] = Mem517[ds_518:0x29E1:word16]
	Mem527[ss:fp - 0x0042:word16] = Mem524[ds_518:0x29DF:word16]
	Mem530[ss:fp - 0x0044:word16] = Mem527[ss:fp - 0x0034:word16]
	selector ds_531
	fn0800_40BF(ds_518, wArg00, wArg02, wArg04, out ds_531)
	Mem537[ss:fp - 0x0040:word16] = Mem530[ds_531:0x29E1:word16]
	Mem540[ss:fp - 0x0042:word16] = Mem537[ds_531:0x29DF:word16]
	Mem543[ss:fp - 0x0044:word16] = Mem540[ss:fp - 0x0030:word16]
	selector ds_544
	fn0800_40BF(ds_531, wArg00, wArg02, wArg04, out ds_544)
	Mem550[ss:fp - 0x0040:word16] = Mem543[ds_544:0x29E1:word16]
	Mem553[ss:fp - 0x0042:word16] = Mem550[ds_544:0x29DF:word16]
	Mem556[ss:fp - 0x0044:word16] = Mem553[ss:fp - 0x002E:word16]
	selector ds_557
	fn0800_40BF(ds_544, wArg00, wArg02, wArg04, out ds_557)
	Mem563[ss:fp - 0x0040:word16] = Mem556[ds_557:0x29E1:word16]
	Mem566[ss:fp - 0x0042:word16] = Mem563[ds_557:0x29DF:word16]
	Mem569[ss:fp - 0x0044:word16] = Mem566[ss:fp - 0x001E:word16]
	selector ds_570
	fn0800_40BF(ds_557, wArg00, wArg02, wArg04, out ds_570)
	word16 dx_577
	Mem579[ss:fp - 0x0024:word16] = fn0800_8CAA(Mem569[ds_570:0x2A03:word16], 0x04, Mem569[ds_570:0x2A05:word16], bp, out dx_577)
	branch (Mem579[ds_570:0x2A03:word16] & 0x000F) == 0x0000 l0800_6333
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6330:
	Mem1174[ss:fp - 0x0024:word16] = Mem579[ss:fp - 0x0024:word16] + 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6333:
	Mem589[ss:fp - 0x0040:word16] = Mem579[ds_570:0x29E1:word16]
	Mem592[ss:fp - 0x0042:word16] = Mem589[ds_570:0x29DF:word16]
	Mem595[ss:fp - 0x0044:word16] = Mem592[ss:fp - 0x0024:word16]
	selector ds_596
	fn0800_40BF(ds_570, wArg00, wArg02, wArg04, out ds_596)
	Mem602[ss:fp - 0x0040:word16] = Mem595[ds_596:0x29E1:word16]
	Mem605[ss:fp - 0x0042:word16] = Mem602[ds_596:0x29DF:word16]
	word16 dx_609
	Mem615[ss:fp - 0x0044:word16] = Mem605[ss:fp - 0x0024:word16] + fn0800_8CAA(Mem605[ss:fp - 0x001E:word16], 0x04, Mem605[ss:fp - 0x001C:word16], bp, out dx_609)
	selector ds_616
	fn0800_40BF(ds_596, wArg00, wArg02, wArg04, out ds_616)
	word16 dx_621 = Mem615[ss:fp - 0x0006:word16] - Mem615[ds_616:0x2A03:word16]
	word16 dx_625 = dx_621 + Mem615[ds_616:0x4E88:word16]
	ui32 ax_dx_630 = SEQ(Mem615[ss:fp - 0x0004:word16] - Mem615[ds_616:0x2A05:word16] - (dx_621 <u 0x0000) + Mem615[ds_616:0x4E8A:word16] + (dx_625 <u 0x0000), dx_625 + 0x0080)
	Mem635[ss:fp - 0x0008:word16] = SLICE(ax_dx_630 + 0x00000080, word16, 16)
	Mem636[ss:fp - 0x000A:word16] = (word16) (ax_dx_630 + 0x00000080)
	branch Mem636[ds_616:0x2A1D:word16] == 0x0000 l0800_6398
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6398:
	branch Mem636[ds_616:0x2A21:word16] != 0x0001 l0800_63A8
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_639F:
	word16 v153_1166 = Mem636[ss:fp - 0x000A:word16] + 0x0180
	Mem1167[ss:fp - 0x000A:word16] = v153_1166
	Mem1171[ss:fp - 0x0008:word16] = Mem1167[ss:fp - 0x0008:word16] + (v153_1166 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_638D:
	word16 v95_1157 = Mem636[ss:fp - 0x000A:word16] + 0x0200
	Mem1158[ss:fp - 0x000A:word16] = v95_1157
	Mem1162[ss:fp - 0x0008:word16] = Mem1158[ss:fp - 0x0008:word16] + (v95_1157 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_63A8:
	Mem641[ss:fp - 0x0040:word16] = 0x0000
	word16 bx_647 = Mem641[ss:fp - 0x0006:word16] + (Mem641[ss:fp - 0x0028:word16] << 0x04)
	word16 dx_650 = Mem641[ss:fp - 0x0004:word16] + (bx_647 <u 0x0000)
	Mem653[ss:fp - 0x0042:word16] = dx_650
	Mem655[ss:fp - 0x0044:word16] = bx_647
	Mem658[ss:fp - 0x0046:word16] = Mem655[ds_616:0x29E5:word16]
	Mem661[ss:fp - 0x0048:word16] = Mem658[ds_616:0x29E3:word16]
	selector ds_662
	fn0800_ACB3(ds_616, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_662)
	Mem667[ss:fp - 0x0040:word16] = 0x0002
	Mem672[ss:fp - 0x0042:word16] = 0x0000
	Mem674[ss:fp - 0x0044:word16] = 0x0000
	Mem677[ss:fp - 0x0046:word16] = Mem674[ds_662:0x29E1:word16]
	Mem680[ss:fp - 0x0048:word16] = Mem677[ds_662:0x29DF:word16]
	selector ds_681
	fn0800_ACB3(ds_662, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_681)
	Mem687[ss:fp - 0x0040:word16] = Mem680[ds_681:0x29E1:word16]
	Mem690[ss:fp - 0x0042:word16] = Mem687[ds_681:0x29DF:word16]
	word16 ax_691 = fn0800_AD2F(ds_681, ptrArg00, wArg02)
	Mem693[ss:fp - 0x0020:word16] = dx_650
	Mem694[ss:fp - 0x0022:word16] = ax_691
	word16 bx_700 = Mem694[ds_681:0x2A07:word16] - Mem694[ss:fp - 0x0006:word16]
	word16 bx_704 = bx_700 - (Mem694[ss:fp - 0x0028:word16] << 0x04)
	Mem710[ss:fp - 0x0040:word16] = Mem694[ds_681:0x2A09:word16] - Mem694[ss:fp - 0x0004:word16] - (bx_700 <u 0x0000) - (bx_704 <u 0x0000)
	Mem712[ss:fp - 0x0042:word16] = bx_704
	Mem715[ss:fp - 0x0044:word16] = Mem712[ds_681:0x29E1:word16]
	Mem718[ss:fp - 0x0046:word16] = Mem715[ds_681:0x29DF:word16]
	Mem721[ss:fp - 0x0048:word16] = Mem718[ds_681:0x29E5:word16]
	Mem724[ss:fp - 0x004A:word16] = Mem721[ds_681:0x29E3:word16]
	selector ds_725
	fn0800_3B0A(fp - 2, ds_681, wArg08, wArg0A, out ds_725)
	Mem732[ss:fp - 0x0024:word16] = Mem724[ss:fp - 0x0022:word16] & 0x01FF
	word16 dx_736
	fn0800_8CAA(Mem732[ss:fp - 0x0022:word16], 0x09, Mem732[ss:fp - 0x0020:word16], bp, out dx_736)
	branch Mem732[ss:fp - 0x0024:word16] == 0x0000 l0800_6446
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6445:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6446:
	Mem745[ss:fp - 0x0040:word16] = 0x0000
	Mem748[ss:fp - 0x0042:word16] = 0x0000
	Mem750[ss:fp - 0x0044:word16] = 0x0002
	Mem753[ss:fp - 0x0046:word16] = Mem750[ds_725:0x29E1:word16]
	Mem756[ss:fp - 0x0048:word16] = Mem753[ds_725:0x29DF:word16]
	selector ds_757
	fn0800_ACB3(ds_725, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_757)
	Mem763[ss:fp - 0x0040:word16] = Mem756[ds_757:0x29E1:word16]
	Mem766[ss:fp - 0x0042:word16] = Mem763[ds_757:0x29DF:word16]
	Mem769[ss:fp - 0x0044:word16] = Mem766[ss:fp - 0x0024:word16]
	selector ds_770
	word16 di_771 = fn0800_40BF(ds_757, wArg00, wArg02, wArg04, out ds_770)
	Mem776[ss:fp - 0x0040:word16] = Mem769[ds_770:0x29E1:word16]
	Mem779[ss:fp - 0x0042:word16] = Mem776[ds_770:0x29DF:word16]
	Mem781[ss:fp - 0x0044:word16] = di_771
	selector ds_1151
	fn0800_40BF(ds_770, wArg00, wArg02, wArg04, out ds_1151)
	branch Mem781[ds_1151:0x2A1D:word16] == 0x0000 l0800_64B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6483:
	Mem1114[ss:fp - 0x0040:word16] = 0x0000
	Mem1117[ss:fp - 0x0042:word16] = 0x0000
	Mem1119[ss:fp - 0x0044:word16] = 0x002E
	Mem1122[ss:fp - 0x0046:word16] = Mem1119[ds_1151:0x29E1:word16]
	Mem1125[ss:fp - 0x0048:word16] = Mem1122[ds_1151:0x29DF:word16]
	selector ds_1126
	fn0800_ACB3(ds_1151, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_1126)
	Mem1132[ss:fp - 0x0040:word16] = Mem1125[ds_1126:0x29E1:word16]
	Mem1135[ss:fp - 0x0042:word16] = Mem1132[ds_1126:0x29DF:word16]
	Mem1138[ss:fp - 0x0044:word16] = Mem1135[ss:fp - 0x0024:word16]
	selector ds_1139
	word16 di_1140 = fn0800_40BF(ds_1126, wArg00, wArg02, wArg04, out ds_1139)
	Mem1145[ss:fp - 0x0040:word16] = Mem1138[ds_1139:0x29E1:word16]
	Mem1148[ss:fp - 0x0042:word16] = Mem1145[ds_1139:0x29DF:word16]
	Mem1150[ss:fp - 0x0044:word16] = di_1140
	fn0800_40BF(ds_1139, wArg00, wArg02, wArg04, out ds_1151)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:0x00 bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_64B9:
	Mem793[ss:fp - 0x0040:word16] = 0x0000
	Mem796[ss:fp - 0x0042:word16] = 0x0000
	Mem798[ss:fp - 0x0044:word16] = 0x0018
	Mem801[ss:fp - 0x0046:word16] = Mem798[ds_1151:0x29E1:word16]
	Mem804[ss:fp - 0x0048:word16] = Mem801[ds_1151:0x29DF:word16]
	selector ds_805
	word16 ax_806 = fn0800_ACB3(ds_1151, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_805)
	Mem810[ss:fp - 0x0040:word16] = Mem804[ds_805:0x29E1:word16]
	Mem813[ss:fp - 0x0042:word16] = Mem810[ds_805:0x29DF:word16]
	Mem826[ss:fp - 0x0044:word16] = (DPB(ax_806, 0x00, 8) << 0x08) - 0x0008
	selector ds_827
	fn0800_40BF(ds_805, wArg00, wArg02, wArg04, out ds_827)
	Mem834[ss:fp - 0x0040:word16] = 0x0000
	Mem837[ss:fp - 0x0042:word16] = 0x0000
	Mem839[ss:fp - 0x0044:word16] = 0x001C
	Mem842[ss:fp - 0x0046:word16] = Mem839[ds_827:0x29E1:word16]
	Mem845[ss:fp - 0x0048:word16] = Mem842[ds_827:0x29DF:word16]
	selector ds_846
	fn0800_ACB3(ds_827, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_846)
	Mem852[ss:fp - 0x0040:word16] = Mem845[ds_846:0x29E1:word16]
	Mem855[ss:fp - 0x0042:word16] = Mem852[ds_846:0x29DF:word16]
	Mem858[ss:fp - 0x0044:word16] = Mem855[ss:fp - 0x002A:word16]
	selector ds_859
	fn0800_40BF(ds_846, wArg00, wArg02, wArg04, out ds_859)
	Mem865[ss:fp - 0x0040:word16] = Mem858[ds_859:0x29E1:word16]
	Mem868[ss:fp - 0x0042:word16] = Mem865[ds_859:0x29DF:word16]
	Mem871[ss:fp - 0x0044:word16] = Mem868[ss:fp - 0x002C:word16]
	selector ds_872
	fn0800_40BF(ds_859, wArg00, wArg02, wArg04, out ds_872)
	Mem879[ss:fp - 0x0040:word16] = 0x0000
	Mem882[ss:fp - 0x0042:word16] = 0x0000
	Mem884[ss:fp - 0x0044:word16] = 0x000A
	Mem887[ss:fp - 0x0046:word16] = Mem884[ds_872:0x29E1:word16]
	Mem890[ss:fp - 0x0048:word16] = Mem887[ds_872:0x29DF:word16]
	selector ds_891
	fn0800_ACB3(ds_872, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_891)
	ui32 ax_cx_907 = SEQ(Mem890[ss:fp - 0x0020:word16], Mem890[ss:fp - 0x0022:word16] - 0x0020)
	word16 bx_899 = Mem890[ss:fp - 0x0006:word16] + (Mem890[ss:fp - 0x002A:word16] << 0x04)
	word16 cx_912 = (word16) (ax_cx_907 - 0x00000020) + Mem890[ss:fp - 0x000A:word16]
	word16 dx_902 = Mem890[ss:fp - 0x0004:word16] + (bx_899 <u 0x0000)
	word16 ax_916 = SLICE(ax_cx_907 - 0x00000020, word16, 16) + Mem890[ss:fp - 0x0008:word16] + (cx_912 <u 0x0000)
	branch dx_902 <u ax_916 l0800_659C
// DataOut: bp bx cx ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:0x00 bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6568:
	branch dx_902 >u ax_916 l0800_656E
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_656A:
	branch bx_899 <=u cx_912 l0800_659C
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_656E:
	ui32 ax_cx_1085 = SEQ(Mem890[ss:fp - 0x0020:word16], Mem890[ss:fp - 0x0022:word16] - 0x0020)
	word16 bx_1078 = Mem890[ss:fp - 0x0006:word16] + (Mem890[ss:fp - 0x002A:word16] << 0x04)
	word16 cx_1090 = (word16) (ax_cx_1085 - 0x00000020) + Mem890[ss:fp - 0x000A:word16]
	ui32 dx_bx_1098 = SEQ(Mem890[ss:fp - 0x0004:word16] + (bx_1078 <u 0x0000), bx_1078 - cx_1090) - SEQ((SLICE(ax_cx_1085 - 0x00000020, word16, 16) + Mem890[ss:fp - 0x0008:word16]) + (cx_1090 <u 0x0000), cx_1090)
	word16 v151_1101 = Mem890[ss:fp - 0x000A:word16] + (word16) dx_bx_1098
	Mem1102[ss:fp - 0x000A:word16] = v151_1101
	Mem1106[ss:fp - 0x0008:word16] = Mem1102[ss:fp - 0x0008:word16] + SLICE(dx_bx_1098, word16, 16) + (v151_1101 <u 0x0000)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_659C:
	word16 v157_935 = Mem890[ss:fp - 0x000A:word16] + (0x0010 - Mem890[ss:fp - 0x000A:word16] & 0x000F)
	Mem936[ss:fp - 0x000A:word16] = v157_935
	Mem940[ss:fp - 0x0008:word16] = Mem936[ss:fp - 0x0008:word16] + (v157_935 <u 0x0000)
	word16 dx_945
	word16 ax_946 = fn0800_8CAA(Mem940[ss:fp - 0x000A:word16], 0x04, Mem940[ss:fp - 0x0008:word16], bp, out dx_945)
	Mem947[ss:fp - 0x002A:word16] = ax_946
	Mem950[ss:fp - 0x0040:word16] = Mem947[ds_891:0x29E1:word16]
	Mem953[ss:fp - 0x0042:word16] = Mem950[ds_891:0x29DF:word16]
	Mem955[ss:fp - 0x0044:word16] = ax_946
	selector ds_956
	fn0800_40BF(ds_891, wArg00, wArg02, wArg04, out ds_956)
	branch Mem955[ss:fp - 0x002C:word16] >=u Mem955[ss:fp - 0x002A:word16] l0800_65DC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_65D6:
	Mem1071[ss:fp - 0x002C:word16] = Mem955[ss:fp - 0x002A:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_65DC:
	Mem964[ss:fp - 0x0040:word16] = Mem955[ds_956:0x29E1:word16]
	Mem967[ss:fp - 0x0042:word16] = Mem964[ds_956:0x29DF:word16]
	Mem970[ss:fp - 0x0044:word16] = Mem967[ss:fp - 0x002C:word16]
	selector ds_971
	fn0800_40BF(ds_956, wArg00, wArg02, wArg04, out ds_971)
	word16 ax_976 = Mem970[ss:fp - 0x0006:word16] + Mem970[ds_971:0x4E88:word16]
	ui32 dx_ax_981 = SEQ(Mem970[ss:fp - 0x0004:word16] + Mem970[ds_971:0x4E8A:word16] + (ax_976 <u 0x0000), ax_976 + 0x0020)
	word16 dx_988
	word16 ax_989 = fn0800_8CAA((word16) (dx_ax_981 + 0x00000020), 0x04, SLICE(dx_ax_981 + 0x00000020, word16, 16), bp, out dx_988)
	Mem990[ss:fp - 0x002E:word16] = ax_989
	Mem993[ss:fp - 0x0040:word16] = Mem990[ds_971:0x29E1:word16]
	Mem996[ss:fp - 0x0042:word16] = Mem993[ds_971:0x29DF:word16]
	Mem998[ss:fp - 0x0044:word16] = ax_989
	selector ds_999
	fn0800_40BF(ds_971, wArg00, wArg02, wArg04, out ds_999)
	Mem1004[ss:fp - 0x0030:word16] = Mem998[ss:fp - 0x001E:word16] + 0x0080
	branch Mem1004[ds_999:0x2A1D:word16] == 0x0000 l0800_662F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_662F:
	branch Mem1004[ds_999:0x2A21:word16] != 0x0001 l0800_663B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6636:
	Mem1068[ss:fp - 0x0030:word16] = Mem1004[ss:fp - 0x0030:word16] + 0x0180
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6628:
	Mem1063[ss:fp - 0x0030:word16] = Mem1004[ss:fp - 0x0030:word16] + 0x0200
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_663B:
	Mem1009[ss:fp - 0x0040:word16] = Mem1004[ds_999:0x29E1:word16]
	Mem1012[ss:fp - 0x0042:word16] = Mem1009[ds_999:0x29DF:word16]
	Mem1015[ss:fp - 0x0044:word16] = Mem1012[ss:fp - 0x0030:word16]
	selector ds_1016
	fn0800_40BF(ds_999, wArg00, wArg02, wArg04, out ds_1016)
	word16 bx_1024 = Mem1015[ds_1016:0x2A07:word16] - Mem1015[ss:fp - 0x0006:word16]
	word16 bx_1028 = bx_1024 - (Mem1015[ss:fp - 0x0028:word16] << 0x04)
	branch (bx_1028 | ((Mem1015[ds_1016:0x2A09:word16] - Mem1015[ss:fp - 0x0004:word16]) - (bx_1024 <u 0x0000)) - (bx_1028 <u 0x0000)) == 0x0000 l0800_6673
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6673:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x04 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_666A:
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x04 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5EE4:
	return 0x0003
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp

fn0800_5E64_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5EB1_1:
	Mem1639[ds:di_1569:byte] = 0x00
	di_1569 = di_1569 + 0x0001
	cx_1626 = cx_1626 - 0x0001
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EAB_1:
	Mem1620[ds:di_1569:byte] = Mem0[ds:si_1570:byte]
	si_1570 = si_1570 + 0x0001
	di_1569 = di_1569 + 0x0001
	cx_1610 = cx_1610 - 0x0001
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA7_1:
	Mem1604[ds:di_1569:word16] = Mem0[ds:si_1570:word16]
	si_1570 = si_1570 + 0x0002
	di_1569 = di_1569 + 0x0002
	cx_1600 = cx_1600 - 0x0001
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x003E bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)



word16 fn0800_669C(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_669C_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_669C:
	branch Mem0[ds:0x2A09:word16] <u 0x0000 l0800_66BE
// DataOut: bp ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_66AB:
	branch Mem0[ds:0x2A09:word16] >u 0x0000 l0800_66B5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66AD:
	branch Mem0[ds:0x2A07:word16] <=u 0xFEFE l0800_66BE
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66BE:
	word16 di_331 = 0x2206
	word16 si_330 = 0x4271
	word16 cx_332 = 0x0004
	word16 dx_102 = 0x0003
	branch true l0800_66D2
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D0:
	cx_332 = 0x0003
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:0x2206 si:0x4271 cx:0x0004 dx:0x0003 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D2:
	word16 ax_321 = 0x0000
	bool Z_327 = (bool) cond(0x0000)
	bool C_328 = false
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:0x2206 si:0x4271 cx:<invalid> dx:0x0003 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D4:
	branch cx_332 == 0x0000 l0800_66D6
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D4_1:
	byte SCZO_325 = cond(Mem0[ds:si_358:byte] - Mem0[ds:di_357:byte])
	Z_327 = (bool) SCZO_325 (alias)
	C_328 = (bool) SCZO_325 (alias)
	si_330 = si_358 + 0x0001
	di_331 = di_357 + 0x0001
	cx_332 = cx_332 - 0x0001
	word16 di_357 = di_331
	word16 si_358 = si_330
	branch Mem0[ds:si_358:byte] != Mem0[ds:di_357:byte] l0800_66D4
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D6:
	branch Z_327 l0800_66DD
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D8:
	word16 ax_318 = 0x0000 - C_328
	ax_321 = ax_318 - 0xFFFF - (ax_318 <u 0x0000)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66DD:
	word16 ax_106 = ax_321
	branch ax_321 == 0x0000 l0800_6715
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66E1:
	word16 di_236 = 0x4271
	word16 si_237 = 0x2206
	word16 cx_239 = 0x0004
	dx_102 = 0xFFFF
	branch true l0800_66F7
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66F3:
	cx_239 = 0x0003
	dx_102 = 0x0000
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:0x4271 si:0x2206 cx:0x0004 dx:0xFFFF ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66F7:
	word16 cx_253 = cx_239 >>u 0x0001
	cx_260 = cx_253
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:0x4271 si:0x2206 cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66F9:
	word16 cx_260
	branch cx_260 == 0x0000 l0800_66FB
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66FB:
	word16 cx_270 = cx_260 * 0x0002 + (cx_253 <u 0x0000)
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66FD:
	branch cx_270 == 0x0000 l0800_66FF
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66FF:
	word16 cx_283 = dx_102
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_6703:
	branch cx_283 == 0x0000 l0800_6705
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_6705:
	fn0800_09A3(fp - 2, ds, out ds)
	ax_106 = 0x4271
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6715:
	Mem111[ss:fp - 0x000C:word16] = Mem0[ds:0x29E1:word16]
	Mem115[ss:fp - 0x000E:word16] = Mem111[ds:0x29DF:word16]
	Mem129[ss:fp - 0x0010:word16] = 0x0000
	Mem131[ss:fp - 0x0012:word16] = (DPB(ax_106, 0x00, 8) << 0x08) + DPB(dx_102, 0x00, 8)
	Mem133[ss:fp - 0x0014:word16] = ds
	Mem136[ss:fp - 0x0016:word16] = 0x2E77
	selector ds_143
	fn0800_4152(ds, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out ds_143)
	word16 bx_156 = Mem136[ds_143:0x2A07:word16]
	ui32 dx_bx_162 = SEQ(Mem136[ds_143:0x2A09:word16] + (bx_156 <u 0x7700), bx_156 + 0x7740)
	Mem167[ss:fp - 0x0004:word16] = SLICE(dx_bx_162 + 0x00000040, word16, 16)
	Mem168[ss:fp - 0x0006:word16] = (word16) (dx_bx_162 + 0x00000040)
	branch Mem168[ds_143:0x2A1D:word16] == 0x0000 l0800_6779
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:0x00 bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> ah:<invalid> -18(fp):0x4271 -16(fp):ds -14(fp):0x2E75 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6779:
	branch Mem168[ds_143:0x2A21:word16] != 0x0001 l0800_6789
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6780:
	word16 v28_225 = Mem168[ss:fp - 0x0006:word16] + 0x0180
	Mem226[ss:fp - 0x0006:word16] = v28_225
	Mem230[ss:fp - 0x0004:word16] = Mem226[ss:fp - 0x0004:word16] + (v28_225 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_676E:
	word16 v25_216 = Mem168[ss:fp - 0x0006:word16] + 0x0200
	Mem217[ss:fp - 0x0006:word16] = v25_216
	Mem221[ss:fp - 0x0004:word16] = Mem217[ss:fp - 0x0004:word16] + (v25_216 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6789:
	branch Mem168[ss:fp - 0x0004:word16] <u 0x0000 l0800_67A1
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_678F:
	branch Mem168[ss:fp - 0x0004:word16] >u 0x0000 l0800_6798
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6791:
	branch Mem168[ss:fp - 0x0006:word16] <=u 0xFEFE l0800_67A1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_67A1:
	Mem180[ss:fp - 0x000C:word16] = Mem168[ds_143:0x2A09:word16]
	Mem183[ss:fp - 0x000E:word16] = Mem180[ds_143:0x2A07:word16]
	Mem186[ss:fp - 0x0010:word16] = Mem183[ds_143:0x2A09:word16]
	Mem189[ss:fp - 0x0012:word16] = Mem186[ds_143:0x2A07:word16]
	selector ds_190
	*dsOut = fn0800_75EA(fp - 2, ds_143, wArg00, wArg02, wArg04, wArg06)
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6798:
	return 0x0003
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6703_1:
	Mem292[ds:di_236:byte] = 0x00
	di_236 = di_236 + 0x0001
	cx_283 = cx_283 - 0x0001
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66FD_1:
	Mem278[ds:di_236:byte] = Mem0[ds:si_237:byte]
	si_237 = si_237 + 0x0001
	di_236 = di_236 + 0x0001
	cx_270 = cx_270 - 0x0001
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66F9_1:
	Mem265[ds:di_236:word16] = Mem0[ds:si_237:word16]
	si_237 = si_237 + 0x0002
	di_236 = di_236 + 0x0002
	cx_260 = cx_260 - 0x0001
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66B5:
	return 0x0003
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 -10(fp):di -8(fp):si -2(fp):bp

fn0800_669C_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_67BF(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_67BF_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_67BF:
	word16 ax_19 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	branch 0x0000 <u Mem0[ds:0x2A09:word16] l0800_67F0
// DataOut: ax bp ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0010(16)

l0800_67E1:
	branch 0x0000 != Mem0[ds:0x2A09:word16] l0800_67E9
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0010(16)

l0800_67E3:
	branch ax_19 <u Mem0[ds:0x2A07:word16] l0800_67F0
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0010(16)

l0800_67F0:
	selector ds_127
	word16 dx_125
	selector ds_80
	fn0800_4152(ds, 0x2E77, ds, ax_19, 0x0000, Mem0[ds:0x29DF:word16], Mem0[ds:0x29E1:word16], out ds_80)
	selector ds_101
	fn0800_ACB3(ds_80, DPB(ptrLoc1A, Mem0[ds_80:0x29DF:word16], 0), Mem0[ds_80:0x29E1:word16], 0xFFEE, 0xFFFF, 0x0001, out ds_101)
	selector ds_111
	branch fn0800_3F0A(ds_101, Mem0[ds_101:0x29E3:word16], Mem0[ds_101:0x29E5:word16], out ds_111) == 0x601A l0800_6839
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001A(16) Local -001C(16)

l0800_6839:
	selector ds_534
	fn0800_ACB3(ds_111, DPB(ptrLoc1A, Mem0[ds_111:0x29E3:word16], 0), Mem0[ds_111:0x29E5:word16], 0x0002, 0x0000, 0x0001, out ds_534)
	selector ds_557
	fn0800_3B0A(fp - 2, ds_534, 0x0010, 0x0000, out ds_557)
	Mem564[ss:fp - 0x0012:word16] = 0x0000
	Mem567[ss:fp - 0x0014:word16] = 0x0000
	Mem569[ss:fp - 0x0016:word16] = 0x001A
	Mem572[ss:fp - 0x0018:word16] = Mem569[ds_557:0x29E5:word16]
	Mem575[ss:fp - 0x001A:word16] = Mem572[ds_557:0x29E3:word16]
	selector ds_576
	fn0800_ACB3(ds_557, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_576)
	Mem582[ss:fp - 0x0012:word16] = Mem575[ds_576:0x29E1:word16]
	Mem585[ss:fp - 0x0014:word16] = Mem582[ds_576:0x29DF:word16]
	Mem588[ss:fp - 0x0016:word16] = Mem585[ds_576:0x29E5:word16]
	Mem591[ss:fp - 0x0018:word16] = Mem588[ds_576:0x29E3:word16]
	word16 di_592
	selector ds_593
	Mem598[ss:fp - 0x0016:word16] = fn0800_3E27(ds_576, wArg00, wArg02, out di_592, out ds_593)
	selector ds_599 = fn0800_401E(ds_593, wArg00, wArg02, wArg04)
	ui32 ax_dx_604 = SEQ(Mem598[ds_599:0x2A09:word16], Mem598[ds_599:0x2A07:word16] - 0x001C)
	Mem610[ss:fp - 0x0012:word16] = SLICE(ax_dx_604 - 0x0000001C, word16, 16)
	Mem612[ss:fp - 0x0014:word16] = (word16) (ax_dx_604 - 0x0000001C)
	word16 dx_614 = Mem612[ds_599:0x2A07:word16]
	Mem622[ss:fp - 0x0016:word16] = Mem612[ds_599:0x2A09:word16] - (dx_614 <u 0x001C)
	Mem624[ss:fp - 0x0018:word16] = dx_614 - 0x001C
	ds_127 = fn0800_75EA(fp - 2, ds_599, wArg00, wArg02, wArg04, wArg06)
	ui32 ax_dx_630 = SEQ(Mem624[ds_127:0x2A09:word16], Mem624[ds_127:0x2A07:word16] - 0x001C)
	word16 dx_635 = (word16) (ax_dx_630 - 0x0000001C) - Mem624[ds_127:0x2A03:word16]
	word16 dx_639 = dx_635 + Mem624[ds_127:0x4E88:word16]
	Mem649[ss:fp - 0x0008:word16] = SLICE(ax_dx_630 - 0x0000001C, word16, 16) - Mem624[ds_127:0x2A05:word16] - (dx_635 <u 0x0000) + Mem624[ds_127:0x4E8A:word16] + (dx_639 <u 0x0000) + (dx_639 <u 0x000E)
	Mem650[ss:fp - 0x000A:word16] = dx_639 + 0x000E
	dx_125 = dx_639 + 0x000E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:0xEE dh:0xFF dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):0x2E77 -26(fp):<invalid> -24(fp):<invalid> -22(fp):0xFFEE -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6836:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:0xEE dh:0xFF dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):0x2E77 -26(fp):<invalid> -24(fp):<invalid> -22(fp):0xFFEE -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001A(16) Local -001C(16)

l0800_68F1:
	selector ds_458 = fn0800_409C(ds_111, Mem0[ds_111:0x2A07:word16], Mem0[ds_111:0x2A09:word16], Mem0[ds_111:0x29DF:word16], Mem0[ds_111:0x29E1:word16])
	selector ds_478
	fn0800_ACB3(ds_458, DPB(ptrLoc1A, Mem0[ds_458:0x29DF:word16], 0), Mem0[ds_458:0x29E1:word16], 0x000E, 0x0000, 0x0001, out ds_478)
	ds_127 = fn0800_75EA(fp - 2, ds_478, Mem0[ds_478:0x2A07:word16], Mem0[ds_478:0x2A09:word16], Mem0[ds_478:0x2A07:word16], Mem0[ds_478:0x2A09:word16])
	word16 dx_498 = Mem0[ds_127:0x2A07:word16] - Mem0[ds_127:0x2A03:word16]
	word16 dx_502 = dx_498 + Mem0[ds_127:0x4E88:word16]
	ui32 ax_dx_507 = SEQ(Mem0[ds_127:0x2A09:word16] - Mem0[ds_127:0x2A05:word16] - (dx_498 <u 0x0000) + Mem0[ds_127:0x4E8A:word16] + (dx_502 <u 0x0000), dx_502 + 0x000E)
	Mem513[ss:fp - 0x0008:word16] = SLICE(ax_dx_507 + 0x0000000E, word16, 16)
	dx_125 = (word16) (ax_dx_507 + 0x0000000E) (alias)
	Mem514[ss:fp - 0x000A:word16] = dx_125
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:0xEE dh:0xFF dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):0x2E77 -26(fp):<invalid> -24(fp):<invalid> -22(fp):0xFFEE -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6959:
	Mem132[ss:fp - 0x0012:word16] = Mem0[ds_127:0x29E1:word16]
	Mem136[ss:fp - 0x0014:word16] = Mem132[ds_127:0x29DF:word16]
	word16 ax_139 = fn0800_AD2F(ds_127, ptrArg00, wArg02)
	branch (ax_139 & 0x0001) == 0x0000 l0800_6988
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_696F:
	Mem426[ss:fp - 0x0012:word16] = Mem136[ds_127:0x29E1:word16]
	Mem429[ss:fp - 0x0014:word16] = Mem426[ds_127:0x29DF:word16]
	Mem433[ss:fp - 0x0016:word16] = DPB(ax_139 & 0x0001, 0x90, 0)
	fn0800_4047(ds_127, bArg00, ptrArg02, wArg04, out ds_127)
	word16 v50_439 = Mem433[ss:fp - 0x000A:word16] + 0x0001
	Mem440[ss:fp - 0x000A:word16] = v50_439
	Mem444[ss:fp - 0x0008:word16] = Mem440[ss:fp - 0x0008:word16] + (v50_439 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6988:
	Mem151[ss:fp - 0x0012:word16] = Mem136[ds_127:0x29E1:word16]
	Mem154[ss:fp - 0x0014:word16] = Mem151[ds_127:0x29DF:word16]
	Mem159[ss:fp - 0x0016:word16] = 0x0000
	Mem161[ss:fp - 0x0018:word16] = 0x0000
	selector ds_165 = fn0800_409C(ds_127, wArg00, wArg02, wArg04, wArg06)
	Mem170[ss:fp - 0x0012:word16] = Mem161[ds_165:0x29E1:word16]
	Mem173[ss:fp - 0x0014:word16] = Mem170[ds_165:0x29DF:word16]
	ui32 dx_ax_177 = SEQ(dx_125, fn0800_AD2F(ds_165, ptrArg00, wArg02) + 0xFFE0)
	Mem182[ds_165:0x2A05:word16] = SLICE(dx_ax_177 + 0x00FFFFE0, word16, 16)
	Mem183[ds_165:0x2A03:word16] = (word16) (dx_ax_177 + 0x00FFFFE0)
	Mem188[ss:fp - 0x0012:word16] = 0x0000
	Mem191[ss:fp - 0x0014:word16] = 0x0000
	Mem193[ss:fp - 0x0016:word16] = 0x0002
	Mem196[ss:fp - 0x0018:word16] = Mem193[ds_165:0x29E1:word16]
	Mem199[ss:fp - 0x001A:word16] = Mem196[ds_165:0x29DF:word16]
	selector ds_201
	word16 ax_202 = fn0800_ACB3(ds_165, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_201)
	Mem207[ss:fp - 0x0012:word16] = Mem199[ds_201:0x29E1:word16]
	Mem210[ss:fp - 0x0014:word16] = Mem207[ds_201:0x29DF:word16]
	word16 di_211
	selector ds_212
	word16 dx_213 = fn0800_3F58(ds_201, wArg00, wArg02, out di_211, out ds_212)
	word16 v60_215 = Mem210[ss:fp - 0x000A:word16] - ax_202
	Mem216[ss:fp - 0x000A:word16] = v60_215
	Mem220[ss:fp - 0x0008:word16] = Mem216[ss:fp - 0x0008:word16] - dx_213 - (v60_215 <u 0x0000)
	Mem224[ss:fp - 0x0012:word16] = Mem220[ds_212:0x29E1:word16]
	Mem227[ss:fp - 0x0014:word16] = Mem224[ds_212:0x29DF:word16]
	Mem230[ss:fp - 0x0016:word16] = Mem227[ds_212:0x2A05:word16]
	Mem233[ss:fp - 0x0018:word16] = Mem230[ds_212:0x2A03:word16]
	selector ds_234 = fn0800_409C(ds_212, wArg00, wArg02, wArg04, wArg06)
	Mem240[ss:fp - 0x0012:word16] = 0x0000
	Mem242[ss:fp - 0x0014:word16] = 0x0000
	Mem244[ss:fp - 0x0016:word16] = 0x0000
	Mem247[ss:fp - 0x0018:word16] = Mem244[ds_234:0x29E5:word16]
	Mem250[ss:fp - 0x001A:word16] = Mem247[ds_234:0x29E3:word16]
	selector ds_251
	fn0800_ACB3(ds_234, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_251)
	Mem257[ss:fp - 0x0012:word16] = Mem250[ds_251:0x29E5:word16]
	Mem260[ss:fp - 0x0014:word16] = Mem257[ds_251:0x29E3:word16]
	word16 di_261
	selector ds_262
	word16 ax_263 = fn0800_3E27(ds_251, wArg00, wArg02, out di_261, out ds_262)
	branch ax_263 == 0x601A l0800_6A1E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A1E:
	Mem326[ss:fp - 0x0012:word16] = Mem260[ds_262:0x29E5:word16]
	Mem329[ss:fp - 0x0014:word16] = Mem326[ds_262:0x29E3:word16]
	selector ds_330
	word16 dx_331 = fn0800_3E5D(ds_262, wArg00, wArg02, out ds_330)
	Mem335[ss:fp - 0x0012:word16] = ax_263
	Mem337[ss:fp - 0x0014:word16] = dx_331
	Mem340[ss:fp - 0x0016:word16] = Mem337[ds_330:0x29E5:word16]
	Mem343[ss:fp - 0x0018:word16] = Mem340[ds_330:0x29E3:word16]
	selector ds_344
	ui32 bx_cx_355 = SEQ(Mem343[ss:fp - 0x0014:word16], Mem343[ss:fp - 0x0012:word16] + ax_263) + SEQ(fn0800_3E5D(ds_330, wArg00, wArg02, out ds_344), ax_263)
	Mem359[ss:fp - 0x0004:word16] = SLICE(bx_cx_355, word16, 16)
	Mem360[ss:fp - 0x0006:word16] = (word16) bx_cx_355
	Mem363[ss:fp - 0x0012:word16] = Mem360[ds_344:0x29E5:word16]
	Mem366[ss:fp - 0x0014:word16] = Mem363[ds_344:0x29E3:word16]
	Mem370[ss:fp - 0x000C:word16] = fn0800_3E5D(ds_344, wArg00, wArg02, out ds_262)
	Mem371[ss:fp - 0x000E:word16] = ax_263
	word16 dx_374 = Mem371[ss:fp - 0x0006:word16] + Mem371[ss:fp - 0x000E:word16]
	word16 cx_384 = Mem371[ds_262:0x2A03:word16] + Mem371[ss:fp - 0x000A:word16]
	word16 ax_379 = Mem371[ss:fp - 0x0004:word16] + Mem371[ss:fp - 0x000C:word16] + (dx_374 <u 0x0000)
	word16 bx_388 = Mem371[ds_262:0x2A05:word16] + Mem371[ss:fp - 0x0008:word16] + (cx_384 <u 0x0000)
	branch ax_379 <u bx_388 l0800_6AA4
// DataOut: bp cx ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:0x00 dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A7A:
	branch ax_379 >u bx_388 l0800_6A80
// DataOut: bp cx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A7C:
	branch dx_374 <=u cx_384 l0800_6AA4
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A80:
	word16 dx_398 = Mem371[ss:fp - 0x0006:word16] + Mem371[ss:fp - 0x000E:word16]
	word16 cx_404 = Mem371[ds_262:0x2A03:word16] + Mem371[ss:fp - 0x000A:word16]
	ui32 ax_dx_412 = SEQ(Mem371[ss:fp - 0x0004:word16] + Mem371[ss:fp - 0x000C:word16] + (dx_398 <u 0x0000), dx_398 - cx_404) - SEQ((Mem371[ds_262:0x2A05:word16] + Mem371[ss:fp - 0x0008:word16]) + (cx_404 <u 0x0000), cx_404)
	word16 v79_415 = Mem371[ss:fp - 0x000A:word16] + (word16) ax_dx_412
	Mem416[ss:fp - 0x000A:word16] = v79_415
	Mem420[ss:fp - 0x0008:word16] = Mem416[ss:fp - 0x0008:word16] + SLICE(ax_dx_412, word16, 16) + (v79_415 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A1B:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:0x00 dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6AA4:
	Mem281[ss:fp - 0x0012:word16] = 0x0000
	Mem284[ss:fp - 0x0014:word16] = 0x0000
	Mem286[ss:fp - 0x0016:word16] = 0x000A
	Mem289[ss:fp - 0x0018:word16] = Mem286[ds_262:0x29E1:word16]
	Mem292[ss:fp - 0x001A:word16] = Mem289[ds_262:0x29DF:word16]
	selector ds_293
	fn0800_ACB3(ds_262, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_293)
	Mem299[ss:fp - 0x0012:word16] = Mem292[ds_293:0x29E1:word16]
	Mem302[ss:fp - 0x0014:word16] = Mem299[ds_293:0x29DF:word16]
	Mem305[ss:fp - 0x0016:word16] = Mem302[ss:fp - 0x0008:word16]
	Mem308[ss:fp - 0x0018:word16] = Mem305[ss:fp - 0x000A:word16]
	selector ds_309
	*dsOut = fn0800_409C(ds_293, wArg00, wArg02, wArg04, wArg06)
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_67E9:
	return 0x0003
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 2 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -16(fp):(ax << 0x10) + dx -2(fp):bp

fn0800_67BF_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:0x00 dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_6AD4(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi rax rbp rbx rcx rdi rdx rsi si sil
// Preserved: bp si sp
fn0800_6AD4_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0022(16) Local -0026(16)

l0800_6AD4:
	word16 ax_22 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	branch 0x0000 <u Mem0[ds:0x2A09:word16] l0800_6B04
// DataOut: ax ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0022(16) Local -0026(16)

l0800_6AF4:
	branch 0x0000 != Mem0[ds:0x2A09:word16] l0800_6AFC
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0022(16) Local -0026(16)

l0800_6AF6:
	branch ax_22 <u Mem0[ds:0x2A07:word16] l0800_6B04
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0022(16) Local -0026(16)

l0800_6B04:
	selector ds_84
	branch fn0800_3E5D(ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_84) != 0x0000 l0800_6B1B
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0026(16)

l0800_6B16:
	branch ax_22 == 0x03F3 l0800_6B23
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0026(16)

l0800_6B23:
	word16 ax_137 = 0x0000
	selector ds_145 = fn0800_409C(ds_84, 0x03F3, 0x0000, Mem0[ds_84:0x29DF:word16], Mem0[ds_84:0x29E1:word16])
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0022(16) Local -0026(16)

l0800_6B38:
	selector ds_161
	word16 dx_162 = fn0800_3E5D(ds_145, Mem0[ds_145:0x29E3:word16], Mem0[ds_145:0x29E5:word16], out ds_161)
	word16 wLoc08_165 = dx_162
	word16 wLoc0A_166 = ax_137
	ds_145 = fn0800_409C(ds_161, ax_137, dx_162, Mem0[ds_161:0x29DF:word16], Mem0[ds_161:0x29E1:word16])
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0022(16) Local -0026(16)

l0800_6B84:
	wLoc0A_166 = wLoc0A_166 - 0x0001
	wLoc08_165 = v28
	word16 ax_200 = wLoc0A_166 | wLoc08_165
	branch ax_200 != 0x0000 l0800_6B66
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0022(16) Local -0026(16)

l0800_6B66:
	word16 v48_547 = Mem0[ds_145:0x29E1:word16]
	word16 v49_550 = Mem0[ds_145:0x29DF:word16]
	selector ds_559
	word16 dx_560 = fn0800_3E5D(ds_145, Mem0[ds_145:0x29E3:word16], Mem0[ds_145:0x29E5:word16], out ds_559)
	ds_145 = fn0800_409C(ds_559, ax_200, dx_560, v49_550, v48_547)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0022(16) Local -0026(16)

l0800_6B96:
	ax_137 = ax_137 | dx_162
	branch ax_137 != 0x0000 l0800_6B38
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0022(16) Local -0026(16)

l0800_6B9E:
	word16 v29_209 = Mem0[ds_145:0x29E1:word16]
	word16 v30_212 = Mem0[ds_145:0x29DF:word16]
	selector ds_221
	ui32 dx_ax_225 = SEQ(fn0800_3E5D(ds_145, Mem0[ds_145:0x29E3:word16], Mem0[ds_145:0x29E5:word16], out ds_221), ax_137 + 0x0001)
	word16 ax_228 = (word16) (dx_ax_225 + 0x00000001)
	selector ds_235 = fn0800_409C(ds_221, ax_228, SLICE(dx_ax_225 + 0x00000001, word16, 16), v30_212, v29_209)
	selector ds_244
	word16 dx_245 = fn0800_3E5D(ds_235, Mem0[ds_235:0x29E3:word16], Mem0[ds_235:0x29E5:word16], out ds_244)
	selector ds_257
	word16 dx_258 = fn0800_3E5D(ds_244, Mem0[ds_244:0x29E3:word16], Mem0[ds_244:0x29E5:word16], out ds_257)
	ui32 ax_dx_267 = SEQ(dx_258, 0x0000) - SEQ(dx_245, ax_228)
	ui32 ax_dx_301 = SEQ(dx_258, ax_228 + 0x0001)
	word16 dx_305 = (word16) (ax_dx_301 + 0x00000001)
	selector ds_290 = fn0800_409C(ds_257, ax_228, dx_245, Mem0[ds_257:0x29DF:word16], Mem0[ds_257:0x29E1:word16])
	word16 ax_304 = SLICE(ax_dx_301 + 0x00000001, word16, 16)
	word16 dx_320 = DPB(dx_305, 0x00, 8)
	selector ds_311 = fn0800_409C(ds_290, dx_305, ax_304, Mem0[ds_290:0x29DF:word16], Mem0[ds_290:0x29E1:word16])
	selector ds_341 = fn0800_409C(ds_311, (DPB(ax_304, 0x00, 8) << 0x08) + dx_320 - 0x000C >>u 0x0002, 0x0000, Mem0[ds_311:0x29DF:word16], Mem0[ds_311:0x29E1:word16])
	word16 ax_351 = fn0800_AD2F(ds_341, DPB(ptrLoc20, Mem0[ds_341:0x29DF:word16], 0), Mem0[ds_341:0x29E1:word16])
	Mem354[ds_341:0x4E8E:word16] = dx_320
	Mem355[ds_341:0x4E8C:word16] = ax_351
	word16 dx_269 = (word16) ax_dx_267
	word16 dx_357 = dx_269 + 0x0001
	word16 wLoc04_358 = SLICE(ax_dx_267, word16, 16) + (dx_269 <u 0x0001)
	word16 wLoc06_359 = dx_269 + 0x0001
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0026(16)

l0800_6CAF:
	word16 ax_373 = wLoc06_359 | wLoc04_358
	branch ax_373 != 0x0000 l0800_6C89
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0026(16)

l0800_6C89:
	word16 v54_517 = Mem355[ds_341:0x29E1:word16]
	word16 v55_520 = Mem355[ds_341:0x29DF:word16]
	selector ds_529
	dx_357 = fn0800_3E5D(ds_341, Mem355[ds_341:0x29E3:word16], Mem355[ds_341:0x29E5:word16], out ds_529)
	ds_341 = fn0800_409C(ds_529, ax_373, dx_357, v55_520, v54_517)
	wLoc06_359 = wLoc06_359 - 0x0001
	wLoc04_358 = v59
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0026(16)

l0800_6CB7:
	selector ds_404
	fn0800_4152(ds_341, 0x2E77, ds_341, (DPB(ax_373, 0x00, 8) << 0x08) + DPB(dx_357, 0x00, 8), 0x0000, Mem355[ds_341:0x29DF:word16], Mem355[ds_341:0x29E1:word16], out ds_404)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0022(16)

l0800_6E93:
	segptr32 ptrLoc20_416 = DPB(ptrLoc20, Mem355[ds_404:0x29E3:word16], 0)
	word16 ax_417 = fn0800_AD2F(ds_404, ptrLoc20_416, Mem355[ds_404:0x29E5:word16])
	branch 0x0000 >=u Mem355[ds_404:0x2A09:word16] l0800_6EAA
// DataOut: ax ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0022(16)

l0800_6EAA:
	branch 0x0000 != Mem355[ds_404:0x2A09:word16] l0800_6EB5
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0022(16)

l0800_6EAC:
	branch ax_417 >=u Mem355[ds_404:0x2A07:word16] l0800_6EB5
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0022(16)

l0800_6EB5:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6EB2:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0022(16)

l0800_6EA7:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0022(16)

l0800_6CE4:
	selector ds_434
	word16 dx_435 = fn0800_3E5D(ds_404, Mem355[ds_404:0x29E3:word16], Mem355[ds_404:0x29E5:word16], out ds_434)
	word16 cx_446 = 0x0007
	word16 bx_448 = 0x6EBC
// DataOut: bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -0018(0)

l0800_6D0D:
	branch Mem355[0x0800:bx_448:word16] != ax_417 l0800_6D1E
// DataOut: bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -0018(0)

l0800_6D15:
	word16 ax_478 = Mem355[0x0800:bx_448 + 0x000E:word16]
	branch ax_478 == (dx_435 & 0x3FFF) l0800_6D26
// DataOut: ax bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -0018(0)

l0800_6D26:
	word16 sp_485
	word16 bp_486
	selector ss_487
	byte SCZO_488
	word16 si_489
	byte al_490
	selector ds_491
	byte ah_492
	byte cl_493
	word16 ax_494
	byte dl_495
	byte dh_496
	word16 dx_497
	byte SZO_498
	bool C_499
	bool Z_500
	word16 cx_501
	word16 bx_502
	call Mem355[0x0800:bx_448 + 0x001C:word16] (retsize: 2; depth: 30)
		uses: ah_480,al_479,ax_478,bp_5,bx_449,C_443,cl_451,cx_450,dh_389,dl_388,ds_434,dx_440,ptrLoc20_416,SCZO_483,si_407,sp_436,ss,SZO_442,wLoc02_4,wLoc04_363,wLoc06_360,wLoc08_437,wLoc0A_438,wLoc0C_248,wLoc0E_249,wLoc10_260,wLoc12_261,wLoc14_276,wLoc16_277,wLoc18_445,wLoc1A_444,wLoc1C_9,wLoc1E_430,wLoc20_433,wLoc22_396,wLoc24_398,wLoc26_400,wLoc28_403,Z_484
		defs: ah_492,al_490,ax_494,bp_486,bx_502,C_499,cl_493,cx_501,dh_496,dl_495,ds_491,dx_497,SCZO_488,si_489,sp_485,ss_487,SZO_498,Z_500
	return ax_494
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D1E:
	bx_448 = bx_448 + 0x0002
	cx_446 = cx_446 - 0x0001
	branch cx_446 != 0x0000 l0800_6D0D
// DataOut: bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -0018(0)

l0800_6D23:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_6E8B:
	return 0x0009
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6B1B:
	return 0x0003
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp

l0800_6AFC:
	return 0x0003
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 2 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp

fn0800_6AD4_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_6EE6(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
fn0800_6EE6_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_6EE6:
	word16 di_24
	fn0800_B2EF(ds, 0x2223, ds, out di_24)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_6EE6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x2223 -10(fp):ds -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_6EFF(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_6EFF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_6EFF:
	word16 di_12
	fn0800_B2EF(ds, 0x2231, ds, out di_12)
	branch wArg02 <=u 0x0009 l0800_6F1E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_6F13:
	word16 di_31
	fn0800_B2EF(ds, 0x223E, ds, out di_31)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -6(fp):0x2231 -4(fp):ds -2(fp):bp

l0800_6F1E:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_6EFF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp



void fn0800_6F20(word16 bp, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_6F20_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_6F20:
	word16 v7_10 = Mem0[ds:0x29E5:word16]
	selector ds_16
	word16 dx_22
	word16 ax_23 = fn0800_8C69(ax, 0x02, fn0800_3E5D(ds, Mem0[ds:0x29E3:word16], v7_10, out ds_16), v7_10, out dx_22)
	Mem28[ss:fp - 0x001E:word16] = Mem0[ds_16:0x29E5:word16]
	Mem32[ss:fp - 0x0020:word16] = Mem28[ds_16:0x29E3:word16]
	word16 ax_35 = fn0800_AD2F(ds_16, ptrArg00, wArg02)
	Mem42[ss:fp - 0x001E:word16] = 0x0001
	Mem45[ss:fp - 0x0020:word16] = dx_22
	Mem48[ss:fp - 0x0022:word16] = ax_23
	Mem51[ss:fp - 0x0024:word16] = Mem48[ds_16:0x29E5:word16]
	Mem54[ss:fp - 0x0026:word16] = Mem51[ds_16:0x29E3:word16]
	selector ds_58
	word16 ax_59 = fn0800_ACB3(ds_16, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_58)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16) Local -0010(16) Local -0012(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16)

l0800_6FCC:
	Mem73[ss:fp - 0x001E:word16] = Mem54[ds_58:0x29E5:word16]
	Mem76[ss:fp - 0x0020:word16] = Mem73[ds_58:0x29E3:word16]
	word16 di_78
	selector ds_79
	word16 dx_80 = fn0800_3F58(ds_58, wArg00, wArg02, out di_78, out ds_79)
	branch dx_80 != 0x0000 l0800_6FE3
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0010(16) Local -0012(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16)

l0800_6FDE:
	branch ax_59 == 0x03EC l0800_6F6D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0010(16) Local -0012(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16)

l0800_6F6D:
	Mem815[ss:fp - 0x001E:word16] = 0x0001
	Mem821[ss:fp - 0x0020:word16] = 0x0000
	Mem823[ss:fp - 0x0022:word16] = 0x0004
	Mem826[ss:fp - 0x0024:word16] = Mem823[ds_79:0x29E5:word16]
	Mem829[ss:fp - 0x0026:word16] = Mem826[ds_79:0x29E3:word16]
	ax_59 = fn0800_ACB3(ds_79, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_58)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0010(16) Local -0012(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16)

l0800_6F86:
	Mem840[ss:fp - 0x001E:word16] = Mem829[ds_58:0x29E5:word16]
	Mem843[ss:fp - 0x0020:word16] = Mem840[ds_58:0x29E3:word16]
	word16 dx_849
	word16 ax_850 = fn0800_8C69(ax_59, 0x02, fn0800_3E5D(ds_58, wArg00, wArg02, out ds_58), bp, out dx_849)
	branch (ax_850 | dx_849) == 0x0000 l0800_6FC4
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0004(16) Local -0006(16) Local -0010(16) Local -0012(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16)

l0800_6FA4:
	Mem869[ss:fp - 0x001E:word16] = 0x0001
	ui32 ax_dx_873 = SEQ(dx_849, ax_850 + 0x0004)
	Mem880[ss:fp - 0x0020:word16] = SLICE(ax_dx_873 + 0x00000004, word16, 16)
	Mem882[ss:fp - 0x0022:word16] = (word16) (ax_dx_873 + 0x00000004)
	Mem885[ss:fp - 0x0024:word16] = Mem882[ds_58:0x29E5:word16]
	Mem888[ss:fp - 0x0026:word16] = Mem885[ds_58:0x29E3:word16]
	fn0800_ACB3(ds_58, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_58)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0004(16) Local -0006(16) Local -0010(16) Local -0012(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16)

l0800_6FC4:
	ax_59 = ax_850 | dx_849
	branch ax_59 != 0x0000 l0800_6F86
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0010(16) Local -0012(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16)

l0800_6FE3:
	Mem90[ss:fp - 0x001E:word16] = Mem76[ds_79:0x29E5:word16]
	Mem93[ss:fp - 0x0020:word16] = Mem90[ds_79:0x29E3:word16]
	ui32 dx_ax_100 = SEQ(dx_80, fn0800_AD2F(ds_79, ptrArg00, wArg02) - ax_35) - _
	word16 dx_101 = SLICE(dx_ax_100, word16, 16)
	Mem106[ds_79:0x2A05:word16] = dx_101
	word16 ax_102 = (word16) dx_ax_100
	Mem107[ds_79:0x2A03:word16] = ax_102
	Mem110[ss:fp - 0x001E:word16] = Mem107[ds_79:0x29E1:word16]
	Mem113[ss:fp - 0x0020:word16] = Mem110[ds_79:0x29DF:word16]
	Mem116[ss:fp - 0x0022:word16] = wArg04
	Mem119[ss:fp - 0x0024:word16] = wArg02
	selector ds_120 = fn0800_409C(ds_79, wArg00, wArg02, wArg04, wArg06)
	Mem125[ss:fp - 0x001E:word16] = Mem119[ds_120:0x29E1:word16]
	Mem128[ss:fp - 0x0020:word16] = Mem125[ds_120:0x29DF:word16]
	word16 ax_129 = fn0800_AD2F(ds_120, ptrArg00, wArg02)
	branch dx_101 >=u 0x0000 l0800_7035
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0004(16) Local -0006(16) Local -0010(16) Local -0012(16) Local -0014(16) Local -0016(16) Local -0018(16) Local -001A(16)

l0800_7035:
	branch dx_101 >u 0x0000 l0800_7040
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0004(16) Local -0006(16) Local -0010(16) Local -0012(16) Local -0014(16) Local -0016(16) Local -0018(16) Local -001A(16)

l0800_7037:
	branch ax_102 >u 0x0012 l0800_7040
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -0004(16) Local -0006(16) Local -0010(16) Local -0012(16) Local -0014(16) Local -0016(16) Local -0018(16) Local -001A(16)

l0800_7040:
	Mem668[ss:fp - 0x001E:word16] = 0x0000
	Mem671[ss:fp - 0x0020:word16] = Mem668[ds_120:0x4E8E:word16]
	Mem674[ss:fp - 0x0022:word16] = Mem671[ds_120:0x4E8C:word16]
	Mem677[ss:fp - 0x0024:word16] = Mem674[ds_120:0x29E1:word16]
	Mem680[ss:fp - 0x0026:word16] = Mem677[ds_120:0x29DF:word16]
	selector ds_681
	word16 ax_682 = fn0800_ACB3(ds_120, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_681)
	Mem687[ss:fp - 0x001E:word16] = Mem680[ds_681:0x29E1:word16]
	Mem690[ss:fp - 0x0020:word16] = Mem687[ds_681:0x29DF:word16]
	selector ds_691
	word16 dx_692 = fn0800_3E5D(ds_681, wArg00, wArg02, out ds_691)
	Mem700[ss:fp - 0x001E:word16] = 0x0000
	Mem703[ss:fp - 0x0020:word16] = dx_101
	Mem706[ss:fp - 0x0022:word16] = ax_129
	Mem709[ss:fp - 0x0024:word16] = Mem706[ds_691:0x29E1:word16]
	Mem712[ss:fp - 0x0026:word16] = Mem709[ds_691:0x29DF:word16]
	selector ds_713
	fn0800_ACB3(ds_691, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_713)
	Mem718[ss:fp - 0x001E:word16] = Mem712[ds_713:0x29E1:word16]
	Mem721[ss:fp - 0x0020:word16] = Mem718[ds_713:0x29DF:word16]
	Mem726[ss:fp - 0x0022:word16] = 0x0000
	Mem728[ss:fp - 0x0024:word16] = 0x0000
	selector ds_729 = fn0800_409C(ds_713, wArg00, wArg02, wArg04, wArg06)
	Mem734[ss:fp - 0x001E:word16] = Mem728[ds_729:0x29E1:word16]
	Mem737[ss:fp - 0x0020:word16] = Mem734[ds_729:0x29DF:word16]
	Mem740[ss:fp - 0x0022:word16] = dx_22
	Mem743[ss:fp - 0x0024:word16] = ax_23
	selector ds_744 = fn0800_409C(ds_729, wArg00, wArg02, wArg04, wArg06)
	Mem749[ss:fp - 0x001E:word16] = Mem743[ds_744:0x29E1:word16]
	Mem752[ss:fp - 0x0020:word16] = Mem749[ds_744:0x29DF:word16]
	Mem755[ss:fp - 0x0022:word16] = dx_692
	Mem758[ss:fp - 0x0024:word16] = ax_682
	selector ds_759 = fn0800_409C(ds_744, wArg00, wArg02, wArg04, wArg06)
	Mem765[ss:fp - 0x001E:word16] = 0x0000
	Mem768[ss:fp - 0x0020:word16] = dx_22
	Mem771[ss:fp - 0x0022:word16] = ax_35
	Mem774[ss:fp - 0x0024:word16] = Mem771[ds_759:0x29E5:word16]
	Mem777[ss:fp - 0x0026:word16] = Mem774[ds_759:0x29E3:word16]
	selector ds_778
	fn0800_ACB3(ds_759, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_778)
	ui32 ax_dx_784 = SEQ(dx_101, ax_102 - 0x0008)
	Mem791[ss:fp - 0x001E:word16] = SLICE(ax_dx_784 - 0x00000008, word16, 16)
	Mem793[ss:fp - 0x0020:word16] = (word16) (ax_dx_784 - 0x00000008)
	Mem796[ss:fp - 0x0022:word16] = dx_101
	Mem799[ss:fp - 0x0024:word16] = ax_102
	ds_120 = fn0800_75EA(fp - 2, ds_778, wArg00, wArg02, wArg04, wArg06)
	word16 v58_802 = Mem799[ds_120:0x2A03:word16] + 0x0008
	Mem803[ds_120:0x2A03:word16] = v58_802
	Mem807[ds_120:0x2A05:word16] = Mem803[ds_120:0x2A05:word16] + (v58_802 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_703D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7032:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_70F9:
	word16 ax_142 = Mem128[ds_120:0x2A05:word16]
	word16 dx_143 = Mem128[ds_120:0x2A03:word16]
	branch ax_142 >=u Mem128[ss:fp - 0x0018:word16] l0800_7108
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7108:
	branch ax_142 != Mem128[ss:fp - 0x0018:word16] l0800_7112
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_710A:
	branch dx_143 >=u Mem128[ss:fp - 0x001A:word16] l0800_7112
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7112:
	Mem409[ss:fp - 0x001E:word16] = 0x0000
	Mem412[ss:fp - 0x0020:word16] = Mem409[ss:fp - 0x0004:word16]
	Mem415[ss:fp - 0x0022:word16] = Mem412[ss:fp - 0x0006:word16]
	Mem418[ss:fp - 0x0024:word16] = Mem415[ds_120:0x29E1:word16]
	Mem421[ss:fp - 0x0026:word16] = Mem418[ds_120:0x29DF:word16]
	selector ds_422
	fn0800_ACB3(ds_120, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_422)
	Mem427[ss:fp - 0x001E:word16] = 0x0000
	ui32 ax_dx_431 = SEQ(Mem427[ss:fp - 0x0014:word16], Mem427[ss:fp - 0x0016:word16] - 0x0004)
	Mem438[ss:fp - 0x0020:word16] = SLICE(ax_dx_431 - 0x00000004, word16, 16)
	Mem440[ss:fp - 0x0022:word16] = (word16) (ax_dx_431 - 0x00000004)
	Mem443[ss:fp - 0x0024:word16] = Mem440[ds_422:0x29E5:word16]
	Mem446[ss:fp - 0x0026:word16] = Mem443[ds_422:0x29E3:word16]
	selector ds_447
	fn0800_ACB3(ds_422, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_447)
	ui32 ax_dx_453 = SEQ(Mem446[ss:fp - 0x0010:word16], Mem446[ss:fp - 0x0012:word16] + 0x0004)
	word16 ax_456 = SLICE(ax_dx_453 + 0x00000004, word16, 16)
	Mem461[ss:fp - 0x001E:word16] = ax_456
	Mem463[ss:fp - 0x0020:word16] = (word16) (ax_dx_453 + 0x00000004)
	Mem466[ss:fp - 0x0022:word16] = Mem463[ds_447:0x29E1:word16]
	Mem469[ss:fp - 0x0024:word16] = Mem466[ds_447:0x29DF:word16]
	Mem472[ss:fp - 0x0026:word16] = Mem469[ds_447:0x29E5:word16]
	Mem475[ss:fp - 0x0028:word16] = Mem472[ds_447:0x29E3:word16]
	selector ds_477
	fn0800_3B0A(fp - 2, ds_447, wArg08, wArg0A, out ds_477)
	Mem483[ss:fp - 0x001E:word16] = Mem475[ds_477:0x29E5:word16]
	Mem486[ss:fp - 0x0020:word16] = Mem483[ds_477:0x29E3:word16]
	word16 di_487
	selector ds_488
	branch fn0800_3F58(ds_477, wArg00, wArg02, out di_487, out ds_488) == 0x0000 l0800_7181
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7181:
	branch ax_456 == 0x03EC l0800_7189
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7189:
	Mem519[ss:fp - 0x001E:word16] = 0x0001
	Mem525[ss:fp - 0x0020:word16] = 0x0000
	Mem527[ss:fp - 0x0022:word16] = 0x0004
	Mem530[ss:fp - 0x0024:word16] = Mem527[ds_488:0x29E5:word16]
	Mem533[ss:fp - 0x0026:word16] = Mem530[ds_488:0x29E3:word16]
	selector ds_534
	fn0800_ACB3(ds_488, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_534)
	Mem539[ss:fp - 0x001E:word16] = Mem533[ds_534:0x29E1:word16]
	Mem542[ss:fp - 0x0020:word16] = Mem539[ds_534:0x29DF:word16]
	Mem548[ss:fp - 0x0022:word16] = 0x0000
	Mem550[ss:fp - 0x0024:word16] = 0x03EC
	word16 ax_543 = 0x0000
	ds_488 = fn0800_409C(ds_534, wArg00, wArg02, wArg04, wArg06)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_71B7:
	Mem562[ss:fp - 0x001E:word16] = Mem550[ds_488:0x29E5:word16]
	Mem565[ss:fp - 0x0020:word16] = Mem562[ds_488:0x29E3:word16]
	selector ds_566
	Mem570[ss:fp - 0x0004:word16] = fn0800_3E5D(ds_488, wArg00, wArg02, out ds_566)
	Mem571[ss:fp - 0x0006:word16] = ax_543
	Mem574[ss:fp - 0x001E:word16] = Mem571[ds_566:0x29E1:word16]
	Mem577[ss:fp - 0x0020:word16] = Mem574[ds_566:0x29DF:word16]
	Mem580[ss:fp - 0x0022:word16] = Mem577[ss:fp - 0x0004:word16]
	Mem582[ss:fp - 0x0024:word16] = ax_543
	ds_488 = fn0800_409C(ds_566, wArg00, wArg02, wArg04, wArg06)
	word16 ax_586 = Mem582[ss:fp - 0x0006:word16] | Mem582[ss:fp - 0x0004:word16]
	branch ax_586 == 0x0000 l0800_7234
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_71E5:
	Mem604[ss:fp - 0x001E:word16] = Mem582[ds_488:0x29E5:word16]
	Mem607[ss:fp - 0x0020:word16] = Mem604[ds_488:0x29E3:word16]
	selector ds_608
	ui32 dx_ax_612 = SEQ(fn0800_3E5D(ds_488, wArg00, wArg02, out ds_608), ax_586 + 0x0001)
	Mem618[ss:fp - 0x0008:word16] = SLICE(dx_ax_612 + 0x00000001, word16, 16)
	word16 ax_616 = (word16) (dx_ax_612 + 0x00000001)
	Mem619[ss:fp - 0x000A:word16] = ax_616
	Mem622[ss:fp - 0x001E:word16] = Mem619[ds_608:0x29E1:word16]
	Mem625[ss:fp - 0x0020:word16] = Mem622[ds_608:0x29DF:word16]
	Mem628[ss:fp - 0x0022:word16] = Mem625[ss:fp - 0x0008:word16]
	Mem630[ss:fp - 0x0024:word16] = ax_616
	selector ds_631 = fn0800_409C(ds_608, wArg00, wArg02, wArg04, wArg06)
	word16 dx_637
	word16 ax_638 = fn0800_8C69(Mem630[ss:fp - 0x0006:word16], 0x02, Mem630[ss:fp - 0x0004:word16], bp, out dx_637)
	Mem640[ss:fp - 0x001E:word16] = dx_637
	Mem642[ss:fp - 0x0020:word16] = ax_638
	Mem645[ss:fp - 0x0022:word16] = Mem642[ds_631:0x29E1:word16]
	Mem648[ss:fp - 0x0024:word16] = Mem645[ds_631:0x29DF:word16]
	Mem651[ss:fp - 0x0026:word16] = Mem648[ds_631:0x29E5:word16]
	Mem654[ss:fp - 0x0028:word16] = Mem651[ds_631:0x29E3:word16]
	fn0800_3B0A(fp - 2, ds_631, wArg08, wArg0A, out ds_488)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7234:
	ax_543 = Mem582[ss:fp - 0x0006:word16] | Mem582[ss:fp - 0x0004:word16]
	branch ax_543 == 0x0000 l0800_723F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_723C:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7186:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_717E:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_723F:
	word16 v80_505 = Mem486[ds_488:0x4E8C:word16] + 0x0004
	Mem506[ds_488:0x4E8C:word16] = v80_505
	Mem510[ds_488:0x4E8E:word16] = Mem506[ds_488:0x4E8E:word16] + (v80_505 <u 0x0000)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_710F:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7105:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_724D:
	word16 dx_169 = Mem128[ss:fp - 0x001A:word16] + Mem128[ds_120:0x4E88:word16]
	Mem173[ss:fp - 0x0004:word16] = Mem128[ss:fp - 0x0018:word16] + Mem128[ds_120:0x4E8A:word16] + (dx_169 <u 0x0000)
	Mem174[ss:fp - 0x0006:word16] = dx_169
	branch (Mem174[ds_120:0x2A03:word16] & 0x0003) == 0x0000 l0800_7274
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_726C:
	word16 v60_398 = Mem174[ss:fp - 0x0006:word16] + 0x0002
	Mem399[ss:fp - 0x0006:word16] = v60_398
	Mem403[ss:fp - 0x0004:word16] = Mem399[ss:fp - 0x0004:word16] + (v60_398 <u 0x0000)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7274:
	word16 dx_192
	branch (Mem174[ss:fp - 0x0006:word16] & 0x0003) == 0x0000 l0800_7298
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7298:
	word16 ax_395 = fn0800_8CAA(Mem174[ss:fp - 0x0006:word16], 0x02, Mem174[ss:fp - 0x0004:word16], bp, out dx_192)
	Mem396[ss:fp - 0x0004:word16] = dx_192
	Mem397[ss:fp - 0x0006:word16] = ax_395
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_727F:
	word16 dx_379
	word16 ax_380 = fn0800_8CAA(Mem174[ss:fp - 0x0006:word16], 0x02, Mem174[ss:fp - 0x0004:word16], bp, out dx_379)
	ui32 dx_ax_382 = SEQ(dx_379, ax_380 + 0x0001)
	dx_192 = SLICE(dx_ax_382 + 0x00000001, word16, 16) (alias)
	Mem388[ss:fp - 0x0004:word16] = dx_192
	Mem389[ss:fp - 0x0006:word16] = (word16) (dx_ax_382 + 0x00000001)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_72C6:
	word16 ax_196 = Mem174[ds_120:0x2A03:word16]
	branch (ax_196 & 0x0003) != 0x0000 l0800_72AB
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_72AB:
	Mem356[ss:fp - 0x001E:word16] = Mem174[ds_120:0x29E1:word16]
	Mem359[ss:fp - 0x0020:word16] = Mem356[ds_120:0x29DF:word16]
	Mem363[ss:fp - 0x0022:word16] = DPB(ax_196 & 0x0003, 0x00, 0)
	fn0800_4047(ds_120, bArg00, ptrArg02, wArg04, out ds_120)
	word16 v101_369 = Mem363[ds_120:0x2A03:word16] + 0x0001
	Mem370[ds_120:0x2A03:word16] = v101_369
	Mem374[ds_120:0x2A05:word16] = Mem370[ds_120:0x2A05:word16] + (v101_369 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_72D1:
	Mem204[ss:fp - 0x001E:word16] = Mem174[ds_120:0x29E1:word16]
	Mem207[ss:fp - 0x0020:word16] = Mem204[ds_120:0x29DF:word16]
	word16 ax_208 = fn0800_AD2F(ds_120, ptrArg00, wArg02)
	Mem210[ss:fp - 0x0008:word16] = dx_192
	Mem211[ss:fp - 0x000A:word16] = ax_208
	Mem214[ss:fp - 0x001E:word16] = 0x0001
	word16 dx_218 = -Mem214[ds_120:0x2A03:word16]
	ui32 ax_dx_222 = SEQ(-Mem214[ds_120:0x2A05:word16] - (dx_218 == 0x0000), dx_218 - 0x0004)
	Mem229[ss:fp - 0x0020:word16] = SLICE(ax_dx_222 - 0x00000004, word16, 16)
	Mem231[ss:fp - 0x0022:word16] = (word16) (ax_dx_222 - 0x00000004)
	Mem234[ss:fp - 0x0024:word16] = Mem231[ds_120:0x29E1:word16]
	Mem237[ss:fp - 0x0026:word16] = Mem234[ds_120:0x29DF:word16]
	selector ds_238
	fn0800_ACB3(ds_120, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_238)
	Mem244[ss:fp - 0x001E:word16] = Mem237[ds_238:0x29E1:word16]
	Mem247[ss:fp - 0x0020:word16] = Mem244[ds_238:0x29DF:word16]
	word16 dx_251
	word16 ax_252 = fn0800_8CAA(Mem247[ds_238:0x2A03:word16], 0x02, Mem247[ds_238:0x2A05:word16], bp, out dx_251)
	Mem254[ss:fp - 0x0022:word16] = dx_251
	Mem256[ss:fp - 0x0024:word16] = ax_252
	selector ds_257 = fn0800_409C(ds_238, wArg00, wArg02, wArg04, wArg06)
	word16 ax_259 = Mem256[ss:fp - 0x000C:word16]
	word16 dx_260 = Mem256[ss:fp - 0x000E:word16]
	Mem264[ss:fp - 0x001C:word16] = ax_259 & 0x3FFF
	branch (ax_259 & 0x3FFF) <u Mem264[ss:fp - 0x0004:word16] l0800_734D
// DataOut: bp ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_733A:
	branch (ax_259 & 0x3FFF) >u Mem264[ss:fp - 0x0004:word16] l0800_7341
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_733C:
	branch dx_260 <=u Mem264[ss:fp - 0x0006:word16] l0800_734D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7341:
	word16 ax_348 = Mem264[ss:fp - 0x000E:word16]
	Mem350[ss:fp - 0x0004:word16] = Mem264[ss:fp - 0x001C:word16]
	Mem351[ss:fp - 0x0006:word16] = ax_348
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_734D:
	word16 ax_272 = Mem264[ss:fp - 0x000C:word16]
	Mem275[ss:fp - 0x0006:word16] = Mem264[ss:fp - 0x0006:word16]
	Mem278[ss:fp - 0x0004:word16] = Mem275[ss:fp - 0x0004:word16] | ax_272 & 0xC000
	Mem284[ss:fp - 0x001E:word16] = 0x0000
	Mem287[ss:fp - 0x0020:word16] = Mem284[ds_257:0x4E8E:word16]
	Mem290[ss:fp - 0x0022:word16] = Mem287[ds_257:0x4E8C:word16]
	Mem293[ss:fp - 0x0024:word16] = Mem290[ds_257:0x29E1:word16]
	Mem296[ss:fp - 0x0026:word16] = Mem293[ds_257:0x29DF:word16]
	selector ds_297
	fn0800_ACB3(ds_257, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_297)
	Mem303[ss:fp - 0x001E:word16] = Mem296[ds_297:0x29E1:word16]
	Mem306[ss:fp - 0x0020:word16] = Mem303[ds_297:0x29DF:word16]
	Mem309[ss:fp - 0x0022:word16] = Mem306[ss:fp - 0x0004:word16]
	Mem312[ss:fp - 0x0024:word16] = Mem309[ss:fp - 0x0006:word16]
	selector ds_313 = fn0800_409C(ds_297, wArg00, wArg02, wArg04, wArg06)
	Mem319[ss:fp - 0x001E:word16] = 0x0000
	Mem322[ss:fp - 0x0020:word16] = Mem319[ss:fp - 0x0008:word16]
	Mem325[ss:fp - 0x0022:word16] = Mem322[ss:fp - 0x000A:word16]
	Mem328[ss:fp - 0x0024:word16] = Mem325[ds_313:0x29E1:word16]
	Mem331[ss:fp - 0x0026:word16] = Mem328[ds_313:0x29DF:word16]
	selector ds_332
	fn0800_ACB3(ds_313, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_332)
	word16 v96_335 = Mem331[ds_332:0x4E8C:word16] + 0x0004
	Mem336[ds_332:0x4E8C:word16] = v96_335
	Mem340[ds_332:0x4E8E:word16] = Mem336[ds_332:0x4E8E:word16] + (v96_335 <u 0x0000)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> si:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_6F20_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_73AC(word16 bp, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_73AC_entry:
	*bpOut = bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_73AC:
	selector ds_33
	fn0800_4152(ds, 0x2E77, ds, (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8), 0x0000, Mem0[ds:0x29DF:word16], Mem0[ds:0x29E1:word16], out ds_33)
	selector ds_54
	fn0800_ACB3(ds_33, DPB(ptrLoc0A, Mem0[ds_33:0x29DF:word16], 0), Mem0[ds_33:0x29E1:word16], 0xFFFC, 0xFFFF, 0x0001, out ds_54)
	selector ds_70 = fn0800_409C(ds_54, Mem0[ds_54:0x2A0F:word16], Mem0[ds_54:0x2A11:word16], Mem0[ds_54:0x29DF:word16], Mem0[ds_54:0x29E1:word16])
	selector ds_86
	*dsOut = fn0800_75EA(bp, ds_70, Mem0[ds_70:0x2A07:word16], Mem0[ds_70:0x2A09:word16], Mem0[ds_70:0x2A07:word16], Mem0[ds_70:0x2A09:word16])
	return 0x0000
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_73AC_exit:
// DataOut: ax bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> bp:<invalid> -12(fp):0x2E77 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_741D(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_741D_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_741D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_75C1:
	Mem28[ss:fp - 0x000A:word16] = Mem0[ds:0x29E5:word16]
	Mem32[ss:fp - 0x000C:word16] = Mem28[ds:0x29E3:word16]
	word16 ax_35 = fn0800_AD2F(ds, ptrArg00, wArg02)
	branch dx >=u Mem32[ds:0x2A09:word16] l0800_75D8
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_75D8:
	branch dx != Mem32[ds:0x2A09:word16] l0800_75E3
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_75DA:
	branch ax_35 >=u Mem32[ds:0x2A07:word16] l0800_75E3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_75E3:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

fn0800_741D_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_75E0:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_75D5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7427:
	Mem46[ss:fp - 0x000A:word16] = Mem32[ds:0x29E5:word16]
	Mem49[ss:fp - 0x000C:word16] = Mem46[ds:0x29E3:word16]
	word16 ax_51 = fn0800_3E9A(ds, ptrArg00, wArg02, out ds)
	branch ax_51 == 0x0000 l0800_7449
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7449:
	Mem326[ss:fp - 0x000A:word16] = Mem49[ds:0x29E1:word16]
	Mem329[ss:fp - 0x000C:word16] = Mem326[ds:0x29DF:word16]
	Mem332[ss:fp - 0x000E:word16] = Mem329[ds:0x29E5:word16]
	Mem335[ss:fp - 0x0010:word16] = Mem332[ds:0x29E3:word16]
	word16 di_336
	selector ds_337
	Mem342[ss:fp - 0x000E:word16] = fn0800_3DCF(ds, ptrArg00, wArg02, out di_336, out ds_337)
	fn0800_4047(ds_337, bArg00, ptrArg02, wArg04, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7439:
	branch ax_51 == 0x0001 l0800_7469
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7469:
	Mem144[ss:fp - 0x000A:word16] = Mem49[ds:0x29E1:word16]
	Mem147[ss:fp - 0x000C:word16] = Mem144[ds:0x29DF:word16]
	Mem150[ss:fp - 0x000E:word16] = Mem147[ds:0x29E5:word16]
	Mem153[ss:fp - 0x0010:word16] = Mem150[ds:0x29E3:word16]
	selector ds_155
	Mem160[ss:fp - 0x000E:word16] = fn0800_3E5D(ds, wArg00, wArg02, out ds_155)
	Mem162[ss:fp - 0x0010:word16] = ax_51
	selector ds_164 = fn0800_409C(ds_155, wArg00, wArg02, wArg04, wArg06)
	Mem169[ss:fp - 0x000A:word16] = Mem162[ds_164:0x29E5:word16]
	Mem172[ss:fp - 0x000C:word16] = Mem169[ds_164:0x29E3:word16]
	word16 di_173
	selector ds_174
	word16 ax_175 = fn0800_3FAD(ds_164, wArg00, wArg02, out di_173, out ds_174)
	Mem177[ss:fp - 0x0004:word16] = 0x0000
	Mem178[ss:fp - 0x0006:word16] = ax_175
	Mem181[ss:fp - 0x000A:word16] = Mem178[ds_174:0x29E1:word16]
	Mem184[ss:fp - 0x000C:word16] = Mem181[ds_174:0x29DF:word16]
	Mem189[ss:fp - 0x000E:word16] = 0x0000
	selector ds_190 = fn0800_401E(ds_174, wArg00, wArg02, wArg04)
	Mem195[ss:fp - 0x000A:word16] = Mem189[ss:fp - 0x0004:word16]
	Mem198[ss:fp - 0x000C:word16] = Mem195[ss:fp - 0x0006:word16]
	Mem201[ss:fp - 0x000E:word16] = Mem198[ss:fp - 0x0004:word16]
	Mem204[ss:fp - 0x0010:word16] = Mem201[ss:fp - 0x0006:word16]
	selector ds_205 = fn0800_75EA(fp - 2, ds_190, wArg00, wArg02, wArg04, wArg06)
	Mem209[ss:fp - 0x000A:word16] = 0x0001
	ui32 ax_dx_213 = SEQ(Mem209[ds_205:0x2A05:word16], Mem209[ds_205:0x2A03:word16] + 0x0002)
	word16 dx_219 = -(word16) (ax_dx_213 + 0x00000002)
	Mem225[ss:fp - 0x000C:word16] = -SLICE(ax_dx_213 + 0x00000002, word16, 16) - (dx_219 == 0x0000)
	Mem227[ss:fp - 0x000E:word16] = dx_219
	Mem230[ss:fp - 0x0010:word16] = Mem227[ds_205:0x29E1:word16]
	Mem233[ss:fp - 0x0012:word16] = Mem230[ds_205:0x29DF:word16]
	selector ds_234
	fn0800_ACB3(ds_205, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_234)
	Mem240[ss:fp - 0x000A:word16] = Mem233[ds_234:0x29E1:word16]
	Mem243[ss:fp - 0x000C:word16] = Mem240[ds_234:0x29DF:word16]
	Mem246[ss:fp - 0x000E:word16] = Mem243[ds_234:0x2A03:word16]
	selector ds_247
	fn0800_40BF(ds_234, wArg00, wArg02, wArg04, out ds_247)
	dx = Mem246[ds_247:0x2A03:word16]
	branch Mem246[ds_247:0x2A05:word16] != Mem246[ss:fp - 0x0004:word16] l0800_754A
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7506:
	branch dx != Mem246[ss:fp - 0x0006:word16] l0800_754A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_754A:
	Mem259[ss:fp - 0x000A:word16] = 0x0001
	Mem262[ss:fp - 0x000C:word16] = Mem259[ds_247:0x2A05:word16]
	Mem265[ss:fp - 0x000E:word16] = Mem262[ds_247:0x2A03:word16]
	Mem268[ss:fp - 0x0010:word16] = Mem265[ds_247:0x29E1:word16]
	Mem271[ss:fp - 0x0012:word16] = Mem268[ds_247:0x29DF:word16]
	fn0800_ACB3(ds_247, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_750B:
	Mem280[ss:fp - 0x000A:word16] = 0x0001
	dx = -Mem280[ss:fp - 0x0006:word16]
	Mem289[ss:fp - 0x000C:word16] = -Mem280[ss:fp - 0x0004:word16] - (dx == 0x0000)
	Mem291[ss:fp - 0x000E:word16] = dx
	Mem294[ss:fp - 0x0010:word16] = Mem291[ds_247:0x29E5:word16]
	Mem297[ss:fp - 0x0012:word16] = Mem294[ds_247:0x29E3:word16]
	selector ds_298
	fn0800_ACB3(ds_247, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_298)
	Mem304[ss:fp - 0x000A:word16] = Mem297[ss:fp - 0x0004:word16]
	Mem307[ss:fp - 0x000C:word16] = Mem304[ss:fp - 0x0006:word16]
	Mem310[ss:fp - 0x000E:word16] = Mem307[ds_298:0x29E1:word16]
	Mem313[ss:fp - 0x0010:word16] = Mem310[ds_298:0x29DF:word16]
	Mem316[ss:fp - 0x0012:word16] = Mem313[ds_298:0x29E5:word16]
	Mem319[ss:fp - 0x0014:word16] = Mem316[ds_298:0x29E3:word16]
	fn0800_3B0A(fp - 2, ds_298, wArg08, wArg0A, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_743E:
	branch ax_51 != 0x0003 l0800_7446
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7446:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_758F:
	Mem104[ss:fp - 0x000A:word16] = Mem49[ds:0x29E5:word16]
	Mem107[ss:fp - 0x000C:word16] = Mem104[ds:0x29E3:word16]
	word16 ax_108 = fn0800_AD2F(ds, ptrArg00, wArg02)
	ui32 bx_cx_116 = SEQ(Mem107[ds:0x2A09:word16], Mem107[ds:0x2A07:word16] - ax_108) - SEQ(dx, ax_108)
	Mem121[ss:fp - 0x000A:word16] = SLICE(bx_cx_116, word16, 16)
	Mem123[ss:fp - 0x000C:word16] = (word16) bx_cx_116
	Mem126[ss:fp - 0x000E:word16] = Mem123[ds:0x29E1:word16]
	Mem129[ss:fp - 0x0010:word16] = Mem126[ds:0x29DF:word16]
	Mem132[ss:fp - 0x0012:word16] = Mem129[ds:0x29E5:word16]
	Mem135[ss:fp - 0x0014:word16] = Mem132[ds:0x29E3:word16]
	fn0800_3B0A(fp - 2, ds, wArg08, wArg0A, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7443:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7566:
	word16 si_100 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7588:
	branch si_100 != 0x0003 l0800_756A
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_756A:
	Mem76[ss:fp - 0x000A:word16] = Mem49[ds:0x29E1:word16]
	Mem79[ss:fp - 0x000C:word16] = Mem76[ds:0x29DF:word16]
	Mem82[ss:fp - 0x000E:word16] = Mem79[ds:0x29E5:word16]
	Mem85[ss:fp - 0x0010:word16] = Mem82[ds:0x29E3:word16]
	word16 di_86
	selector ds_87
	Mem92[ss:fp - 0x000E:word16] = fn0800_3DCF(ds, ptrArg00, wArg02, out di_86, out ds_87)
	fn0800_4047(ds_87, bArg00, ptrArg02, wArg04, out ds)
	si_100 = si_100 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_758D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_75EA(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_75EA_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_75EA:
	Mem14[ds:0x4680:word16] = wArg04
	Mem16[ds:0x467E:word16] = wArg02
	Mem17[ds:0x2A05:word16] = wArg04
	Mem18[ds:0x2A03:word16] = wArg02
	Mem19[ds:0x4678:word16] = wArg04
	Mem20[ds:0x4676:word16] = wArg02
	ui32 ax_dx_26 = SEQ(wArg08, wArg06 - 0x0012)
	Mem31[ds:0x4E86:word16] = SLICE(ax_dx_26 - 0x00000012, word16, 16)
	Mem32[ds:0x4E84:word16] = (word16) (ax_dx_26 - 0x00000012)
	branch Mem32[ds:0x4680:word16] >u 0x0000 l0800_7634
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16)

l0800_7626:
	branch Mem32[ds:0x4680:word16] == 0x0000 l0800_762B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16)

l0800_762B:
	branch wArg02 >u 0x0012 l0800_7634
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_7634:
	Mem61[ds:0x2E4B:word16] = 0x0000
	Mem62[ds:0x2E49:word16] = 0x0000
	Mem63[ds:0x465C:word16] = 0x0000
	Mem64[ds:0x4668:word16] = 0x0000
	Mem65[ds:0x4666:word16] = 0x0000
	Mem66[ds:0x2A05:word16] = 0x0000
	Mem67[ds:0x2A03:word16] = 0x0000
	Mem68[ds:0x2A01:word16] = 0x0000
	Mem69[ds:0x29FF:word16] = 0x0000
	Mem70[ds:0x467C:word16] = 0x0000
	Mem71[ds:0x467A:word16] = 0x0000
	Mem72[ds:0x4674:word16] = 0x0000
	Mem73[ds:0x4672:word16] = 0x0000
	Mem74[ds:0x2E43:word16] = 0x0000
	Mem75[ds:0x2E45:word16] = 0x0000
	Mem76[ds:0x4E82:word16] = 0x0000
	Mem77[ds:0x4E8A:word16] = 0x0000
	Mem78[ds:0x4E88:word16] = 0x0000
	Mem79[ds:0x29F9:word16] = 0x0000
	Mem80[ds:0x29F7:word16] = 0x0000
	selector ds_87
	fn0800_4311(fp - 2, ds, 0x000F, 0x0001, out ds_87)
	Mem91[ss:fp - 0x0016:word16] = 0x000F
	Mem92[ss:fp - 0x0018:word16] = 0x0001
	Mem95[ds_87:0x2E73:word16] = 0x0010
	Mem96[ds_87:0x2E71:word16] = 0x0000
	Mem100[ss:fp - 0x001C:word16] = 0x0001
	Mem102[ss:fp - 0x001E:word16] = 0x0010
	selector ds_104
	fn0800_4311(fp - 2, ds_87, wArg00, wArg02, out ds_104)
	Mem108[ss:fp - 0x0012:word16] = 0x0010
	Mem109[ss:fp - 0x0014:word16] = 0x0001
	Mem112[ds_104:0x2E39:word16] = 0x0011
	Mem113[ds_104:0x2E37:word16] = 0x0000
	Mem117[ss:fp - 0x001C:word16] = 0x0001
	Mem119[ss:fp - 0x001E:word16] = 0x0010
	selector ds_120
	fn0800_4311(fp - 2, ds_104, wArg00, wArg02, out ds_120)
	Mem124[ss:fp - 0x000E:word16] = 0x0010
	Mem125[ss:fp - 0x0010:word16] = 0x0001
	Mem128[ds_120:0x2E35:word16] = 0x0011
	Mem129[ds_120:0x2E33:word16] = 0x0000
	Mem133[ss:fp - 0x001C:word16] = 0x0001
	Mem135[ss:fp - 0x001E:word16] = 0x0010
	selector ds_136
	fn0800_4311(fp - 2, ds_120, wArg00, wArg02, out ds_136)
	Mem140[ss:fp - 0x000A:word16] = 0x0010
	Mem141[ss:fp - 0x000C:word16] = 0x0001
	Mem144[ds_136:0x2E41:word16] = 0x0011
	Mem145[ds_136:0x2E3F:word16] = 0x0000
	Mem149[ss:fp - 0x001C:word16] = 0x0001
	Mem151[ss:fp - 0x001E:word16] = 0x0010
	selector ds_152
	fn0800_4311(fp - 2, ds_136, wArg00, wArg02, out ds_152)
	Mem156[ss:fp - 0x0006:word16] = 0x0010
	Mem157[ss:fp - 0x0008:word16] = 0x0001
	Mem160[ds_152:0x2E3D:word16] = 0x0011
	Mem161[ds_152:0x2E3B:word16] = 0x0000
	fn0800_87F8(ds_152)
	Mem164[ss:fp - 0x001C:word16] = Mem161[ds_152:0x29E5:word16]
	Mem167[ss:fp - 0x001E:word16] = Mem164[ds_152:0x29E3:word16]
	word16 ax_169 = fn0800_AD2F(ds_152, ptrArg00, wArg02)
	Mem172[ds_152:0x4664:word16] = 0x0011
	Mem173[ds_152:0x4662:word16] = ax_169
	Mem176[ss:fp - 0x001C:word16] = Mem173[ds_152:0x29E1:word16]
	Mem179[ss:fp - 0x001E:word16] = Mem176[ds_152:0x29DF:word16]
	word16 ax_180 = fn0800_AD2F(ds_152, ptrArg00, wArg02)
	Mem182[ds_152:0x4660:word16] = 0x0011
	Mem183[ds_152:0x465E:word16] = ax_180
	Mem186[ss:fp - 0x001C:word16] = Mem183[ds_152:0x29E1:word16]
	Mem189[ss:fp - 0x001E:word16] = Mem186[ds_152:0x29DF:word16]
	int32 dx_ax_194 = SEQ(0x0011, (word16) (int32) Mem189[ds_152:0x2A21:word16] + 0x4300)
	Mem201[ss:fp - 0x0020:word16] = SLICE(dx_ax_194 + 0x524E4300, word16, 16)
	Mem203[ss:fp - 0x0022:word16] = (word16) (dx_ax_194 + 0x524E4300)
	selector ds_204 = fn0800_409C(ds_152, wArg00, wArg02, wArg04, wArg06)
	Mem209[ss:fp - 0x001C:word16] = Mem203[ds_204:0x29E1:word16]
	Mem212[ss:fp - 0x001E:word16] = Mem209[ds_204:0x29DF:word16]
	Mem215[ss:fp - 0x0020:word16] = Mem212[ds_204:0x4680:word16]
	Mem218[ss:fp - 0x0022:word16] = Mem215[ds_204:0x467E:word16]
	selector ds_219 = fn0800_409C(ds_204, wArg00, wArg02, wArg04, wArg06)
	Mem223[ss:fp - 0x001C:word16] = Mem218[ds_219:0x29E1:word16]
	Mem226[ss:fp - 0x001E:word16] = Mem223[ds_219:0x29DF:word16]
	Mem231[ss:fp - 0x0020:word16] = 0x0000
	Mem233[ss:fp - 0x0022:word16] = 0x0000
	selector ds_234 = fn0800_409C(ds_219, wArg00, wArg02, wArg04, wArg06)
	Mem238[ss:fp - 0x001C:word16] = Mem233[ds_234:0x29E1:word16]
	Mem241[ss:fp - 0x001E:word16] = Mem238[ds_234:0x29DF:word16]
	Mem246[ss:fp - 0x0020:word16] = 0x0000
	selector ds_247 = fn0800_401E(ds_234, wArg00, wArg02, wArg04)
	Mem251[ss:fp - 0x001C:word16] = Mem246[ds_247:0x29E1:word16]
	Mem254[ss:fp - 0x001E:word16] = Mem251[ds_247:0x29DF:word16]
	Mem259[ss:fp - 0x0020:word16] = 0x0000
	selector ds_260 = fn0800_401E(ds_247, wArg00, wArg02, wArg04)
	Mem264[ss:fp - 0x001C:word16] = Mem259[ds_260:0x29E1:word16]
	Mem267[ss:fp - 0x001E:word16] = Mem264[ds_260:0x29DF:word16]
	Mem272[ss:fp - 0x0020:word16] = 0x0000
	selector ds_273 = fn0800_401E(ds_260, wArg00, wArg02, wArg04)
	Mem277[ss:fp - 0x001C:word16] = ds_273
	Mem280[ss:fp - 0x001E:word16] = 0x2240
	word16 di_281
	fn0800_B2EF(ds_273, wArg00, wArg02, out di_281)
	Mem285[ss:fp - 0x0004:word16] = Mem280[ds_273:0x2E4F:word16]
	Mem291[ss:fp - 0x001C:word16] = 0x0001
	word16 ax_286 = 0x0001
	branch Mem291[ds_273:0x2A1F:word16] == 0x0000 l0800_7808
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7808:
	ax_286 = 0x0000
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7806:
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_780A:
	Mem298[ss:fp - 0x001E:word16] = ax_286
	selector ds_299 = fn0800_8465(ds_273, wArg00, wArg02)
	Mem306[ss:fp - 0x001C:word16] = 0x0001
	word16 ax_301 = 0x0001
	branch Mem306[ds_299:0x2E4F:word16] == 0x0000 l0800_781E
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_781E:
	ax_301 = 0x0000
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_781C:
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7820:
	Mem316[ss:fp - 0x001E:word16] = ax_301
	selector ds_317 = fn0800_8465(ds_299, wArg00, wArg02)
	branch Mem316[ds_317:0x2A23:word16] == 0x0001 l0800_7843
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_782E:
	branch Mem316[ds_317:0x2E4F:word16] == 0x0000 l0800_7843
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7835:
	Mem635[ss:fp - 0x001C:word16] = 0x0010
	Mem638[ss:fp - 0x001E:word16] = Mem635[ds_317:0x2E4F:word16]
	ds_317 = fn0800_8465(ds_317, wArg00, wArg02)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7843:
	word16 ax_323 = Mem316[ds_317:0x2A21:word16]
	branch ax_323 == 0x0001 l0800_7852
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7852:
	ds_317 = fn0800_7A02(fp - 2, ds_317)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_784B:
	branch ax_323 == 0x0002 l0800_7857
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7857:
	ds_317 = fn0800_7C78(fp - 2, ds_317)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7850:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_785A:
	word16 si_332 = 0x4682
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7870:
	branch Mem316[ds_317:0x4E82:word16] != 0x0000 l0800_785E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_785E:
	ax_323 = DPB(ax_323, Mem316[ds_317:si_332 + 0x0000:byte], 0) (alias)
	Mem619[ss:fp - 0x001C:word16] = ax_323
	fn0800_8624(ds_317, bArg00, out ds_317)
	Mem625[ds_317:0x4E82:word16] = Mem619[ds_317:0x4E82:word16] - 0x0001
	si_332 = si_332 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7877:
	Mem347[ds_317:0x2E4F:word16] = Mem316[ss:fp - 0x0004:word16]
	word16 dx_350 = Mem347[ds_317:0x467E:word16] - Mem347[ds_317:0x2A03:word16]
	word16 ax_354 = Mem347[ds_317:0x4680:word16] - Mem347[ds_317:0x2A05:word16] - (dx_350 <u 0x0000)
	branch ax_354 >u Mem347[ds_317:0x4E8A:word16] l0800_78B3
// DataOut: bp ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7892:
	branch ax_354 <u Mem347[ds_317:0x4E8A:word16] l0800_789A
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7894:
	branch dx_350 >=u Mem347[ds_317:0x4E88:word16] l0800_78B3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78B3:
	Mem596[ds_317:0x4E8A:word16] = 0x0000
	Mem597[ds_317:0x4E88:word16] = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_789A:
	dx_350 = Mem347[ds_317:0x467E:word16] - Mem347[ds_317:0x2A03:word16]
	word16 ax_603 = Mem347[ds_317:0x4680:word16] - Mem347[ds_317:0x2A05:word16] - (dx_350 <u 0x0000)
	word16 v34_604 = Mem347[ds_317:0x4E88:word16] - dx_350
	Mem605[ds_317:0x4E88:word16] = v34_604
	Mem609[ds_317:0x4E8A:word16] = Mem605[ds_317:0x4E8A:word16] - ax_603 - (v34_604 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78BF:
	branch Mem347[ds_317:0x2A21:word16] != 0x0002 l0800_78D0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78C6:
	word16 v39_587 = Mem347[ds_317:0x4E88:word16] + 0x0002
	Mem588[ds_317:0x4E88:word16] = v39_587
	Mem592[ds_317:0x4E8A:word16] = Mem588[ds_317:0x4E8A:word16] + (v39_587 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78D0:
	Mem369[ss:fp - 0x001C:word16] = Mem347[ds_317:0x29E1:word16]
	Mem372[ss:fp - 0x001E:word16] = Mem369[ds_317:0x29DF:word16]
	word16 ax_375 = fn0800_AD2F(ds_317, ptrArg00, wArg02) - Mem372[ds_317:0x465E:word16]
	Mem379[ds_317:0x2A05:word16] = dx_350 - Mem372[ds_317:0x4660:word16] - (ax_375 <u 0x0000)
	Mem380[ds_317:0x2A03:word16] = ax_375
	Mem383[ss:fp - 0x001C:word16] = 0x0000
	ui32 ax_dx_387 = SEQ(Mem383[ds_317:0x4660:word16], Mem383[ds_317:0x465E:word16] + 0x0008)
	Mem394[ss:fp - 0x001E:word16] = SLICE(ax_dx_387 + 0x00000008, word16, 16)
	Mem396[ss:fp - 0x0020:word16] = (word16) (ax_dx_387 + 0x00000008)
	Mem399[ss:fp - 0x0022:word16] = Mem396[ds_317:0x29E1:word16]
	Mem402[ss:fp - 0x0024:word16] = Mem399[ds_317:0x29DF:word16]
	selector ds_403
	fn0800_ACB3(ds_317, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_403)
	Mem408[ss:fp - 0x001C:word16] = Mem402[ds_403:0x29E1:word16]
	Mem411[ss:fp - 0x001E:word16] = Mem408[ds_403:0x29DF:word16]
	ui32 ax_dx_415 = SEQ(Mem411[ds_403:0x2A05:word16], Mem411[ds_403:0x2A03:word16] - 0x0012)
	word16 ax_418 = SLICE(ax_dx_415 - 0x00000012, word16, 16)
	Mem422[ss:fp - 0x0020:word16] = ax_418
	Mem424[ss:fp - 0x0022:word16] = (word16) (ax_dx_415 - 0x00000012)
	selector ds_425 = fn0800_409C(ds_403, wArg00, wArg02, wArg04, wArg06)
	Mem430[ss:fp - 0x001C:word16] = Mem424[ds_425:0x29E1:word16]
	Mem433[ss:fp - 0x001E:word16] = Mem430[ds_425:0x29DF:word16]
	Mem436[ss:fp - 0x0020:word16] = Mem433[ds_425:0x2E4B:word16]
	selector ds_437 = fn0800_401E(ds_425, wArg00, wArg02, wArg04)
	Mem442[ss:fp - 0x001C:word16] = Mem436[ds_437:0x29E1:word16]
	Mem445[ss:fp - 0x001E:word16] = Mem442[ds_437:0x29DF:word16]
	Mem448[ss:fp - 0x0020:word16] = Mem445[ds_437:0x2E49:word16]
	selector ds_449 = fn0800_401E(ds_437, wArg00, wArg02, wArg04)
	Mem454[ss:fp - 0x001C:word16] = Mem448[ds_449:0x29E1:word16]
	Mem457[ss:fp - 0x001E:word16] = Mem454[ds_449:0x29DF:word16]
	Mem461[ss:fp - 0x0020:word16] = DPB(ax_418, Mem457[ds_449:0x4E88:byte], 0)
	selector ds_464
	fn0800_4047(ds_449, bArg00, ptrArg02, wArg04, out ds_464)
	Mem470[ss:fp - 0x001C:word16] = Mem461[ds_464:0x29E1:word16]
	Mem473[ss:fp - 0x001E:word16] = Mem470[ds_464:0x29DF:word16]
	Mem477[ss:fp - 0x0020:word16] = DPB(ax_418, Mem473[ds_464:0x29F7:byte], 0)
	selector ds_478
	fn0800_4047(ds_464, bArg00, ptrArg02, wArg04, out ds_478)
	Mem483[ss:fp - 0x001C:word16] = 0x0000
	word16 dx_486 = Mem483[ds_478:0x465E:word16] + Mem483[ds_478:0x2A03:word16]
	Mem492[ss:fp - 0x001E:word16] = Mem483[ds_478:0x4660:word16] + Mem483[ds_478:0x2A05:word16] + (dx_486 <u 0x0000)
	Mem494[ss:fp - 0x0020:word16] = dx_486
	Mem497[ss:fp - 0x0022:word16] = Mem494[ds_478:0x29E1:word16]
	Mem500[ss:fp - 0x0024:word16] = Mem497[ds_478:0x29DF:word16]
	selector ds_501
	fn0800_ACB3(ds_478, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_501)
	Mem506[ss:fp - 0x001C:word16] = 0x0000
	word16 dx_509 = Mem506[ds_501:0x4662:word16] + Mem506[ds_501:0x467E:word16]
	Mem515[ss:fp - 0x001E:word16] = Mem506[ds_501:0x4664:word16] + Mem506[ds_501:0x4680:word16] + (dx_509 <u 0x0000)
	Mem517[ss:fp - 0x0020:word16] = dx_509
	Mem520[ss:fp - 0x0022:word16] = Mem517[ds_501:0x29E5:word16]
	Mem523[ss:fp - 0x0024:word16] = Mem520[ds_501:0x29E3:word16]
	selector ds_524
	fn0800_ACB3(ds_501, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_524)
	Mem530[ss:fp - 0x001C:word16] = Mem523[ss:fp - 0x0016:word16]
	Mem533[ss:fp - 0x001E:word16] = Mem530[ss:fp - 0x0018:word16]
	selector ds_534
	fn0800_4346(ds_524, wArg00, wArg02, out ds_534)
	Mem540[ss:fp - 0x001C:word16] = Mem533[ss:fp - 0x0012:word16]
	Mem543[ss:fp - 0x001E:word16] = Mem540[ss:fp - 0x0014:word16]
	selector ds_544
	fn0800_4346(ds_534, wArg00, wArg02, out ds_544)
	Mem550[ss:fp - 0x001C:word16] = Mem543[ss:fp - 0x000E:word16]
	Mem553[ss:fp - 0x001E:word16] = Mem550[ss:fp - 0x0010:word16]
	selector ds_554
	fn0800_4346(ds_544, wArg00, wArg02, out ds_554)
	Mem560[ss:fp - 0x001C:word16] = Mem553[ss:fp - 0x000A:word16]
	Mem563[ss:fp - 0x001E:word16] = Mem560[ss:fp - 0x000C:word16]
	selector ds_564
	fn0800_4346(ds_554, wArg00, wArg02, out ds_564)
	Mem570[ss:fp - 0x001C:word16] = Mem563[ss:fp - 0x0006:word16]
	Mem573[ss:fp - 0x001E:word16] = Mem570[ss:fp - 0x0008:word16]
	fn0800_4346(ds_564, wArg00, wArg02, out ds)
	Mem579[ss:fp - 0x001C:word16] = ds
	Mem582[ss:fp - 0x001E:word16] = 0x223C
	word16 di_583
	fn0800_B2EF(ds, wArg00, wArg02, out di_583)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp

l0800_7631:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp

l0800_7628:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 2 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp

l0800_79FD:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp

fn0800_75EA_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp



selector fn0800_7A02(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_7A02_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7A02:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_7C1A:
	word16 ax_26 = Mem0[ds:0x467C:word16]
	word16 dx_27 = Mem0[ds:0x467A:word16]
	branch ax_26 >=u Mem0[ds:0x4680:word16] l0800_7C2A
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C2A:
	branch ax_26 != Mem0[ds:0x4680:word16] l0800_7C35
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C2C:
	branch dx_27 >=u Mem0[ds:0x467E:word16] l0800_7C35
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C35:
	Mem409[ds:0x2E43:word16] = Mem0[ds:0x2E43:word16] >>u 0x10 - Mem0[ds:0x2E45:byte]
	branch Mem409[ds:0x2E45:word16] != 0x0000 l0800_7C4D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C46:
	branch Mem409[ds:0x4E82:word16] == 0x0000 l0800_7C57
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C4D:
	Mem448[ss:fp - 0x000A:word16] = DPB(ax_26, Mem409[ds:0x2E43:byte], 0)
	fn0800_8624(ds, bArg00, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C57:
	branch Mem409[ds:0x2E45:word16] >u 0x0008 l0800_7C65
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C5E:
	branch Mem409[ds:0x4E82:word16] == 0x0000 l0800_7C73
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C65:
	Mem437[ss:fp - 0x000A:word16] = Mem409[ds:0x2E43:word16] >>u 0x08
	fn0800_8624(ds, bArg00, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7C73:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_7A02_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7C32:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C27:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7A19:
	Mem35[ss:fp - 0x000A:word16] = 0x0010
	Mem38[ss:fp - 0x000C:word16] = ds
	Mem41[ss:fp - 0x000E:word16] = 0x284F
	fn0800_43D4(wArg00, psegArg02, wArg04)
	Mem49[ss:fp - 0x000A:word16] = 0x0010
	Mem51[ss:fp - 0x000C:word16] = ds
	Mem54[ss:fp - 0x000E:word16] = 0x278F
	fn0800_43D4(wArg00, psegArg02, wArg04)
	Mem59[ss:fp - 0x000A:word16] = 0x0010
	Mem61[ss:fp - 0x000C:word16] = ds
	Mem64[ss:fp - 0x000E:word16] = 0x290F
	fn0800_43D4(wArg00, psegArg02, wArg04)
	selector ds_67 = fn0800_7FDC(fp - 2, ds)
	Mem72[ss:fp - 0x000A:word16] = 0x0000
	Mem75[ss:fp - 0x000C:word16] = Mem72[ss:fp - 0x0004:word16]
	Mem78[ss:fp - 0x000E:word16] = Mem75[ss:fp - 0x0006:word16]
	Mem81[ss:fp - 0x0010:word16] = Mem78[ds_67:0x29E5:word16]
	Mem84[ss:fp - 0x0012:word16] = Mem81[ds_67:0x29E3:word16]
	selector ds_88
	fn0800_ACB3(ds_67, ptrArg00, psegArg02, wArg04, wArg06, wArg08, out ds_88)
	Mem94[ss:fp - 0x000A:word16] = 0x0010
	Mem96[ss:fp - 0x000C:word16] = ds_88
	Mem99[ss:fp - 0x000E:word16] = 0x290F
	fn0800_441C(ds_88, ptrArg00, psegArg02, wArg04)
	Mem104[ss:fp - 0x000A:word16] = 0x0010
	Mem106[ss:fp - 0x000C:word16] = ds_88
	Mem109[ss:fp - 0x000E:word16] = 0x284F
	fn0800_441C(ds_88, ptrArg00, psegArg02, wArg04)
	Mem114[ss:fp - 0x000A:word16] = 0x0010
	Mem116[ss:fp - 0x000C:word16] = ds_88
	Mem119[ss:fp - 0x000E:word16] = 0x278F
	fn0800_441C(ds_88, ptrArg00, psegArg02, wArg04)
	Mem124[ss:fp - 0x000A:word16] = 0x0010
	Mem126[ss:fp - 0x000C:word16] = ds_88
	Mem129[ss:fp - 0x000E:word16] = 0x290F
	selector ds_130 = fn0800_83A1(ds_88, ptrArg00, psegArg02, wArg04)
	Mem135[ss:fp - 0x000A:word16] = 0x0010
	Mem137[ss:fp - 0x000C:word16] = ds_130
	Mem140[ss:fp - 0x000E:word16] = 0x284F
	selector ds_141 = fn0800_83A1(ds_130, ptrArg00, psegArg02, wArg04)
	Mem146[ss:fp - 0x000A:word16] = 0x0010
	Mem148[ss:fp - 0x000C:word16] = ds_141
	Mem151[ss:fp - 0x000E:word16] = 0x278F
	selector ds_152 = fn0800_83A1(ds_141, ptrArg00, psegArg02, wArg04)
	Mem157[ss:fp - 0x000A:word16] = 0x0010
	Mem160[ss:fp - 0x000C:word16] = Mem157[ds_152:0x466A:word16]
	ds = fn0800_8489(ds_152, wArg00, psegArg02)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BC0:
	word16 ax_169 = Mem160[ds:0x466A:word16]
	word16 dx_170 = Mem160[ds:0x466C:word16]
	word16 v18_171 = Mem160[ds:0x466A:word16] - 0x0001
	Mem172[ds:0x466A:word16] = v18_171
	Mem176[ds:0x466C:word16] = Mem172[ds:0x466C:word16] - (v18_171 <u 0x0000)
	word16 ax_177 = ax_169 | dx_170
	branch ax_177 == 0x0000 l0800_7BD8
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BD8:
	branch Mem176[ds:0x2E45:word16] != 0x0000 l0800_7BFC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BDF:
	word16 si_378 = 0x4682
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BF5:
	branch Mem176[ds:0x4E82:word16] != 0x0000 l0800_7BE3
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BE3:
	al = Mem176[ds:si_378 + 0x0000:byte]
	ax_177 = DPB(ax_177, al, 0) (alias)
	Mem397[ss:fp - 0x000A:word16] = ax_177
	fn0800_8624(ds, bArg00, out ds)
	Mem403[ds:0x4E82:word16] = Mem397[ds:0x4E82:word16] - 0x0001
	si_378 = si_378 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BFC:
	word16 v29_360 = Mem176[ds:0x29F7:word16] + 0x0001
	Mem361[ds:0x29F7:word16] = v29_360
	Mem365[ds:0x29F9:word16] = Mem361[ds:0x29F9:word16] + (v29_360 <u 0x0000)
	Mem369[ss:fp - 0x000A:word16] = Mem365[ds:0x29E5:word16]
	Mem372[ss:fp - 0x000C:word16] = Mem369[ds:0x29E3:word16]
	word16 ax_373 = fn0800_AD2F(ds, ptrArg00, psegArg02)
	Mem376[ss:fp - 0x0004:word16] = dx_170
	Mem377[ss:fp - 0x0006:word16] = ax_373
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> si:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BD5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7ACB:
	Mem183[ss:fp - 0x000A:word16] = Mem176[ds:0x29DD:word16]
	Mem186[ss:fp - 0x000C:word16] = Mem183[ds:0x29DB:word16]
	word16 di_187
	selector ds_188
	word16 ax_189 = fn0800_3E27(ds, wArg00, psegArg02, out di_187, out ds_188)
	Mem191[ds_188:0x2E47:word16] = ax_189
	word16 v25_192 = Mem191[ds_188:0x467A:word16] + ax_189
	Mem193[ds_188:0x467A:word16] = v25_192
	Mem197[ds_188:0x467C:word16] = Mem193[ds_188:0x467C:word16] + (v25_192 <u 0x0000)
	Mem200[ss:fp - 0x000A:word16] = ds_188
	Mem203[ss:fp - 0x000C:word16] = 0x290F
	Mem206[ss:fp - 0x000E:word16] = Mem203[ds_188:0x2E47:word16]
	ds = fn0800_8407(ds_188, wArg00, ptrArg02)
	branch Mem206[ds:0x2E47:word16] == 0x0000 l0800_7B56
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7AFB:
	branch Mem206[ds:0x2E45:word16] == 0x0000 l0800_7B32
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B32:
	word16 ax_331 = Mem206[ds:0x2E47:word16]
	Mem333[ds:0x2E47:word16] = Mem206[ds:0x2E47:word16] - 0x0001
	branch ax_331 != 0x0000 l0800_7B24
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B24:
	selector ds_338 = fn0800_8359(ds)
	al = al ^ Mem333[ds_338:0x2E4F:byte]
	Mem344[ss:fp - 0x000A:word16] = DPB(ax_331, al, 0)
	fn0800_8624(ds_338, bArg00, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B02:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B17:
	word16 ax_311 = Mem206[ds:0x2E47:word16]
	Mem313[ds:0x2E47:word16] = Mem206[ds:0x2E47:word16] - 0x0001
	branch ax_311 != 0x0000 l0800_7B04
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> dl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B04:
	ds = fn0800_8359(ds)
	al = al ^ Mem313[ds:0x2E4F:byte]
	Mem322[ds:Mem313[ds:0x4E82:word16] + 0x4682:byte] = al
	Mem324[ds:0x4E82:word16] = Mem322[ds:0x4E82:word16] + 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> dl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B22:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> dl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B3D:
	branch (Mem206[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7B52
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B52:
	Mem306[ds:0x2E4F:word16] = Mem206[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B45:
	Mem304[ds:0x2E4F:word16] = Mem206[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B56:
	branch (Mem206[ds:0x466A:word16] | Mem206[ds:0x466C:word16]) == 0x0000 l0800_7BC0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B5F:
	Mem225[ss:fp - 0x000A:word16] = Mem206[ds:0x29DD:word16]
	Mem228[ss:fp - 0x000C:word16] = Mem225[ds:0x29DB:word16]
	word16 di_229
	selector ds_230
	word16 ax_231 = fn0800_3E27(ds, wArg00, psegArg02, out di_229, out ds_230)
	Mem234[ds_230:0x2E29:word16] = ax_231
	Mem237[ss:fp - 0x000A:word16] = Mem234[ds_230:0x29DD:word16]
	Mem240[ss:fp - 0x000C:word16] = Mem237[ds_230:0x29DB:word16]
	word16 di_241
	selector ds_242
	word16 ax_243 = fn0800_3E27(ds_230, wArg00, psegArg02, out di_241, out ds_242)
	Mem246[ds_242:0x2E2B:word16] = ax_243
	Mem248[ss:fp - 0x000A:word16] = ds_242
	Mem251[ss:fp - 0x000C:word16] = 0x284F
	Mem254[ss:fp - 0x000E:word16] = Mem251[ds_242:0x2E2B:word16]
	selector ds_255 = fn0800_8407(ds_242, wArg00, ptrArg02)
	Mem259[ss:fp - 0x000A:word16] = ds_255
	Mem262[ss:fp - 0x000C:word16] = 0x278F
	Mem265[ss:fp - 0x000E:word16] = Mem262[ds_255:0x2E29:word16]
	ds = fn0800_8407(ds_255, wArg00, ptrArg02)
	Mem269[ds:0x2E29:word16] = Mem265[ds:0x2E29:word16] + 0x0002
	word16 v40_271 = Mem269[ds:0x467A:word16] + Mem269[ds:0x2E29:word16]
	Mem272[ds:0x467A:word16] = v40_271
	Mem276[ds:0x467C:word16] = Mem272[ds:0x467C:word16] + (v40_271 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BB5:
	word16 ax_279 = Mem276[ds:0x2E29:word16]
	Mem281[ds:0x2E29:word16] = Mem276[ds:0x2E29:word16] - 0x0001
	branch ax_279 != 0x0000 l0800_7BB2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BB2:
	ds = fn0800_8359(ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_7C78(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_7C78_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7C78:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_7E6D:
	word16 ax_30 = Mem0[ds:0x467C:word16]
	word16 dx_31 = Mem0[ds:0x467A:word16]
	branch ax_30 >=u Mem0[ds:0x4680:word16] l0800_7E7D
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7D:
	branch ax_30 != Mem0[ds:0x4680:word16] l0800_7E88
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7F:
	branch dx_31 >=u Mem0[ds:0x467E:word16] l0800_7E88
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E88:
	Mem381[ds:0x2E43:word16] = Mem0[ds:0x2E43:word16] << 0x08 - Mem0[ds:0x2E45:byte]
	branch Mem381[ds:0x2E45:word16] != 0x0000 l0800_7EA0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E99:
	branch Mem381[ds:0x4E82:word16] == 0x0000 l0800_7EAA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EA0:
	Mem399[ss:fp - 0x000A:word16] = DPB(ax_30, Mem381[ds:0x2E43:byte], 0)
	fn0800_8624(ds, bArg00, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7EAA:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_7C78_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7E85:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7A:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C8F:
	selector ds_37 = fn0800_7FDC(fp - 2, ds)
	Mem42[ss:fp - 0x000A:word16] = 0x0000
	Mem46[ss:fp - 0x000C:word16] = Mem42[ss:fp - 0x0004:word16]
	Mem49[ss:fp - 0x000E:word16] = Mem46[ss:fp - 0x0006:word16]
	Mem52[ss:fp - 0x0010:word16] = Mem49[ds_37:0x29E5:word16]
	Mem55[ss:fp - 0x0012:word16] = Mem52[ds_37:0x29E3:word16]
	selector ds_106
	fn0800_ACB3(ds_37, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_106)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DCD:
	word16 ax_73 = Mem55[ds_106:0x466A:word16]
	word16 dx_74 = Mem55[ds_106:0x466C:word16]
	word16 v17_75 = Mem55[ds_106:0x466A:word16] - 0x0001
	Mem76[ds_106:0x466A:word16] = v17_75
	Mem80[ds_106:0x466C:word16] = Mem76[ds_106:0x466C:word16] - (v17_75 <u 0x0000)
	branch (ax_73 | dx_74) == 0x0000 l0800_7DE5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DE5:
	word16 ax_296
	Mem274[ss:fp - 0x000A:word16] = 0x0004
	Mem277[ss:fp - 0x000C:word16] = 0x000F
	selector ds_278 = fn0800_854B(ds_106, wArg00, wArg02)
	Mem284[ss:fp - 0x000A:word16] = 0x0000
	selector ds_285
	fn0800_8600(ds_278, bArg00, out ds_285)
	word16 ax_288 = Mem284[ds_285:0x467C:word16]
	word16 dx_289 = Mem284[ds_285:0x467A:word16]
	branch ax_288 >u Mem284[ds_285:0x4680:word16] l0800_7E1E
// DataOut: bp ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E09:
	branch ax_288 <u Mem284[ds_285:0x4680:word16] l0800_7E11
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E0B:
	branch dx_289 >=u Mem284[ds_285:0x467E:word16] l0800_7E1E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E1E:
	Mem357[ss:fp - 0x000A:word16] = 0x0001
	Mem362[ss:fp - 0x000C:word16] = 0x0000
	ax_296 = 0x0000
	ds = fn0800_854B(ds_285, wArg00, wArg02)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E11:
	Mem369[ss:fp - 0x000A:word16] = 0x0001
	Mem371[ss:fp - 0x000C:word16] = 0x0001
	ax_296 = 0x0001
	ds = fn0800_854B(ds_285, wArg00, wArg02)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E2B:
	branch Mem284[ds:0x2E45:word16] != 0x0000 l0800_7E4F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E32:
	word16 si_328 = 0x4682
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E48:
	branch Mem284[ds:0x4E82:word16] != 0x0000 l0800_7E36
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> si:<invalid> cx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E36:
	ax_296 = DPB(ax_296, Mem284[ds:si_328 + 0x0000:byte], 0) (alias)
	Mem347[ss:fp - 0x000A:word16] = ax_296
	fn0800_8624(ds, bArg00, out ds)
	Mem353[ds:0x4E82:word16] = Mem347[ds:0x4E82:word16] - 0x0001
	si_328 = si_328 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> si:<invalid> cx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E4F:
	word16 v31_310 = Mem284[ds:0x29F7:word16] + 0x0001
	Mem311[ds:0x29F7:word16] = v31_310
	Mem315[ds:0x29F9:word16] = Mem311[ds:0x29F9:word16] + (v31_310 <u 0x0000)
	Mem319[ss:fp - 0x000A:word16] = Mem315[ds:0x29E5:word16]
	Mem322[ss:fp - 0x000C:word16] = Mem319[ds:0x29E3:word16]
	word16 ax_323 = fn0800_AD2F(ds, ptrArg00, wArg02)
	Mem326[ss:fp - 0x0004:word16] = dx_289
	Mem327[ss:fp - 0x0006:word16] = ax_323
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> si:<invalid> es:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DE2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CAC:
	Mem87[ss:fp - 0x000A:word16] = Mem80[ds_106:0x29DD:word16]
	Mem90[ss:fp - 0x000C:word16] = Mem87[ds_106:0x29DB:word16]
	word16 di_92
	selector ds_93
	word16 ax_94 = fn0800_3E27(ds_106, wArg00, wArg02, out di_92, out ds_93)
	Mem96[ds_93:0x2E47:word16] = ax_94
	word16 v25_97 = Mem96[ds_93:0x467A:word16] + ax_94
	Mem98[ds_93:0x467A:word16] = v25_97
	Mem102[ds_93:0x467C:word16] = Mem98[ds_93:0x467C:word16] + (v25_97 <u 0x0000)
	Mem105[ss:fp - 0x000A:word16] = ax_94
	ds_106 = fn0800_7EAF(ds_93, wArg00)
	branch (Mem105[ds_106:0x466A:word16] | Mem105[ds_106:0x466C:word16]) != 0x0000 l0800_7CD9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CD9:
	Mem115[ss:fp - 0x000A:word16] = Mem105[ds_106:0x29DD:word16]
	Mem118[ss:fp - 0x000C:word16] = Mem115[ds_106:0x29DB:word16]
	word16 di_119
	selector ds_120
	word16 ax_121 = fn0800_3E27(ds_106, wArg00, wArg02, out di_119, out ds_120)
	Mem124[ds_120:0x2E29:word16] = ax_121
	Mem127[ss:fp - 0x000A:word16] = Mem124[ds_120:0x29DD:word16]
	Mem130[ss:fp - 0x000C:word16] = Mem127[ds_120:0x29DB:word16]
	word16 di_131
	selector ds_132
	word16 ax_133 = fn0800_3E27(ds_120, wArg00, wArg02, out di_131, out ds_132)
	Mem135[ds_132:0x2E2B:word16] = ax_133
	branch Mem135[ds_132:0x2E29:word16] != 0x0000 l0800_7D1D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D1D:
	branch Mem135[ds_132:0x2E29:word16] >=u 0x0007 l0800_7D68
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D68:
	Mem229[ss:fp - 0x000A:word16] = 0x0004
	Mem232[ss:fp - 0x000C:word16] = 0x000F
	selector ds_233 = fn0800_854B(ds_132, wArg00, wArg02)
	word16 ax_237 = DPB(0x000F, Mem232[ds_233:0x2E29:byte] - 0x06, 0)
	Mem240[ss:fp - 0x000A:word16] = ax_237
	selector ds_241
	fn0800_8600(ds_233, bArg00, out ds_241)
	Mem253[ss:fp - 0x000A:word16] = DPB(ax_237, 0x00, 8)
	word16 ax_256 = DPB(ax_237, 0x00, 8)
	Mem258[ss:fp - 0x000C:word16] = ax_256
	selector ds_259 = fn0800_854B(ds_241, wArg00, wArg02)
	Mem267[ss:fp - 0x000A:word16] = DPB(ax_256, Mem258[ds_259:0x2E2B:byte] & 0xFF, 0)
	fn0800_8600(ds_259, bArg00, out ds_106)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D24:
	Mem191[ss:fp - 0x000A:word16] = DPB(ax_133, 0x00, 8)
	Mem196[ss:fp - 0x000C:word16] = DPB(ax_133, 0x00, 8)
	selector ds_197 = fn0800_854B(ds_132, wArg00, wArg02)
	Mem208[ss:fp - 0x000A:word16] = DPB(ax_133, 0x00, 8)
	word16 ax_211 = DPB(ax_133, 0x00, 8)
	Mem213[ss:fp - 0x000C:word16] = ax_211
	selector ds_214 = fn0800_854B(ds_197, wArg00, wArg02)
	Mem222[ss:fp - 0x000A:word16] = DPB(ax_211, Mem213[ds_214:0x2E2B:byte] & 0xFF, 0)
	fn0800_8600(ds_214, bArg00, out ds_106)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D02:
	Mem168[ss:fp - 0x000A:word16] = 0x0003
	Mem171[ss:fp - 0x000C:word16] = 0x0006
	selector ds_172 = fn0800_854B(ds_132, wArg00, wArg02)
	Mem178[ss:fp - 0x000A:word16] = DPB(0x0006, Mem171[ds_172:0x2E2B:byte], 0)
	fn0800_8600(ds_172, bArg00, out ds_106)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DAC:
	Mem148[ds_106:0x2E29:word16] = Mem135[ds_106:0x2E29:word16] + 0x0002
	word16 v36_150 = Mem148[ds_106:0x467A:word16] + Mem148[ds_106:0x2E29:word16]
	Mem151[ds_106:0x467A:word16] = v36_150
	Mem155[ds_106:0x467C:word16] = Mem151[ds_106:0x467C:word16] + (v36_150 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DC2:
	word16 ax_158 = Mem155[ds_106:0x2E29:word16]
	Mem160[ds_106:0x2E29:word16] = Mem155[ds_106:0x2E29:word16] - 0x0001
	branch ax_158 != 0x0000 l0800_7DBF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DBF:
	ds_106 = fn0800_8359(ds_106)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CD6:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_7EAF(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_7EAF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_7EAF:
	word16 si_13 = wArg02
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7FD1:
	word16 si_101 = si_13
	branch si_13 == 0x0000 l0800_7FD8
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7FD8:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_7EAF_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si di:di ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_7FD5:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7EBA:
	branch si_13 >=u 0x000C l0800_7F32
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7F32:
	branch (si_101 & 0x0003) != 0x0000 l0800_7EFD
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7EFD:
	selector ds_232 = fn0800_8359(fn0800_854B(ds, 0x0000, 0x0001))
	al = Mem0[ds_232:0x2E4F:byte] ^ 0x00
	fn0800_8600(ds_232, (byte) (word16) al, out ds)
	branch (Mem0[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7F2D
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7F2D:
	Mem258[ds:0x2E4F:word16] = Mem0[ds:0x2E4F:word16] >>u 0x0001
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7F20:
	Mem256[ds:0x2E4F:word16] = Mem0[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7F31:
	si_101 = si_101 - 0x0001
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7F38:
	selector ds_111 = fn0800_854B(ds, 0x0017, 0x0005)
	branch si_101 <u 0x0048 l0800_7F8F
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7F8F:
	ds = fn0800_854B(ds_111, si_101 - 0x000C >>u 0x0002, 0x0004)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x0017 -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_7FB4:
	si_13 = si_101
	branch si_101 != 0x0000 l0800_7FA5
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_7FA5:
	selector ds_206 = fn0800_8359(ds)
	al = al ^ Mem0[ds_206:0x2E4F:byte]
	fn0800_8600(ds_206, al, out ds)
	si_101 = si_101 - 0x0001
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_7FB8:
	branch (Mem0[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7FCD
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7FCD:
	Mem204[ds:0x2E4F:word16] = Mem0[ds:0x2E4F:word16] >>u 0x0001
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7FC0:
	Mem202[ds:0x2E4F:word16] = Mem0[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7F4B:
	ds = fn0800_854B(ds_111, 0x000F, 0x0004)
	word16 di_123 = 0x0000
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x0017 -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_7F6C:
	branch di_123 != 0x0048 l0800_7F5D
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x000F -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_7F5D:
	selector ds_154 = fn0800_8359(ds)
	al = al ^ Mem0[ds_154:0x2E4F:byte]
	di_123 = fn0800_8600(ds_154, al, out ds) + 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x000F -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_7F71:
	branch (Mem0[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7F86
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x000F -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7F86:
	Mem152[ds:0x2E4F:word16] = Mem0[ds:0x2E4F:word16] >>u 0x0001
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x000F -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7F79:
	Mem150[ds:0x2E4F:word16] = Mem0[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x000F -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7F8A:
	si_13 = si_101 - 0x0048
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x000F -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7EBF:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7EF6:
	si_13 = si_101
	branch si_101 != 0x0000 l0800_7EC1
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7EC1:
	selector ds_63 = fn0800_8359(fn0800_854B(ds, 0x0000, 0x0001))
	al = Mem0[ds_63:0x2E4F:byte] ^ 0x00
	fn0800_8600(ds_63, (byte) (word16) al, out ds)
	branch (Mem0[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7EF1
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7EF1:
	Mem90[ds:0x2E4F:word16] = Mem0[ds:0x2E4F:word16] >>u 0x0001
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7EE4:
	Mem88[ds:0x2E4F:word16] = Mem0[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7EF5:
	si_101 = si_101 - 0x0001
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_7EFA:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



selector fn0800_7FDC(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_7FDC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7FDC:
	Mem7[ds:0x466C:word16] = 0x0000
	Mem9[ds:0x466A:word16] = 0x0000
	Mem10[ds:0x2E47:word16] = 0x0000
	word16 dx_12 = Mem10[ds:0x2A0B:word16]
	Mem13[ds:0x4670:word16] = Mem10[ds:0x2A0D:word16]
	Mem14[ds:0x466E:word16] = dx_12
	word16 dx_20 = Mem14[ds:0x4662:word16] + Mem14[ds:0x467A:word16]
	word16 dx_24 = dx_20 + Mem14[ds:0x4672:word16]
	selector ds_41
	fn0800_ACB3(ds, DPB(ptrLoc10, Mem14[ds:0x29E3:word16], 0), Mem14[ds:0x29E5:word16], dx_24, Mem14[ds:0x4664:word16] + Mem14[ds:0x467C:word16] + (dx_20 <u 0x0000) + Mem14[ds:0x4674:word16] + (dx_24 <u 0x0000), 0x0000, out ds_41)
	selector ds_310
	fn0800_ACB3(ds_41, DPB(ptrLoc10, Mem14[ds_41:0x29DB:word16], 0), Mem14[ds_41:0x29DD:word16], 0x0000, 0x0000, 0x0000, out ds_310)
	word16 bp_255 = fp - 2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_82A1:
	branch (Mem14[ds_310:0x4676:word16] | Mem14[ds_310:0x4678:word16]) == 0x0000 l0800_82AD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82AD:
	branch (Mem14[ds_310:0x4672:word16] | Mem14[ds_310:0x4674:word16]) == 0x0000 l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82B6:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82AA:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8042:
	word16 dx_169 = 0xFFFF - Mem14[ds_310:0x2E31:word16]
	word16 dx_173 = dx_169 - Mem14[ds_310:0x4672:word16]
	Mem177[ss:bp_255 - 0x0002:word16] = 0x0000 - (dx_169 <u 0x0000) - Mem14[ds_310:0x4674:word16] - (dx_173 <u 0x0000)
	Mem178[ss:bp_255 - 0x0004:word16] = dx_173
	word16 ax_179 = Mem178[ds_310:0x4678:word16]
	word16 dx_180 = Mem178[ds_310:0x4676:word16]
	branch ax_179 >u Mem178[ss:bp_255 - 0x0002:word16] l0800_807C
// DataOut: bp ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8068:
	branch ax_179 <u Mem178[ss:bp_255 - 0x0002:word16] l0800_806F
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_806A:
	branch dx_180 >=u Mem178[ss:bp_255 - 0x0004:word16] l0800_807C
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_806F:
	word16 dx_500 = Mem178[ds_310:0x4676:word16]
	Mem501[ss:bp_255 - 0x0002:word16] = Mem178[ds_310:0x4678:word16]
	Mem502[ss:bp_255 - 0x0004:word16] = dx_500
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_807C:
	word16 dx_190 = Mem178[ds_310:0x2E71:word16] + Mem178[ds_310:0x2E31:word16]
	Mem191[ds_310:0x2E6F:word16] = Mem178[ds_310:0x2E73:word16]
	Mem192[ds_310:0x2E6D:word16] = dx_190
	Mem195[ss:fp - 0x0008:word16] = Mem192[ds_310:0x29E5:word16]
	Mem198[ss:fp - 0x000A:word16] = Mem195[ds_310:0x29E3:word16]
	Mem201[ss:fp - 0x000C:word16] = Mem198[ss:bp_255 - 0x0002:word16]
	Mem204[ss:fp - 0x000E:word16] = Mem201[ss:bp_255 - 0x0004:word16]
	word16 ax_206 = Mem204[ds_310:0x2E6D:word16] + Mem204[ds_310:0x4672:word16]
	Mem210[ss:fp - 0x0010:word16] = Mem204[ds_310:0x2E73:word16]
	Mem212[ss:fp - 0x0012:word16] = ax_206
	word16 di_214
	selector ds_215
	word16 si_216 = fn0800_4110(ds_310, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_214, out ds_215)
	word16 dx_219 = Mem212[ss:bp_255 - 0x0004:word16]
	word16 ax_218 = Mem212[ss:bp_255 - 0x0002:word16]
	word16 v27_220 = Mem212[ds_215:0x4676:word16] - dx_219
	Mem221[ds_215:0x4676:word16] = v27_220
	Mem225[ds_215:0x4678:word16] = Mem221[ds_215:0x4678:word16] - ax_218 - (v27_220 <u 0x0000)
	word16 v29_226 = Mem225[ds_215:0x4672:word16] + dx_219
	Mem227[ds_215:0x4672:word16] = v29_226
	Mem231[ds_215:0x4674:word16] = Mem227[ds_215:0x4674:word16] + ax_218 + (v29_226 <u 0x0000)
	word16 ax_232 = Mem231[ds_215:0x2E6F:word16]
	word16 dx_234 = Mem231[ds_215:0x2E6D:word16] + Mem231[ds_215:0x4672:word16]
	Mem235[ds_215:0x2E67:word16] = ax_232
	Mem236[ds_215:0x2E65:word16] = dx_234
	Mem237[ds_215:0x2E6B:word16] = ax_232
	Mem238[ds_215:0x2E69:word16] = dx_234
	word16 ax_239 = Mem238[ds_215:0x4670:word16]
	word16 dx_240 = Mem238[ds_215:0x466E:word16]
	branch ax_239 <=u Mem238[ds_215:0x4674:word16] l0800_80ED
// DataOut: bp ds dx si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80ED:
	branch ax_239 <u Mem238[ds_215:0x4674:word16] l0800_80F8
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80EF:
	branch dx_240 <u Mem238[ds_215:0x4672:word16] l0800_80F8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80F8:
	word16 dx_491 = Mem238[ds_215:0x2E6D:word16] + Mem238[ds_215:0x466E:word16]
	Mem493[ds_215:0x2E67:word16] = Mem238[ds_215:0x2E6F:word16]
	Mem494[ds_215:0x2E65:word16] = dx_491
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80F5:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80EA:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81E9:
	branch Mem238[ds_215:0x2E65:word16] - 0x0001 <=u Mem238[ds_215:0x2E6D:word16] l0800_8209
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81F3:
	branch Mem238[ds_215:0x466C:word16] >=u 0x0000 l0800_81FD
// DataOut: bp ds si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81FD:
	branch Mem238[ds_215:0x466C:word16] != 0x0000 l0800_8209
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81FF:
	branch Mem238[ds_215:0x466A:word16] >=u 0xFFFE l0800_8209
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8206:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81FA:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_810D:
	fn0800_8832(ds_215)
	branch Mem238[ds_215:0x2E29:word16] <u 0x0002 l0800_8193
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8193:
	Mem478[ss:fp - 0x0008:word16] = 0x0001
	fn0800_89A8(ds_215, wArg00)
	Mem482[ds_215:0x2E47:word16] = Mem478[ds_215:0x2E47:word16] + 0x0001
	Mem484[ds_215:0x465C:word16] = Mem482[ds_215:0x465C:word16] + 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8117:
	branch Mem238[ds_215:0x2E6D:word16] + Mem238[ds_215:0x2E29:word16] <=u Mem238[ds_215:0x2E65:word16] l0800_813F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8124:
	branch (Mem238[ds_215:0x466A:word16] | Mem238[ds_215:0x466C:word16]) == 0x0000 l0800_8130
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8130:
	Mem475[ds_215:0x2E29:word16] = Mem238[ds_215:0x2E65:word16] - Mem238[ds_215:0x2E6D:word16]
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_813F:
	Mem413[ss:fp - 0x0008:word16] = ds_215
	Mem416[ss:fp - 0x000A:word16] = 0x290F
	Mem419[ss:fp - 0x000C:word16] = Mem416[ds_215:0x2E47:word16]
	selector ds_420 = fn0800_831D(ds_215, wArg00, ptrArg02)
	Mem423[ss:fp - 0x0008:word16] = ds_420
	Mem426[ss:fp - 0x000A:word16] = 0x278F
	Mem431[ss:fp - 0x000C:word16] = Mem426[ds_420:0x2E29:word16] - 0x0002
	selector ds_432 = fn0800_831D(ds_420, wArg00, ptrArg02)
	Mem436[ss:fp - 0x0008:word16] = ds_432
	Mem439[ss:fp - 0x000A:word16] = 0x284F
	Mem444[ss:fp - 0x000C:word16] = Mem439[ds_432:0x2E2B:word16] - 0x0001
	ds_215 = fn0800_831D(ds_432, wArg00, ptrArg02)
	Mem450[ss:fp - 0x0008:word16] = Mem444[ds_215:0x2E29:word16]
	fn0800_89A8(ds_215, wArg00)
	word16 v40_452 = Mem450[ds_215:0x466A:word16] + 0x0001
	Mem453[ds_215:0x466A:word16] = v40_452
	Mem457[ds_215:0x466C:word16] = Mem453[ds_215:0x466C:word16] + (v40_452 <u 0x0000)
	Mem458[ds_215:0x2E47:word16] = 0x0000
	Mem461[ds_215:0x465C:word16] = Mem458[ds_215:0x465C:word16] + Mem458[ds_215:0x2E29:word16]
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81A5:
	branch Mem238[ds_215:0x465C:word16] <u 0x0400 l0800_81E9
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81AD:
	word16 v45_362 = Mem238[ds_215:0x4666:word16] + Mem238[ds_215:0x465C:word16]
	Mem363[ds_215:0x4666:word16] = v45_362
	Mem367[ds_215:0x4668:word16] = Mem363[ds_215:0x4668:word16] + (v45_362 <u 0x0000)
	Mem370[ss:fp - 0x0008:word16] = Mem367[ds_215:0x4680:word16]
	Mem373[ss:fp - 0x000A:word16] = Mem370[ds_215:0x467E:word16]
	word16 dx_380
	word16 ax_381 = fn0800_8F18(0x0063, Mem373[ds_215:0x4668:word16], 0x0000, Mem373[ds_215:0x4666:word16], out dx_380)
	Mem383[ss:fp - 0x000C:word16] = dx_380
	Mem385[ss:fp - 0x000E:word16] = ax_381
	word16 dx_386
	word16 si_388
	word16 di_389
	word16 ax_390 = fn0800_8BC2(bp_255, si_216, di_214, bp, out dx_386, out bp_255, out si_388, out di_389)
	Mem393[ss:fp - 0x0008:word16] = dx_386
	Mem395[ss:fp - 0x000A:word16] = ax_390
	Mem397[ss:fp - 0x000C:word16] = ds_215
	Mem400[ss:fp - 0x000E:word16] = 0x2244
	si_216 = fn0800_B2EF(ds_215, wArg00, wArg02, out di_214)
	Mem405[ds_215:0x465C:word16] = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_812D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8209:
	word16 ax_268 = Mem238[ds_215:0x2E69:word16] - Mem238[ds_215:0x2E6D:word16]
	Mem272[ds_215:0x4674:word16] = 0x0000 - (ax_268 <u 0x0000)
	Mem273[ds_215:0x4672:word16] = ax_268
	word16 ax_276 = Mem273[ds_215:0x2E6D:word16] - Mem273[ds_215:0x2E71:word16]
	word16 ax_280 = ax_276 - Mem273[ds_215:0x2E31:word16]
	Mem284[ss:bp_255 - 0x0002:word16] = 0x0000 - (ax_276 <u 0x0000) - (ax_280 <u 0x0000)
	Mem285[ss:bp_255 - 0x0004:word16] = ax_280
	word16 ax_287 = Mem285[ds_215:0x2E71:word16] + Mem285[ss:bp_255 - 0x0004:word16]
	Mem298[ss:fp - 0x0008:word16] = Mem285[ds_215:0x2E6D:word16] - ax_287 + Mem285[ds_215:0x4672:word16]
	Mem301[ss:fp - 0x000A:word16] = Mem298[ds_215:0x2E73:word16]
	Mem303[ss:fp - 0x000C:word16] = ax_287
	Mem306[ss:fp - 0x000E:word16] = Mem303[ds_215:0x2E73:word16]
	Mem309[ss:fp - 0x0010:word16] = Mem306[ds_215:0x2E71:word16]
	ds_310 = fn0800_B0F3(wArg00, wArg02, wArg04, wArg06, wArg08)
	branch Mem309[ds_310:0x2E65:word16] <u Mem309[ds_310:0x2E69:word16] l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8269:
	word16 dx_316 = Mem309[ds_310:0x2E65:word16]
	branch Mem309[ds_310:0x2E67:word16] != Mem309[ds_310:0x2E6B:word16] l0800_8285
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8276:
	branch dx_316 != Mem309[ds_310:0x2E69:word16] l0800_8285
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_827C:
	branch (Mem309[ds_310:0x4676:word16] | Mem309[ds_310:0x4678:word16]) == 0x0000 l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8285:
	branch Mem309[ds_310:0x466C:word16] != 0x0000 l0800_8293
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_828C:
	branch Mem309[ds_310:0x466A:word16] == 0xFFFE l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82B9:
	word16 dx_99 = Mem14[ds_310:0x2E65:word16]
	branch Mem14[ds_310:0x2E67:word16] != Mem14[ds_310:0x2E6B:word16] l0800_82ED
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82C6:
	branch dx_99 != Mem14[ds_310:0x2E69:word16] l0800_82ED
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82CC:
	branch (Mem14[ds_310:0x4676:word16] | Mem14[ds_310:0x4678:word16]) != 0x0000 l0800_82ED
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82D5:
	branch Mem14[ds_310:0x466C:word16] != 0x0000 l0800_82E3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82DC:
	branch Mem14[ds_310:0x466A:word16] == 0xFFFE l0800_82ED
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82E3:
	Mem164[ds_310:0x2E47:word16] = Mem14[ds_310:0x2E47:word16] + Mem14[ds_310:0x4672:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82ED:
	Mem106[ss:fp - 0x0008:word16] = ds_310
	Mem110[ss:fp - 0x000A:word16] = 0x290F
	Mem113[ss:fp - 0x000C:word16] = Mem110[ds_310:0x2E47:word16]
	selector ds_116 = fn0800_831D(ds_310, wArg00, ptrArg02)
	word16 v18_118 = Mem113[ds_116:0x466A:word16] + 0x0001
	Mem119[ds_116:0x466A:word16] = v18_118
	Mem123[ds_116:0x466C:word16] = Mem119[ds_116:0x466C:word16] + (v18_118 <u 0x0000)
	Mem128[ss:fp - 0x0008:word16] = 0x0000
	Mem130[ss:fp - 0x000A:word16] = 0x0000
	Mem132[ss:fp - 0x000C:word16] = 0x0000
	Mem135[ss:fp - 0x000E:word16] = Mem132[ds_116:0x29DD:word16]
	Mem138[ss:fp - 0x0010:word16] = Mem135[ds_116:0x29DB:word16]
	selector ds_144
	fn0800_ACB3(ds_116, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_144)
	return ds_144
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_7FDC_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_8293:
	word16 ax_327 = Mem309[ss:bp_255 - 0x0002:word16]
	word16 v36_329 = Mem309[ds_310:0x466E:word16] - Mem309[ss:bp_255 - 0x0004:word16]
	Mem330[ds_310:0x466E:word16] = v36_329
	Mem334[ds_310:0x4670:word16] = Mem330[ds_310:0x4670:word16] - ax_327 - (v36_329 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_831D(selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_831D_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0002(16) Stack +0004(32)

l0800_831D:
	word16 ax_13
	branch wArg02 <=u 0x0001 l0800_8332
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0004(32)

l0800_8332:
	ax_13 = wArg02
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_8329:
	ax_13 = fn0800_0C08(wArg02)
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_8334:
	word16 ax_16 = (word16) (ax_13 *s 0x000C)
	selector es_19 = SLICE(ptrArg04, selector, 16)
	word16 v14_22 = Mem0[es_19:ax_16 + 0x0002:word16] + 0x0001
	Mem23[es_19:ax_16 + 0x0002:word16] = v14_22
	Mem27[es_19:ax_16 + 0x0004:word16] = Mem23[es_19:ax_16 + 0x0004:word16] + (v14_22 <u 0x0000)
	return fn0800_401E(ds, wArg02, Mem27[ds:0x29DB:word16], Mem27[ds:0x29DD:word16])
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> bx:0x0002 dx:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_831D_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



selector fn0800_8359(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: al bp sp
fn0800_8359_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8359:
	word16 di_18
	selector ds_19
	word16 ax_29 = (DPB(fn0800_3DCF(ds, DPB(ptrLoc08, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16], out di_18, out ds_19), 0x00, 8) & 0x00FF) << 0x0001
	Mem36[ds_19:0x2E4B:word16] = Mem0[ds_19:ax_29 + 0x2A29:word16] ^ Mem0[ds_19:0x2E4B:word16] >>u 0x08
	word16 v17_37 = Mem36[ds_19:0x29FF:word16] + 0x0001
	Mem38[ds_19:0x29FF:word16] = v17_37
	Mem42[ds_19:0x2A01:word16] = Mem38[ds_19:0x2A01:word16] + (v17_37 <u 0x0000)
	return ds_19
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8359_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> ah:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> cl:0x08 es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp



selector fn0800_83A1(selector ds, segptr32 ptrArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16)
fn0800_83A1_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_83A1:
	word16 di_103 = wArg06
	word16 si_16 = wArg06
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_83C4:
	si_16 = si_16 - 0x0001
	branch si_16 != 0x0000 l0800_83B0
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_83B0:
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) (ptrArg02 + si_16 *s 0x000C) + 0x000A:word16] != 0x0000 l0800_83CB
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_83C3:
	di_103 = di_103 - 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_83CB:
	selector ds_48 = fn0800_8489(ds, di_103, 0x0005)
	word16 si_50 = 0x0000
	word16 wLoc04_54 = wArg02 + 0x000A
	branch 0x0000 >=u di_103 l0800_8401
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0004(16)

l0800_83E5:
	ds_48 = fn0800_8489(ds_48, Mem0[psegArg04:wLoc04_54:word16], 0x0004)
	wLoc04_54 = wLoc04_54 + 0x000C
	si_50 = si_50 + 0x0001
	branch si_50 <u di_103 l0800_83E5
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0004(16)

l0800_8401:
	return ds_48
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_83A1_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di si:si ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



selector fn0800_8407(selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_8407_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(32)

l0800_8407:
	word16 ax_17
	branch wArg02 <=u 0x0001 l0800_8420
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0004(32)

l0800_8420:
	ax_17 = wArg02
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_8417:
	ax_17 = fn0800_0C08(wArg02)
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_8422:
	word16 ax_21 = (word16) (ax_17 *s 0x000C)
	selector es_24 = SLICE(ptrArg04, selector, 16)
	selector ds_36 = fn0800_8489(ds, Mem0[es_24:ax_21 + 0x0008:word16], Mem0[es_24:ax_21 + 0x000C:word16])
	branch ax_17 <=u 0x0001 l0800_845F
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> bx:0x0002 dx:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_8445:
	ds_36 = fn0800_8489(ds_36, wArg02 - (0x0001 << bLoc04 - 0x01), ax_17 - 0x0001)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_845F:
	return ds_36
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:<invalid> cl:<invalid> cx:<invalid> al:<invalid> ah:<invalid> es:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_8407_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:di cl:<invalid> cx:<invalid> al:<invalid> ah:<invalid> es:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



selector fn0800_8465(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_8465_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8465:
	branch Mem0[ds:0x2A21:word16] != 0x0002 l0800_847F
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_847F:
	return fn0800_8489(ds, wArg02, wArg04)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_8475:
	return fn0800_854B(ds, wArg02, wArg04)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_8465_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_8489(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_8489_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8489:
	word16 di_13 = wArg02
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_853A:
	wArg04 = wArg04 - 0x0001
	branch wArg04 == 0x0000 l0800_8547
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_8547:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

fn0800_8489_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di ax:<invalid> si:si al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

l0800_8544:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_8494:
	Mem48[ds:0x2E43:word16] = Mem0[ds:0x2E43:word16] >>u 0x0001
	branch (di_13 & 0x0001) == 0x0000 l0800_84A4
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_849E:
	Mem153[ds:0x2E43:word16] = Mem48[ds:0x2E43:word16] | 0x8000
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_84A4:
	Mem56[ds:0x2E45:word16] = Mem48[ds:0x2E45:word16] + 0x0001
	di_13 = di_13 >>u 0x0001
	branch Mem56[ds:0x2E45:word16] == 0x0010 l0800_84B5
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_84B5:
	selector ds_65
	fn0800_8624(ds, Mem56[ds:0x2E43:byte], out ds_65)
	di_13 = fn0800_8624(ds_65, (byte) (Mem56[ds_65:0x2E43:word16] >>u 0x08), out ds)
	word16 si_138 = 0x4682
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_84E3:
	branch Mem56[ds:0x4E82:word16] != 0x0000 l0800_84D1
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_84D1:
	di_13 = fn0800_8624(ds, Mem56[ds:si_138 + 0x0000:byte], out ds)
	Mem150[ds:0x4E82:word16] = Mem56[ds:0x4E82:word16] - 0x0001
	si_138 = si_138 + 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_84EA:
	word16 ax_93 = Mem56[ds:0x2A01:word16]
	word16 dx_94 = Mem56[ds:0x29FF:word16]
	branch ax_93 <u Mem56[ds:0x2A05:word16] l0800_8532
// DataOut: di ds dx ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_84F7:
	branch ax_93 >u Mem56[ds:0x2A05:word16] l0800_84FF
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_84F9:
	branch dx_94 <=u Mem56[ds:0x2A03:word16] l0800_8532
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_84FF:
	word16 dx_113 = Mem56[ds:0x29FF:word16] - Mem56[ds:0x2A03:word16]
	word16 ax_116 = Mem56[ds:0x2A01:word16] - Mem56[ds:0x2A05:word16] - (dx_113 <u 0x0000)
	branch ax_116 <u Mem56[ds:0x4E8A:word16] l0800_8532
// DataOut: di ds dx ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_8514:
	branch ax_116 >u Mem56[ds:0x4E8A:word16] l0800_851C
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_8516:
	branch dx_113 <=u Mem56[ds:0x4E88:word16] l0800_8532
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_851C:
	word16 dx_126 = Mem56[ds:0x29FF:word16] - Mem56[ds:0x2A03:word16]
	Mem131[ds:0x4E8A:word16] = Mem56[ds:0x2A01:word16] - Mem56[ds:0x2A05:word16] - (dx_126 <u 0x0000)
	Mem132[ds:0x4E88:word16] = dx_126
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_8532:
	Mem109[ds:0x2E45:word16] = 0x0000
	Mem110[ds:0x2E43:word16] = 0x0000
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_84B2:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)



selector fn0800_854B(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(8)
fn0800_854B_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(8)

l0800_854B:
	word16 di_137 = 0x0001 << bArg04 - 0x01
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_85EF:
	wArg04 = wArg04 - 0x0001
	branch wArg04 == 0x0000 l0800_85FC
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_85FC:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

fn0800_854B_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cl:<invalid> di:di ax:<invalid> si:si al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

l0800_85F9:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_855D:
	Mem49[ds:0x2E43:word16] = Mem0[ds:0x2E43:word16] << 0x0001
	branch (wArg02 & di_137) == 0x0000 l0800_856A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8566:
	Mem144[ds:0x2E43:word16] = Mem49[ds:0x2E43:word16] + 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_856A:
	Mem57[ds:0x2E45:word16] = Mem49[ds:0x2E45:word16] + 0x0001
	di_137 = di_137 >>u 0x0001
	branch Mem57[ds:0x2E45:word16] != 0x0008 l0800_85EF
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8578:
	di_137 = fn0800_8624(ds, Mem57[ds:0x2E43:byte], out ds)
	word16 si_129 = 0x4682
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8598:
	branch Mem57[ds:0x4E82:word16] != 0x0000 l0800_8586
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8586:
	di_137 = fn0800_8624(ds, Mem57[ds:si_129 + 0x0000:byte], out ds)
	Mem141[ds:0x4E82:word16] = Mem57[ds:0x4E82:word16] - 0x0001
	si_129 = si_129 + 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_859F:
	word16 ax_84 = Mem57[ds:0x2A01:word16]
	word16 dx_85 = Mem57[ds:0x29FF:word16]
	branch ax_84 <u Mem57[ds:0x2A05:word16] l0800_85E7
// DataOut: di ds dx ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_85AC:
	branch ax_84 >u Mem57[ds:0x2A05:word16] l0800_85B4
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_85AE:
	branch dx_85 <=u Mem57[ds:0x2A03:word16] l0800_85E7
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_85B4:
	word16 dx_104 = Mem57[ds:0x29FF:word16] - Mem57[ds:0x2A03:word16]
	word16 ax_107 = Mem57[ds:0x2A01:word16] - Mem57[ds:0x2A05:word16] - (dx_104 <u 0x0000)
	branch ax_107 <u Mem57[ds:0x4E8A:word16] l0800_85E7
// DataOut: di ds dx ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_85C9:
	branch ax_107 >u Mem57[ds:0x4E8A:word16] l0800_85D1
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_85CB:
	branch dx_104 <=u Mem57[ds:0x4E88:word16] l0800_85E7
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_85D1:
	word16 dx_117 = Mem57[ds:0x29FF:word16] - Mem57[ds:0x2A03:word16]
	Mem122[ds:0x4E8A:word16] = Mem57[ds:0x2A01:word16] - Mem57[ds:0x2A05:word16] - (dx_117 <u 0x0000)
	Mem123[ds:0x4E88:word16] = dx_117
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_85E7:
	Mem100[ds:0x2E45:word16] = 0x0000
	Mem101[ds:0x2E43:word16] = 0x0000
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)



word16 fn0800_8600(selector ds, byte bArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(8)
fn0800_8600_entry:
	*dsOut = ds
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8600:
	branch Mem0[ds:0x2E45:word16] == 0x0000 l0800_861B
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_861B:
	selector ds_37
	return fn0800_8624(ds, bArg02, out ds_37)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 dl:<invalid> -2(fp):bp

l0800_860D:
	Mem25[ds:Mem0[ds:0x4E82:word16] + 0x4682:byte] = bArg02
	Mem27[ds:0x4E82:word16] = Mem25[ds:0x4E82:word16] + 0x0001
	return di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 dl:<invalid> -2(fp):bp

fn0800_8600_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dl:<invalid> bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:0x08 es:<invalid> ds:<invalid> cx:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -4(fp):dx -2(fp):bp



word16 fn0800_8624(selector ds, byte bArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(8)
fn0800_8624_entry:
	*dsOut = ds
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8624:
	word16 ax_8 = Mem0[ds:0x2A05:word16]
	word16 dx_9 = Mem0[ds:0x2A03:word16]
	branch ax_8 >u Mem0[ds:0x4E86:word16] l0800_8678
// DataOut: di ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8634:
	branch ax_8 <u Mem0[ds:0x4E86:word16] l0800_863C
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8636:
	branch dx_9 >=u Mem0[ds:0x4E84:word16] l0800_8678
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_863C:
	selector ds_55
	di = fn0800_4047(ds, bArg02, DPB(ptrLoc06, Mem0[ds:0x29DF:word16], 0), Mem0[ds:0x29E1:word16], out ds_55)
	Mem70[ds_55:0x2E49:word16] = Mem0[ds_55:((DPB(DPB(ax_8, bArg02, 0), 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem0[ds_55:0x2E49:word16] >>u 0x08
	word16 v18_71 = Mem70[ds_55:0x2A03:word16] + 0x0001
	Mem72[ds_55:0x2A03:word16] = v18_71
	Mem76[ds_55:0x2A05:word16] = Mem72[ds_55:0x2A05:word16] + (v18_71 <u 0x0000)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_8678:
	return di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_8624_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_867A(word16 wArg04, selector psegArg06, word16 wArg08, selector psegArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: bp ds sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax
// Stack args: Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_867A_entry:
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_867A:
	word16 si_26
	word16 bx_115 = DPB(bx, fn0800_87EF(wArg04 + 0x0004, psegArg06, out si_26), 0)
	byte al_41 = Mem0[psegArg06:si_26 + 0x000A:byte] * 0x02 + true
	selector ds_19 = psegArg06
	word16 di_128 = wArg08
	selector es_23 = psegArg0A
	word16 si_108 = si_26 + 0x000B
	byte al_109 = al_41 * 0x02
	word16 ax_110 = DPB(ax, al_41 * 0x02, 0)
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8745:
	al_109 = al_109 * 0x02
	byte SCZO_65 = cond(al_109)
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	bool Z_528 = (bool) SCZO_65
	bool C_530 = (bool) SCZO_65
	branch al_109 <u 0x00 l0800_8751
// DataOut: al bl di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8749:
	Mem522[es_23:di_128:byte] = Mem0[ds_19:si_108:byte]
	byte SCZO_527 = cond(al_109 * 0x02)
	si_108 = si_108 + 0x0001
	di_128 = di_128 + 0x0001
	al_109 = al_109 * 0x02
	ax_110 = DPB(ax_110, al_109 * 0x02, 0) (alias)
	Z_528 = (bool) SCZO_527 (alias)
	C_530 = (bool) SCZO_527 (alias)
	branch al_109 * 0x02 >=u 0x00 l0800_8744
// DataOut: al bl di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8751:
	branch Z_528 l0800_873C
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_873C:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + C_530
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	branch al_109 <u 0x00 l0800_8753
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8741:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8744:
	Mem78[es_23:di_128:byte] = Mem0[ds_19:si_108:byte]
	si_108 = si_108 + 0x0001
	di_128 = di_128 + 0x0001
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8753:
	byte al_102 = al_109 * 0x02
	word16 cx_117 = 0x0002
	byte bh_438 = 0x00
	bx_115 = DPB(bx_115, 0x00, 8) (alias)
	word16 ax_103 = DPB(ax_110, al_102, 0)
	bool C_101 = (bool) cond(al_102)
	branch al_102 == 0x00 l0800_879B
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_879B:
	al_102 = Mem0[ds_19:si_108:byte] * 0x02 + (al_102 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_103 = DPB(ax_110, al_102, 0) (alias)
	C_101 = (bool) cond(al_102) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_875C:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_875F:
	branch C_101 l0800_86E6
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86E6:
	byte al_392 = al_102 * 0x02
	word16 ax_393 = DPB(ax_103, al_392, 0)
	bool C_397 = (bool) cond(al_392)
	branch al_392 == 0x00 l0800_86BC
// DataOut: al bh bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86BC:
	al_392 = Mem0[ds_19:si_108:byte] * 0x02 + (al_392 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_393 = DPB(ax_103, al_392, 0) (alias)
	C_397 = (bool) cond(al_392) (alias)
// DataOut: al bh bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86EA:
	al_109 = al_392 * 0x02
	cx_117 = DPB(0x0002, C_397 + 0x04, 0) (alias)
	ax_110 = DPB(ax_393, al_109, 0) (alias)
	bool C_409 = (bool) cond(al_109)
	branch al_109 == 0x00 l0800_86C2
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86C2:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_393, al_109, 0) (alias)
	C_409 = (bool) cond(al_109) (alias)
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86F0:
	branch C_409 l0800_8701
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86F2:
	al_109 = al_109 * 0x02
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	bool C_422 = (bool) cond(al_109)
	branch al_109 == 0x00 l0800_86C8
// DataOut: al bh bl cl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86C8:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	C_422 = (bool) cond(al_109) (alias)
// DataOut: al bh bl cl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86F9:
	byte cl_430 = (byte) (cx_117 - 0x0001) * 0x02 + C_422
	cx_117 = DPB(cx_117 - 0x0001, cl_430, 0) (alias)
	branch cl_430 == 0x09 l0800_86A7
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86A7:
	word16 cx_435 = DPB(cx_117, 0x04, 0)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86A9:
	al_109 = al_109 * 0x02
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	bool C_448 = (bool) cond(al_109)
	branch al_109 == 0x00 l0800_86A1
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86A1:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	C_448 = (bool) cond(al_109) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86AD:
	bh_438 = bh_438 * 0x02 + C_448
	bx_115 = DPB(bx_115, bh_438, 8) (alias)
	cx_435 = cx_435 - 0x0001
	branch cx_435 != 0x0000 l0800_86A9
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B1:
	word16 cx_463 = DPB(cx_435, (bh_438 + 0x03) * 0x02, 0)
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B7:
	branch cx_463 == 0x0000 l0800_86B9
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B9:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B7_1:
	Mem470[es_23:di_128:word16] = Mem0[ds_19:si_108:word16]
	si_108 = si_108 + 0x0002
	di_128 = di_128 + 0x0002
	cx_463 = cx_463 - 0x0001
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8761:
	al_109 = al_102 * 0x02
	ax_110 = DPB(ax_103, al_109, 0) (alias)
	bool C_287 = (bool) cond(al_109)
	branch al_109 == 0x00 l0800_87A0
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87A0:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_103, al_109, 0) (alias)
	C_287 = (bool) cond(al_109) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8765:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8768:
	branch C_287 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_876A:
	al_109 = al_109 * 0x02
	cx_117 = 0x0003
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	bool C_302 = (bool) cond(al_109)
	branch al_109 == 0x00 l0800_87A5
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87A5:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	C_302 = (bool) cond(al_109) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_876F:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8772:
	branch C_302 l0800_8701
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8774:
	byte cl_310 = Mem0[ds_19:si_108:byte]
	si_108 = si_108 + 0x0001
	word16 cx_313 = DPB(0x0003, cl_310, 0)
	branch cl_310 == 0x00 l0800_87B4
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87B4:
	word16 ax_336 = ds_19 + (si_108 >>u 0x04)
	byte al_339 = (byte) ax_110
	di_128 = (di_128 & 0x000F) + 0x8000
	es_23 = es_23 + (di_128 >>u 0x04) - 0x0800
	si_108 = si_108 & 0x000F
	bx_115 = si_108 >>u 0x04
	ds_19 = ax_336
	al_109 = al_339 * 0x02
	ax_110 = DPB(ax_110, al_339 * 0x02, 0) (alias)
	bool C_346 = (bool) cond(al_339 * 0x02)
	branch al_339 * 0x02 != 0x00 l0800_87E3
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87DD:
	al_109 = Mem0[ax_336:si_108 & 0x000F:byte] * 0x02 + (al_339 * 0x02 <u 0x00)
	si_108 = (si_108 & 0x000F) + 0x0001
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	C_346 = (bool) cond(al_109) (alias)
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87E3:
	branch C_346 l0800_87E8
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87E8:
	selector ds_359
	*dsOut = psegLoc0A
	return si
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_867A_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:si si:di ds:<invalid> di:ds es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> dx:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_87E5:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_877B:
	cx_117 = cx_313 + 0x0008
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8701:
	al_109 = al_109 * 0x02
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	bool C_148 = (bool) cond(al_109)
	branch al_109 == 0x00 l0800_86CE
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86CE:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	C_148 = (bool) cond(al_109) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8705:
	branch C_148 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8707:
	byte al_156 = al_109 * 0x02
	word16 ax_157 = DPB(ax_110, al_156, 0)
	bool C_161 = (bool) cond(al_156)
	branch al_156 == 0x00 l0800_86D4
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86D4:
	al_156 = Mem0[ds_19:si_108:byte] * 0x02 + (al_156 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_157 = DPB(ax_110, al_156, 0) (alias)
	C_161 = (bool) cond(al_156) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_870E:
	al_109 = al_156 * 0x02
	ax_110 = DPB(ax_157, al_109, 0) (alias)
	bool C_173 = (bool) cond(al_109)
	branch al_109 == 0x00 l0800_86DA
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86DA:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_157, al_109, 0) (alias)
	C_173 = (bool) cond(al_109) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8714:
	branch C_173 l0800_8784
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8784:
	byte al_216 = al_109 * 0x02
	word16 ax_217 = DPB(ax_110, al_216, 0)
	bool C_221 = (bool) cond(al_216)
	branch al_216 == 0x00 l0800_87AA
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87AA:
	al_216 = Mem0[ds_19:si_108:byte] * 0x02 + (al_216 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_217 = DPB(ax_110, al_216, 0) (alias)
	C_221 = (bool) cond(al_216) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8788:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_878B:
	al_109 = al_216 * 0x02
	bx_115 = DPB(bx_115, C_161 * 0x02 + C_221 | 0x04, 8) (alias)
	ax_110 = DPB(ax_217, al_109, 0) (alias)
	bool C_234 = (bool) cond(al_109)
	branch al_109 == 0x00 l0800_87AF
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87AF:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_217, al_109, 0) (alias)
	C_234 = (bool) cond(al_109) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8794:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8797:
	branch C_234 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8799:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8716:
	bx_115 = DPB(bx_115, C_161, 8) (alias)
	branch C_161 != 0x00 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_871D:
	bx_115 = DPB(bx_115, C_161 + 0x01, 8) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8722:
	al_109 = al_109 * 0x02
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	branch al_109 == 0x00 l0800_86E0
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86E0:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_110, al_109, 0) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8726:
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8728:
	bx_115 = DPB(bx_115, Mem0[ds_19:si_108:byte], 0) (alias)
	__cli()
	word16 si_121 = si_108 + 0x0001
	word16 si_125 = di_128 - 0x0001 - bx_115
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8733:
	branch cx_117 == 0x0000 l0800_8736
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8736:
	__sti()
	si_108 = si_121
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8733_1:
	Mem132[es_23:di_128:byte] = Mem0[ds_19:si_125:byte]
	si_125 = si_125 + 0x0001
	di_128 = di_128 + 0x0001
	cx_117 = cx_117 - 0x0001
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)



byte fn0800_87EF(word16 si, selector ds, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si
// LiveOut: bl si
// Trashed: ah al ax bh bl bx eax ebx esi rax rbx rsi si sil
// Preserved: sp
fn0800_87EF_entry:
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87EF:
	word16 si_4
	byte al_5 = fn0800_87F4(si, ds, out si_4)
// DataOut: bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87F2_thunk_fn0800_87F4:
	word16 si_10
	fn0800_87F4(si_4, ds, out si_10)
	return al_5
// DataOut: bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> ax:<invalid> si:<invalid> al:<invalid>

fn0800_87EF_exit:
// DataOut: bl si
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> ax:<invalid> si:<invalid> al:<invalid>



byte fn0800_87F4(word16 si, selector ds, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si
// LiveOut: al si
// Trashed: ah al ax eax esi rax rsi si sil
// Preserved: ah sp
fn0800_87F4_entry:
// DataOut: bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87F4:
	word16 si_8
	*siOut = si + 0x0002
	return Mem0[si + 0x0001:byte]
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_87F4_exit:
// DataOut: al si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> si:si + 0x0002 al:ah ah:ah



void fn0800_87F8(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: di sp
fn0800_87F8_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_87F8:
	ptr32 es_di_8 = Mem0[ds:0x2E37:segptr32]
	word16 di_13 = (word16) es_di_8
	selector es_10 = SLICE(es_di_8, selector, 16)
	word16 ax_11 = Mem0[ds:0x2E31:word16]
	word16 cx_12 = 0x8000
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8804:
	branch cx_12 == 0x0000 l0800_8806
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8806:
	ptr32 es_di_20 = Mem0[ds:0x2E33:segptr32]
	word16 di_21 = (word16) es_di_20
	selector es_22 = SLICE(es_di_20, selector, 16)
	word16 ax_23 = Mem0[ds:0x2E31:word16]
	word16 cx_24 = 0x8000
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8810:
	branch cx_24 == 0x0000 l0800_8812
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8812:
	ptr32 es_di_32 = Mem0[ds:0x2E3B:segptr32]
	word16 di_33 = (word16) es_di_32
	selector es_34 = SLICE(es_di_32, selector, 16)
	word16 cx_35 = Mem0[ds:0x2E31:word16]
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_881C:
	branch cx_35 == 0x0000 l0800_881E
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_881E:
	ptr32 es_di_46 = Mem0[ds:0x2E3F:segptr32]
	word16 di_47 = (word16) es_di_46
	selector es_48 = SLICE(es_di_46, selector, 16)
	word16 ax_49 = 0x0000
	word16 cx_52 = Mem0[ds:0x2E31:word16]
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8828:
	Mem56[es_48:di_47:word16] = ax_49
	di_47 = di_47 + 0x0002
	ax_49 = ax_49 + 0x0001
	cx_52 = cx_52 - 0x0001
	branch cx_52 != 0x0000 l0800_8828
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_882C:
	Mem62[ds:0x2E2D:word16] = cx_52
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

fn0800_87F8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:di -2(fp):di

l0800_881C_1:
	Mem42[es_34:di_33:word16] = 0x0000
	di_33 = di_33 + 0x0002
	cx_35 = cx_35 - 0x0001
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8810_1:
	Mem28[es_22:di_21:word16] = ax_23
	di_21 = di_21 + 0x0002
	cx_24 = cx_24 - 0x0001
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8804_1:
	Mem16[es_10:di_13:word16] = ax_11
	di_13 = di_13 + 0x0002
	cx_12 = cx_12 - 0x0001
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di



void fn0800_8832(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: di si sp
fn0800_8832_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8832:
	fn0800_889A(ds)
	branch Mem0[ds:0x2E29:word16] <u 0x0002 l0800_8897
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_883E:
	branch Mem0[ds:0x2E65:word16] - Mem0[ds:0x2E6D:word16] <u 0x0003 l0800_8897
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 es:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_884D:
	word16 ax_34 = Mem0[ds:0x2E2D:word16]
	word16 si_32 = Mem0[ds:0x2E29:word16]
	word16 di_33 = Mem0[ds:0x2E2B:word16]
	word16 ax_37 = ax_34 + 0x0001
	branch ax_34 + 0x0001 != Mem0[ds:0x2E31:word16] l0800_8865
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8863:
	ax_37 = 0x0000
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8865:
	Mem42[ds:0x2E2D:word16] = ax_37
	Mem44[ds:0x2E6D:word16] = Mem42[ds:0x2E6D:word16] + 0x0001
	fn0800_889A(ds)
	Mem47[ds:0x2E6D:word16] = Mem44[ds:0x2E6D:word16] - 0x0001
	Mem48[ds:0x2E2D:word16] = ax_34
	branch Mem48[ds:0x2E29:word16] <=u si_32 l0800_888F
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_888F:
	Mem54[ds:0x2E29:word16] = si_32
	Mem55[ds:0x2E2B:word16] = di_33
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_887D:
	Mem52[ds:0x2E29:word16] = 0x0001
	Mem53[ds:0x2E2B:word16] = 0x0000
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8897:
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

fn0800_8832_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> di:di si:si es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si



void fn0800_889A(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: di ds si sp
fn0800_889A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_889A:
	Mem9[ds:0x2E2B:word16] = 0x0000
	Mem11[ds:0x2E29:word16] = 0x0001
	ptr32 es_di_12 = Mem11[ds:0x2E6D:segptr32]
	word16 ax_15 = Mem11[es_di_12:word16]
	Mem17[ds:0x4E90:word16] = ax_15
	word16 di_13 = (word16) es_di_12
	word16 dx_21 = Mem17[ds:0x2E69:word16] - (di_13 + 0x0001)
	selector es_14 = SLICE(es_di_12, selector, 16)
	byte al_16 = (byte) ax_15
	word16 di_18 = di_13 + 0x0001
	bool Z_230 = (bool) cond(dx_21)
	word16 cx_226 = dx_21
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_88BC:
	branch cx_226 == 0x0000 l0800_88BE
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88BC_1:
	Z_230 = (bool) cond(al_16 - Mem17[es_14:di_236:byte]) (alias)
	di_18 = di_236 + 0x0001
	cx_226 = cx_226 - 0x0001
	word16 di_236 = di_18
	branch al_16 != Mem17[es_14:di_236:byte] l0800_88BC
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88BE:
	branch Z_230 l0800_88C1
// DataOut: bp cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88C0:
	cx_226 = cx_226 - 0x0001
// DataOut: bp cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88C1:
	Mem51[ds:0x4E94:word16] = Mem17[ds:0x2E69:word16] - (word16) Mem17[ds:0x2E6D:segptr32]
	word16 dx_46 = dx_21 - cx_226
	word16 ax_123 = Mem51[Mem51[ds:0x2E39:selector]:Mem51[ds:0x4E90:word16] << 0x0001:word16]
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88DC:
	branch ax_123 != Mem51[ds:0x2E31:word16] l0800_88E5
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88E5:
	word16 di_91 = ax_123 << 0x0001
	Mem95[ds:0x4E92:word16] = Mem51[Mem51[ds:0x2E41:selector]:di_91:word16]
	word16 bx_224 = Mem95[ds:0x2E2D:word16]
	branch bx_224 >u ax_123 l0800_8903
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88FC:
	bx_224 = bx_224 + Mem95[ds:0x2E31:word16]
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8903:
	ptr32 es_si_101 = Mem95[ds:0x2E6D:segptr32]
	word16 bx_100 = bx_224 - ax_123
	branch Mem95[ds:0x4E90:word16] != Mem95[SLICE(es_si_101, selector, 16):(word16) es_si_101 - bx_100:word16] l0800_897E
// DataOut: bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8914:
	word16 cx_126 = Mem95[Mem95[ds:0x2E3D:selector]:di_91:word16]
	branch cx_126 <=u bx_100 l0800_892D
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_892D:
	branch cx_126 <=u dx_46 l0800_893A
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8931:
	bx_100 = bx_100 - (cx_126 - dx_46)
	cx_126 = dx_46
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_893A:
	branch cx_126 != dx_46 l0800_8963
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_893E:
	ptr32 es_di_160 = Mem95[ds:0x2E6D:segptr32]
	word16 di_163 = (word16) es_di_160 + cx_126
	word16 ax_169 = Mem95[ds:0x4E94:word16] - cx_126
	selector es_162 = SLICE(es_di_160, selector, 16)
	word16 si_166 = di_163 - bx_100
	bool Z_173 = (bool) cond(ax_169)
	word16 cx_176 = ax_169
	selector ds_179 = Mem95[ds:0x2E6F:selector]
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8957:
	branch cx_176 == 0x0000 l0800_8959
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 6 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8957_1:
	Z_173 = (bool) cond(Mem95[ds_179:si_238:byte] - Mem95[es_162:di_237:byte]) (alias)
	si_166 = si_238 + 0x0001
	di_163 = di_237 + 0x0001
	cx_176 = cx_176 - 0x0001
	word16 di_237 = di_163
	word16 si_238 = si_166
	branch Mem95[ds_179:si_238:byte] != Mem95[es_162:di_237:byte] l0800_8957
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 6 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8959:
	branch Z_173 l0800_895C
// DataOut: ax bp bx cx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_895B:
	cx_176 = cx_176 + 0x0001
// DataOut: ax bp bx cx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_895C:
	cx_126 = dx_46 + (ax_169 - cx_176)
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8922:
	bx_100 = 0x0001
	cx_126 = dx_46
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8963:
	branch cx_126 <=u Mem95[ds:0x2E2F:word16] l0800_896D
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8969:
	cx_126 = Mem95[ds:0x2E2F:word16]
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_896D:
	branch cx_126 <u Mem95[ds:0x2E29:word16] l0800_897E
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8973:
	Mem149[ds:0x2E29:word16] = cx_126
	Mem150[ds:0x2E2B:word16] = bx_100
// DataOut: bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_897E:
	ax_123 = Mem95[ds:0x4E92:word16]
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88E2:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8984:
	branch Mem51[ds:0x2E29:word16] != 0x0002 l0800_89A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_898B:
	branch Mem51[ds:0x2E2B:word16] <=u 0x0100 l0800_89A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8996:
	Mem88[ds:0x2E29:word16] = 0x0001
	Mem89[ds:0x2E2B:word16] = 0x0000
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_89A5:
	return
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si

fn0800_889A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid> ax:<invalid> di:di dx:<invalid> cx:<invalid> es:<invalid> si:si bx:<invalid> Sequence es:si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si



void fn0800_89A8(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di sp
// Stack args: Stack +0002(16)
fn0800_89A8_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_89A8:
	word16 dx_11 = Mem0[ds:0x2E31:word16]
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_89B1:
	word16 di_27 = Mem0[ds:0x2E2D:word16]
	selector es_29 = Mem0[ds:0x2E41:selector]
	word16 ax_30 = Mem0[es_29:di_27 << 0x0001:word16]
	Mem32[es_29:di_27 << 0x0001:word16] = dx_11
	branch Mem32[ds:0x2E2D:word16] == ax_30 l0800_89EA
// DataOut: ax ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_89C7:
	ptr32 es_di_164 = Mem32[ds:0x2E6D:segptr32]
	word16 di_168 = Mem32[SLICE(es_di_164, selector, 16):(word16) es_di_164 - dx_11:word16]
	Mem172[Mem32[ds:0x2E39:selector]:di_168 << 0x0001:word16] = ax_30
	branch ax_30 != dx_11 l0800_89EA
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_89E0:
	Mem176[Mem172[ds:0x2E35:selector]:di_168 << 0x0001:word16] = dx_11
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_89EA:
	word16 di_38 = Mem32[Mem32[ds:0x2E6D:segptr32]:word16]
	word16 ax_40 = Mem32[ds:0x2E2D:word16]
	selector es_42 = Mem32[ds:0x2E39:selector]
	branch Mem32[es_42:di_38 << 0x0001:word16] != dx_11 l0800_8A08
// DataOut: ax di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A08:
	Mem163[Mem32[ds:0x2E41:selector]:Mem32[Mem32[ds:0x2E35:selector]:di_38 << 0x0001:word16] << 0x0001:word16] = ax_40
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_89FF:
	Mem156[es_42:di_38 << 0x0001:word16] = ax_40
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A18:
	Mem47[Mem32[ds:0x2E35:selector]:di_38 << 0x0001:word16] = ax_40
	ptr32 es_di_48 = Mem47[ds:0x2E6D:segptr32]
	word16 di_49 = (word16) es_di_48
	word16 bx_56 = Mem47[ds:0x2E69:word16] - (di_49 + 0x0001)
	selector es_50 = SLICE(es_di_48, selector, 16)
	byte al_51 = Mem47[es_di_48:byte]
	word16 di_153 = di_49 + 0x0001
	bool Z_149 = (bool) cond(bx_56)
	word16 cx_146 = bx_56
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A2F:
	branch cx_146 == 0x0000 l0800_8A31
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A2F_1:
	Z_149 = (bool) cond(al_51 - Mem47[es_50:di_177:byte]) (alias)
	di_153 = di_177 + 0x0001
	cx_146 = cx_146 - 0x0001
	word16 di_177 = di_153
	branch al_51 != Mem47[es_50:di_177:byte] l0800_8A2F
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A31:
	branch Z_149 l0800_8A34
// DataOut: bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A33:
	cx_146 = cx_146 - 0x0001
// DataOut: bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A34:
	word16 bx_110 = bx_56 - cx_146
	Mem86[Mem47[ds:0x2E3D:selector]:Mem47[ds:0x2E2D:word16] << 0x0001:word16] = bx_110
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A86:
	word16 ax_95 = Mem86[ds:0x2E2D:word16]
	word16 ax_101 = ax_95 + 0x0001
	branch ax_95 + 0x0001 != dx_11 l0800_8A90
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A8E:
	ax_101 = 0x0000
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A90:
	Mem103[ds:0x2E2D:word16] = ax_101
	Mem105[ds:0x2E6D:word16] = Mem103[ds:0x2E6D:word16] + 0x0001
	word16 v20_106 = wArg02 - 0x0001
	wArg02 = v20_106
	branch v20_106 == 0x0000 l0800_8AA8
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8AA8:
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>

fn0800_89A8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> di:di es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>

l0800_8A9C:
	bx_110 = bx_110 - 0x0001
	branch bx_110 >u 0x0001 l0800_8A46
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A46:
	word16 di_113 = Mem105[ds:0x2E2D:word16]
	Mem116[Mem105[ds:0x2E3D:selector]:di_113 << 0x0001:word16] = bx_110
	selector es_117 = Mem116[ds:0x2E41:selector]
	word16 v22_119 = Mem116[es_117:di_113 << 0x0001:word16]
	Mem120[es_117:di_113 << 0x0001:word16] = Mem116[ds:0x2E2D:word16]
	branch Mem120[ds:0x2E2D:word16] == v22_119 l0800_8A86
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A63:
	ptr32 es_di_125 = Mem120[ds:0x2E6D:segptr32]
	word16 di_129 = Mem120[SLICE(es_di_125, selector, 16):(word16) es_di_125 - dx_11:word16]
	Mem133[Mem120[ds:0x2E39:selector]:di_129 << 0x0001:word16] = v22_119
	branch v22_119 != dx_11 l0800_8A86
// DataOut: bx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A7C:
	Mem137[Mem133[ds:0x2E35:selector]:di_129 << 0x0001:word16] = dx_11
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8AA5:
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)



void fn0800_8ACF(byte al, word16 cx, selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al cx ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx dh dl ds dx eax ebx edx es rax rbx rdx
// Preserved: bp ds sp
// Stack args: Stack +0006(32)
fn0800_8ACF_entry:
// DataOut: al cx ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(32)

l0800_8ACF:
	msdos_unknown_2143()
	word16 ax_12 = DPB(ax, 0x00, 0)
	branch false l0800_8AE9
// DataOut: ax cx ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(32)

l0800_8AE9:
	fn0800_8D64(ds, ax_12)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x43 al:0x00 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8ADF:
	Mem35[ptrArg06:word16] = cx
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x43 al:0x00 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8AED:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_8ACF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_8B0D(byte al, word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp ds ss
// LiveOut: dl ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_8B0D_entry:
	*dsOut = ds
// DataOut: al bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_8B0D:
	word16 sp_114 = fp - 4
	word16 si_11 = wArg06
	branch wArg06 != 0x0000 l0800_8B36
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B18:
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B28:
	branch Mem0[ds:0x224E:word16] != 0x0000 l0800_8B1A
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B1A:
	Mem128[ds:0x224E:word16] = Mem0[ds:0x224E:word16] - 0x0001
	word16 sp_132
	word16 bp_133
	selector ss_134
	word16 si_135
	byte SZO_136
	bool C_137
	bool Z_138
	byte SCZO_139
	word16 cx_141
	word16 bx_142
	byte dl_144
	call SEQ(0x0800, Mem128[ds:(Mem128[ds:0x224E:word16] << 0x0001) + 0x4E96:word16]) (retsize: 2; depth: 2)
		uses: al_102,bp_110,bx_130,C_105,cx_108,dl_101,ds_104,SCZO_131,si_109,sp_111,ss_107,SZO_106,wLoc02_4,wLoc04_8,Z_113
		defs: al_143,bp_133,bx_142,C_137,cx_141,dl_144,ds_140,SCZO_139,si_135,sp_132,ss_134,SZO_136,Z_138
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B2F:
	fn0800_0150(al)
	word16 bp_115
	byte SZO_118
	bool C_119
	bool Z_120
	byte SCZO_121
	word16 cx_123
	word16 bx_124
	byte al_125
	byte dl_126
	call SEQ(0x0800, Mem0[ds:0x2352:word16]) (retsize: 2; depth: 2)
		uses: al_102,bp_110,bx_103,C_105,cx_108,dl_101,ds_104,SCZO_112,si_109,sp_111,ss_107,SZO_106,wLoc02_4,wLoc04_8,Z_113
		defs: al_125,bp_115,bx_124,C_119,cx_123,dl_126,ds_122,SCZO_121,si_117,sp_114,ss_116,SZO_118,Z_120
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B36:
	byte dl_28
	byte al_29 = fn0800_01B9(ds, out dl_28)
	fn0800_0163()
	branch wArg04 != 0x0000 l0800_8B55
// DataOut: al di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> bx:<invalid> ah:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16)

l0800_8B42:
	branch si_11 != 0x0000 l0800_8B4E
// DataOut: al di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16)

l0800_8B46:
	word16 sp_73
	word16 bp_74
	selector ss_75
	word16 si_76
	byte SZO_77
	bool C_78
	bool Z_79
	byte SCZO_80
	selector ds_81
	word16 cx_82
	word16 bx_83
	byte al_84
	byte dl_85
	call SEQ(0x0800, Mem0[ds:0x2354:word16]) (retsize: 2; depth: 2)
		uses: al_29,bp_26,bx_19,C_53,cx_24,dl_28,ds_20,SCZO_31,si_50,sp_27,ss_23,SZO_51,wLoc02_4,wLoc04_8,Z_52
		defs: al_84,bp_74,bx_83,C_78,cx_82,dl_85,ds_81,SCZO_80,si_76,sp_73,ss_75,SZO_77,Z_79
	word16 bp_87
	word16 si_89
	byte SZO_90
	bool C_91
	bool Z_92
	byte SCZO_93
	selector ds_94
	word16 cx_95
	word16 bx_96
	call SEQ(0x0800, Mem0[ds_81:0x2356:word16]) (retsize: 2; depth: 2)
		uses: al_84,bp_74,bx_83,C_78,cx_82,dl_85,ds_81,SCZO_80,si_76,sp_73,ss_75,SZO_77,wLoc02_4,wLoc04_8,Z_79
		defs: al_97,bp_87,bx_96,C_91,cx_95,dl_98,ds_94,SCZO_93,si_89,sp_86,ss_88,SZO_90,Z_92
// DataOut: al di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16)

l0800_8B4E:
	Mem69[ss:sp_114 - 2:word16] = wArg02
	fn0800_0164(al_29, bArg00)
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// Terminates process

l0800_8B55:
	return dl_28
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp

fn0800_8B0D_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:0x2506 ds:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp



byte fn0800_8B5A(selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_8B5A_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8B5A:
	selector ds_19
	return fn0800_8B0D(0x00, fp - 2, ds, wArg02, 0x0000, 0x0000, out ds_19)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8B5A_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp



void fn0800_8B69(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_8B69_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8B69:
	selector ds_20
	fn0800_8B0D(0x00, fp - 2, ds, wArg02, 0x0000, 0x0001, out ds_20)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8B69_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0x0001 -2(fp):bp



void fn0800_8B95(byte al, byte dl, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al dl
// LiveOut:
// Trashed: ah ax bh bl bx dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_8B95_entry:
// DataOut: al dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8B95:
	byte dh_7
	word16 cx_8
	word16 dx_11 = DPB(dx, msdos_get_system_date(out dh_7, out cx_8), 0)
	Mem16[ptrArg02:word16] = cx_8
	Mem17[ptrArg02 + 0x0002:word16] = dx_11
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8B95_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2A dl:<invalid> Sequence es:bx:<invalid> -2(fp):bp



void fn0800_8BA8(byte al, byte cl, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al cl
// LiveOut:
// Trashed: ah ax bh bl bx cl cx eax ebx ecx es rax rbx rcx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_8BA8_entry:
// DataOut: al cl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8BA8:
	byte ch_7
	byte dh_8
	byte dl_9
	Mem17[ptrArg02:word16] = DPB(cx, msdos_get_system_time(out ch_7, out dh_8, out dl_9), 0)
	Mem19[ptrArg02 + 0x0002:word16] = dx
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8BA8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2C cl:<invalid> Sequence es:bx:<invalid> -2(fp):bp



word16 fn0800_8BBB(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BBB_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BBB:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BC0_thunk_fn0800_8BD8:
	word16 dx_16
	word16 bp_17
	word16 si_18
	word16 di_19
	return fn0800_8BD8(0x0000, bp, si, di, out dx_16, out bp_17, out si_18, out di_19)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8BBB_exit:
// DataOut: ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BC2(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BC2_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BC2:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BC8_thunk_fn0800_8BD8:
	word16 dx_14
	word16 bp_15
	word16 si_16
	word16 di_17
	return fn0800_8BD8(0x0001, bp, si, di, out dx_14, out bp_15, out si_16, out di_17)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:0x0001 -2(fp):<invalid> 0(fp):cs

fn0800_8BC2_exit:
// DataOut: ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BCA(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: al ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BCA_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BCA:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BD0_thunk_fn0800_8BD8:
	word16 dx_14
	word16 bp_15
	word16 si_16
	word16 di_17
	return fn0800_8BD8(0x0002, bp, si, di, out dx_14, out bp_15, out si_16, out di_17)
// DataOut: al ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:0x0002 -2(fp):<invalid> 0(fp):cs

fn0800_8BCA_exit:
// DataOut: al ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BD8(word16 cx, word16 bp, word16 si, word16 di, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp cx di si ss
// LiveOut: al ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BD8_entry:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l0800_8BD8:
	Mem4[ss:v3 - 2:word16] = bp
	Mem8[ss:v3 - 4:word16] = si
	Mem11[ss:v3 - 6:word16] = di
	word16 cx_21 = Mem11[ss:v3 + 0x000A:word16]
	word16 di_14 = cx
	word16 ax_100 = Mem11[ss:v3 + 0x0004:word16]
	word16 dx_17 = Mem11[ss:v3 + 0x0006:word16]
	word16 bx_19 = Mem11[ss:v3 + 0x0008:word16]
	word16 cx_158 = cx_21
	branch cx_21 != 0x0000 l0800_8BF7
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BEF:
	word32 dx_ax_181 = SEQ(dx_17, ax_100)
	branch dx_17 == 0x0000 l0800_8C5C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:v3 - 6 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BF3:
	branch bx_19 == 0x0000 l0800_8C5C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:v3 - 6 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C5C:
	word16 dx_188 = (uint16) (dx_ax_181 % bx_19)
	ax_100 = (uint16) (dx_ax_181 /u bx_19)
	branch (cx & 0x0002) == 0x0000 l0800_8C65
// DataOut: al ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:v3 - 6 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C64:
	ax_100 = dx_188
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:v3 - 6 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C65:
	word16 dx_195
	*dxOut = 0x0000
// DataOut: al ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:v3 - 6 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BF7:
	word16 bx_163 = bx_19
	word16 dx_116 = dx_17
	branch (cx & 0x0001) != 0x0000 l0800_8C19
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:v3 - 6 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BFD:
	dx_116 = dx_17
	branch dx_17 >= 0x0000 l0800_8C0B
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:v3 - 6 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C01:
	ax_100 = -ax_100
	dx_116 = -dx_17 - (ax_100 == 0x0000)
	di_14 = cx | 0x000C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:v3 - 6 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C0B:
	cx_158 = cx_21
	branch cx_21 >= 0x0000 l0800_8C19
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:v3 - 6 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C0F:
	bx_163 = -bx_19
	cx_158 = -cx_21 - (bx_163 == 0x0000)
	di_14 = di_14 ^ 0x0004
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:v3 - 6 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C19:
	Mem69[ss:v3 - 8:word16] = di_14
	ui32 bp_bx_66 = SEQ(cx_158, bx_163)
	word16 cx_107 = 0x0020
	word16 di_104 = 0x0000
	word16 si_105 = 0x0000
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:v3 - 6 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C23:
	ax_100 = ax_100 << 0x0001
	dx_116 = __rcl(dx_116, 0x01, (bool) cond(ax_100))
	*dxOut = dx_116
	si_105 = __rcl(si_105, 0x01, (dx_116 & 0x8000) != 0x0000)
	di_104 = __rcl(di_104, 0x01, (si_105 & 0x8000) != 0x0000)
	branch di_104 <u cx_158 l0800_8C3A
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:v3 - 8 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C2F:
	branch di_104 >u cx_158 l0800_8C35
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 8 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C31:
	branch si_105 <u bx_163 l0800_8C3A
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 8 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C35:
	ui32 di_si_139 = SEQ(di_104, si_105 - bx_163) - bp_bx_66
	di_104 = SLICE(di_si_139, word16, 16) (alias)
	si_105 = (word16) di_si_139 (alias)
	ax_100 = ax_100 + 0x0001
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 8 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C3A:
	cx_107 = cx_107 - 0x0001
	branch cx_107 != 0x0000 l0800_8C23
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 8 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C3C:
	word16 bx_108 = Mem69[ss:v3 - 8:word16]
	branch (bx_108 & 0x0002) == 0x0000 l0800_8C49
// DataOut: al ax bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 8 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C43:
	ax_100 = si_105
	*dxOut = di_104
	bx_108 = bx_108 >>u 0x0001
// DataOut: al ax bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C49:
	branch (bx_108 & 0x0004) == 0x0000 l0800_8C56
// DataOut: al ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C4F:
	ax_100 = -ax_100
	word16 dx_126
	*dxOut = -dx_116 - (ax_100 == 0x0000)
// DataOut: al ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C56:
	word16 di_38
	*diOut = Mem11[ss:v3 - 6:word16]
	word16 si_40
	*siOut = Mem11[ss:v3 - 4:word16]
	word16 bp_43
	*bpOut = Mem11[ss:v3 - 2:word16]
	return ax_100
// DataOut: al ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 6 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

fn0800_8BD8_exit:
// DataOut: al ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:v3 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>



word16 fn0800_8C69(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8C69_entry:
// DataOut: ax bp cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8C69:
	branch cl >=u 0x10 l0800_8C81
// DataOut: ax bp cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8C81:
	word16 dx_37
	*dxOut = ax << cl - 0x10
	return 0x0000
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8C71:
	word16 dx_29
	*dxOut = dx << cl | ax >>u -cl + 0x10
	return ax << cl
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8C69_exit:
// DataOut: ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bx:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8C8A(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: al ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8C8A_entry:
// DataOut: ax bp cl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8C8A:
	branch cl >=u 0x10 l0800_8CA2
// DataOut: ax bp cl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CA2:
	int32 dx_ax_37 = (int32) dx
	word16 dx_38
	*dxOut = SLICE(dx_ax_37, word16, 16)
	return (word16) dx_ax_37 >> cl - 0x10
// DataOut: al ax bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8C92:
	word16 dx_26
	*dxOut = dx >> cl
	return ax >>u cl | dx << -cl + 0x10
// DataOut: al ax bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8C8A_exit:
// DataOut: al ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bx:<invalid> ax:<invalid> dx:dx >> cl cl:<invalid> Sequence dx:ax:(int32) dx -2(fp):<invalid> 0(fp):cs



word16 fn0800_8CAA(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8CAA_entry:
// DataOut: ax bp cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8CAA:
	branch cl >=u 0x10 l0800_8CC2
// DataOut: ax bp cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CC2:
	word16 dx_36
	*dxOut = 0x0000
	return dx >>u cl - 0x10
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8CB2:
	word16 dx_25
	*dxOut = dx >>u cl
	return ax >>u cl | dx << -cl + 0x10
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8CAA_exit:
// DataOut: ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bx:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8CCB(word16 ax, word16 cx, word16 dx, word16 bx, selector psegArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx dh dl dx
// LiveOut: al ax dx sp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8CCB_entry:
// DataOut: ax bx cx dh di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8CCB:
	byte cl_15 = (byte) cx
	branch cx >= 0x0000 l0800_8CDE
// DataOut: ax bx cl cx dh di dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CDE:
	word16 ax_73 = ax + bx
	byte al_74 = (byte) ax_73
	branch ax_73 >=u 0x0000 l0800_8CE6
// DataOut: al ax cl dh di dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 es:<invalid> cx:cx -2(fp):<invalid> 0(fp):cs

l0800_8CE2:
	dx = dx + 0x1000
	dh = SLICE(dx + 0x1000, byte, 8) (alias)
// DataOut: al ax cl dh di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 es:<invalid> cx:cx ax:ax + bx -2(fp):<invalid> 0(fp):cs

l0800_8CE6:
	word16 dx_88
	*dxOut = DPB(dx, dh + (cl_15 << 0x04), 8) + (ax_73 >>u 0x04)
	return DPB(ax_73 >>u 0x04, al_74, 0) & 0x000F
// DataOut: al ax di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 es:<invalid> cx:cx ax:ax + bx dx:dx + 0x1000 -2(fp):<invalid> 0(fp):cs

l0800_8CD2:
	word16 bx_41 = (word16) (SEQ(~cx, ~bx + 0x0001) + 0x00000001)
// DataOut: ax bl bx cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 es:<invalid> cx:cx -2(fp):<invalid> 0(fp):cs

l0800_8D0D:
	word16 ax_47 = ax - bx_41
	byte al_48 = (byte) ax_47
	branch ax_47 >=u 0x0000 l0800_8D15
// DataOut: al ax bl cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 es:<invalid> cx:<invalid> bx:~bx + 0x0001 -2(fp):<invalid> 0(fp):cs

l0800_8D11:
	dx = dx - 0x1000
// DataOut: al ax bl cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 es:<invalid> cx:<invalid> bx:~bx + 0x0001 ax:ax - (~bx + 0x0001) -2(fp):<invalid> 0(fp):cs

l0800_8D15:
	word16 dx_62
	*dxOut = dx - DPB(bx_41, 0x00, 0) + (ax_47 >>u 0x04)
	return DPB(ax_47 >>u 0x04, al_48, 0) & 0x000F
// DataOut: al ax di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 es:<invalid> cx:<invalid> bx:~bx + 0x0001 ax:ax - (~bx + 0x0001) dx:dx - 0x1000 -2(fp):<invalid> 0(fp):cs

fn0800_8CCB_exit:
// DataOut: al ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 es:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> ch:al cl:0x04 dh:<invalid> al:<invalid> bx:<invalid> bh:0x40 bl:0x00 -2(fp):<invalid> 0(fp):cs



word16 fn0800_8D2B(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al ax
// Trashed: SCZO ah al ax eax rax
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_8D2B_entry:
// DataOut: di dl ds sil ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8D2B:
	word16 si_17
	word16 si_11 = wArg02
	branch wArg02 < 0x0000 l0800_8D4B
// DataOut: di dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D4B:
	si_17 = -wArg02
	branch si_17 > 0x0023 l0800_8D3B
// DataOut: di dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D52:
	Mem41[ds:0x2516:word16] = 0xFFFF
// DataOut: di dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D36:
	branch wArg02 <= 0x0058 l0800_8D3E
// DataOut: di dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D3B:
	si_11 = 0x0057
// DataOut: di dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D3E:
	Mem29[ds:0x2516:word16] = si_11
	si_17 = (int16) Mem29[ds:si_11 + 0x2518:byte]
// DataOut: di dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D58:
	Mem18[ds:0x007F:word16] = si_17
	return 0xFFFF
// DataOut: al ax di dl ds sil ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> -4(fp):si -2(fp):bp

fn0800_8D2B_exit:
// DataOut: al ax
// DataOut (flags): DP
// SymbolicIn: sp:fp bp:bp si:si al:0xFF ax:0xFFFF -4(fp):si -2(fp):bp



void fn0800_8D64(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_8D64_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8D64:
	fn0800_8D2B(ds, wArg02)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8D64_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



void fn0800_8D76(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_8D76_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8D76:
	word16 dx_9
	msdos_ioctl_get_device_info(wArg02, out dx_9)
	return
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8D76_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:0x0000 bx:<invalid> dx:0x4400 -2(fp):bp



void fn0800_8D87(byte bArg02, byte bArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di es si sp
// Stack args: Stack +0002(8) Stack +0004(8) Stack +0006(16) Stack +0008(32) Stack +000C(16) Stack +000E(16)
fn0800_8D87_entry:
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(8) Stack +0006(16) Stack +0008(32) Stack +000C(16) Stack +000E(16)

l0800_8D87:
	word16 di_120 = (word16) ptrArg08
	selector es_19 = SLICE(ptrArg08, selector, 16)
	byte bl_22 = (byte) wArg06
	branch wArg06 >u 0x0024 l0800_8DF7
// DataOut: bl bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8) Stack +0004(8) Stack +000C(16) Stack +000E(16)

l0800_8D9B:
	branch bl_22 <u 0x02 l0800_8DF7
// DataOut: bl bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8) Stack +0004(8) Stack +000C(16) Stack +000E(16)

l0800_8DA0:
	word16 ax_103 = wArg0C
	word16 cx_147 = wArg0E
	branch wArg0E >= 0x0000 l0800_8DBC
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8) Stack +0004(8)

l0800_8DAA:
	branch bArg04 == 0x00 l0800_8DBC
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DB0:
	Mem175[ptrArg08:byte] = 0x2D
	ax_103 = -wArg0C
	di_120 = di_120 + 0x0001
	cx_147 = -wArg0E - (ax_103 == 0x0000)
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DBC:
	word16 si_104 = fp - 0x0024
	branch cx_147 == 0x0000 l0800_8DD1
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DC1:
	word32 dx_ax_154 = (uint32) (uint16) cx_147
	word32 dx_ax_160 = SEQ((uint16) (dx_ax_154 % wArg06), ax_103)
	Mem169[ss:si_104:byte] = (byte) (uint16) (dx_ax_160 % wArg06)
	word16 ax_157 = (uint16) (dx_ax_154 /u wArg06)
	cx_147 = ax_157
	ax_103 = (uint16) (dx_ax_160 /u wArg06)
	si_104 = si_104 + 0x0001
	branch ax_157 == 0x0000 l0800_8DD9
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> di:di + 0x0001 dx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DD9:
	branch ax_103 != 0x0000 l0800_8DD1
// DataOut: ax bl bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DD1:
	word32 dx_ax_87 = (uint32) (uint16) ax_103
	Mem95[ss:si_104:byte] = (byte) (uint16) (dx_ax_87 % wArg06)
	ax_103 = (uint16) (dx_ax_87 /u wArg06)
	si_104 = si_104 + 0x0001
// DataOut: ax bl bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> di:di + 0x0001 dx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DDD:
	word16 cx_113 = 0x0024 - fp + si_104
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DE5:
	byte al_132
	si_104 = si_104 - 0x0001
	byte al_124 = Mem0[ss:si_104:byte]
	branch al_124 >=u 0x0A l0800_8DF1
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:<invalid> al:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DF1:
	al_132 = al_124 - 0x0A + bArg02
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DED:
	al_132 = al_124 + 0x30
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DF4:
	Mem134[es_19:di_120:byte] = al_132
	di_120 = di_120 + 0x0001
	cx_113 = cx_113 - 0x0001
	branch cx_113 != 0x0000 l0800_8DE5
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DF7:
	Mem45[es_19:di_120:byte] = 0x00
	return
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp

fn0800_8D87_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> bx:<invalid> al:<invalid> es:es dx:<invalid> ax:<invalid> di:di si:si cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp

l0800_8DCF:
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)



void fn0800_8E09(word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_8E09_entry:
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_8E09:
	fn0800_8D87(0x61, 0x00, 0x000A, DPB(ptrLoc0A, wArg02, 0), wArg04, wArg06, 0x0000)
	return
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8E09_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> al:<invalid> es:<invalid> di:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x000A -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_8E29(byte al, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)
fn0800_8E29_entry:
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_8E29:
	Mem12[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	word16 ax_18 = DPB(ax, bArg08, 0)
	word16 dx_23
	*dxOut = wArg04
	branch msdos_set_file_position(wArg02, SEQ(wArg06, wArg04), bArg08, SEQ(wArg04, ax_18)) l0800_8E4B
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E4B:
	fn0800_8D2B(ds, ax_18)
	word16 dx_44
	*dxOut = 0x0000
	ax_18 = 0xFFFF (alias)
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -2(fp):bp

l0800_8E49:
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -2(fp):bp

l0800_8E50:
	return ax_18
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ax:0xFFFF -4(fp):ax -2(fp):bp

fn0800_8E29_exit:
// DataOut: al ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ax:0xFFFF -4(fp):ax -2(fp):bp



word16 fn0800_8E52(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: ax
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
fn0800_8E52_entry:
// DataOut: al ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E52:
	word16 ax_20
	__syscall(0x21)
	word16 ax_11 = DPB(ax, 0x39, 8)
	branch C l0800_8E64
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E64:
	ax_20 = fn0800_8D2B(ds, ax_11)
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x39 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8E60:
	ax_20 = 0x0000
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x39 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8E68:
	return ax_20
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8E52_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



byte fn0800_8E6A(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: al di ds dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_8E6A_entry:
	*diOut = di
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_8E6A:
	branch (wArg08 | wArg0A) != 0x0000 l0800_8E7D
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E75:
	wArg0A = ds
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E7D:
	word16 ax_27
	word16 dx_26
	branch (wArg04 | wArg06) != 0x0000 l0800_8E8F
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0004(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E8F:
	dx_26 = wArg06
	ax_27 = wArg04
// DataOut: ax dx sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0004(16) Stack +000A(16)

l0800_8E88:
	dx_26 = ds
	ax_27 = 0x2572
// DataOut: ax dx sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0004(16) Stack +000A(16)

l0800_8E95:
	word16 dx_38
	selector ds_39
	word16 ax_40 = fn0800_9CE6(0x4ED6, wArg0A, ax_27, dx_26, out dx_38, out ds_39)
	fn0800_8E09(ax_40, dx_38, wArg02)
	fn0800_BF5F(DPB(ptrLoc0A, 0x4ED6, 0), DPB(ptrLoc06, 0x2576, 0))
	word16 dx_65
	*dxOut = wArg0A
	return 0xD6
// DataOut: al di ds dx sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds

fn0800_8E6A_exit:
// DataOut: al di ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:0x4ED6 dx:ds cx:<invalid> al:0xD6 es:<invalid> di:<invalid> bx:<invalid> ds:<invalid> -12(fp):0x4ED6 -10(fp):0x4ED6 -8(fp):ds -6(fp):0x2576 -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds



word16 fn0800_8F18(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx dx
// LiveOut: ax dx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: si sp
fn0800_8F18_entry:
// DataOut: ax bp bx cx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F18:
	word16 ax_11 = dx
	branch dx == 0x0000 l0800_8F21
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8F1F:
	ax_11 = (word16) (bx *u dx) (alias)
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ax:dx si:si dx:si -2(fp):si

l0800_8F21:
	branch cx == 0x0000 l0800_8F28
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ax:dx si:si dx:si Sequence dx:ax:bx *u si -2(fp):si

l0800_8F23:
	ax_11 = (word16) (ax *u cx) + ax_11
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ax:dx si:si dx:si Sequence dx:ax:bx *u si -2(fp):si

l0800_8F28:
	word32 dx_ax_28 = bx *u ax
	word16 dx_31
	*dxOut = SLICE(dx_ax_28, word16, 16) + ax_11
	return (word16) dx_ax_28
// DataOut: ax bp di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ax:<invalid> si:si dx:si Sequence dx:ax:<invalid> cx:si -2(fp):si

fn0800_8F18_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp ax:si si:si dx:<invalid> Sequence dx:ax:bx *u si cx:si -2(fp):si



byte fn0800_8F2F(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ax bl bx cl cx dx
// LiveOut: CZ dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: sp
fn0800_8F2F_entry:
// DataOut: al ax bl bx cl cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F2F:
	word16 dx_11 = dx + (ax >>u 0x04)
	word16 cx_21 = cx + (bx >>u 0x04)
	byte dl_12
	*dlOut = (byte) dx_11
	word16 ax_16 = DPB(ax >>u 0x04, bl, 8)
	word16 bx_23 = DPB(bx >>u 0x04, bl, 0)
	byte CZ_33 = cond(dx_11 - cx_21)
	branch dx_11 != cx_21 l0800_8F4F
// DataOut: ax bx dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp

l0800_8F4D:
	CZ_33 = cond((ax_16 & 0x000F) - (bx_23 & 0x000F)) (alias)
// DataOut: dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx

l0800_8F4F:
	return CZ_33
// DataOut: dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx

fn0800_8F2F_exit:
// DataOut: dl
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx



word16 fn0800_8F50(byte al, selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32) Stack +0008(16)
fn0800_8F50_entry:
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_8F50:
	word16 wLoc04_30
	word16 ax_20
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0002) == 0x0000 l0800_8F66
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_8F66:
	branch msdos_read_file(wArg02, wArg08, ptrArg04, out ax_20) l0800_8F79
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_8F79:
	wLoc04_30 = ax_20
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_8F77:
// DataOut: ax di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F60:
	wLoc04_30 = 0x0005
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_8F7A:
	ax_20 = fn0800_8D2B(ds, wLoc04_30)
// DataOut: ax di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 bx:<invalid> ax:0x0005 ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):<invalid> -2(fp):bp

l0800_8F7D:
	return ax_20
// DataOut: ax di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 bx:<invalid> ax:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8F50_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp



byte fn0800_8F7F(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: dl
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(32)
fn0800_8F7F_entry:
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8F7F:
	word16 ax_11 = DPB(ax, 0x41, 8)
	byte dl_16 = (byte) ptrArg02
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), (word16) ptrArg02) l0800_8F91
// DataOut: ax di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F91:
	fn0800_8D2B(ds, ax_11)
// DataOut: di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F8D:
// DataOut: di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F95:
	return dl_16
// DataOut: di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8F7F_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



byte fn0800_8F97(word16 bx, word16 bp, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, selector psegArg0C, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp bx di ds ss
// LiveOut: di dl sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
l0800_906C_thunk_fn0800_93A6:
	ax = fn0800_93A6(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn:

l0800_906C_thunk_fn0800_93A6:
	ax = fn0800_93A6(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn:

fn0800_8F97_entry:
// DataOut: bp bx di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_8F97:
	sp = fp
	sp = fp - 2
	wLoc02 = bp
	bp = fp - 2
	sp = fp - 0x002C
	SCZO = cond(fp - 0x002C)
	sp = fp - 0x002E
	wLoc2E = si
	sp = fp - 0x0030
	wLoc30 = di
	wLoc06 = 0x0000
	wLoc08 = 0x0000
// DataOut: bp bx di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_8FC6:
	sp = fp - 0x0032
	wLoc32 = es
	D = false
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0030 bp:fp - 2 -48(fp):di -46(fp):si -8(fp):0x0000 -6(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_8FC8:
	si = wArg0A
// DataOut: bp bx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_8FCB:
	es = psegArg0C
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	al = al | al
	ax = DPB(ax, al, 0) (alias)
	dx_ax = DPB(dx_ax, al, 0) (alias)
	SZO = cond(al)
	Z = (bool) SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_9042
// DataOut: al bp bx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9042:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9042_thunk_fn0800_93A6:
	ax = fn0800_93A6(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_8FD4:
	SCZO = cond(al - 0x25)
	Z = (bool) SCZO (alias)
	branch Test(EQ,Z) l0800_9045
// DataOut: al bp bx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9045:
	wLoc0C = 0xFFFF
	es = psegArg0C
	bLoc03 = 0x20
// DataOut: bp di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9051:
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	ax = (int16) al
	wArg0A = si
	v38 = ax
	ax = di
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	ah = SLICE(ax, byte, 8) (alias)
	di = v38
	di = di | di
	SZO = cond(di)
	SO = SZO (alias)
	C = false
	branch Test(LT,SO) l0800_9075
// DataOut: ax bp di dil dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_9075:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9075_thunk_fn0800_93A6:
	ax = fn0800_93A6(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_905C:
	bl = Mem0[ds:di + 0x257C:byte]
	bh = 0x00
	bx = DPB(bx, bh, 8) (alias)
	SCZO = cond(bx - 0x0015)
	CZ = SCZO (alias)
	branch Test(ULE,CZ) l0800_906A
// DataOut: ax bp bx di dil dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_906A:
	bx = bx << 0x0001
	bl = (byte) bx (alias)
	bh = SLICE(bx, byte, 8) (alias)
	SCZO = cond(bx)
	switch (bx) { l0800_93BE l0800_93BE l0800_93BE l0800_9071 l0800_9078 l0800_907E l0800_926F l0800_90C2 l0800_90C2 l0800_90CC l0800_91A1 l0800_9092 l0800_909E l0800_9098 l0800_90BD l0800_920B l0800_92B1 l0800_90B0 l0800_90C7 l0800_9127 l0800_90A4 l0800_90AA }
// DataOut: ax bp bx di dil dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_90AA:
	v44 = bLoc03 | 0x20
	bLoc03 = v44
	SZO = cond(bLoc03)
	C = false
// DataOut: bp di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_90A4:
	v45 = bLoc03 & 0xDF
	bLoc03 = v45
	SZO = cond(bLoc03)
	C = false
// DataOut: bp di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9127:
	ax = fn0800_912A(ax, bp, ds, out bp, out di)
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	ah = SLICE(ax, byte, 8) (alias)
// DataOut: ax bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9127_thunk_fn0800_912A:
	ax = fn0800_912A(ax, bp, ds, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_90C7:
	si = 0x0010
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(16) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_90B0:
	ax = wLoc08
	al = (byte) ax (alias)
	ah = SLICE(ax, byte, 8) (alias)
	dx = 0x0000
	dx_ax = SEQ(dx, ax) (alias)
	dl = (byte) dx (alias)
	SZO = cond(bLoc03 & 0x01)
	Z = (bool) SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_9110
// DataOut: al ax bp bx di dl ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_90BB:
// DataOut: bp di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_92B1:
	sp = sp - 2
	Mem0[ss:sp:word16] = es
	ax = 0x0000
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	ah = SLICE(ax, byte, 8) (alias)
	SCZO = cond(0x0000)
	D = false
	sp = sp - 2
	Mem0[ss:sp:word16] = ss
	es = Mem0[ss:sp:selector]
	sp = sp + 2
	di = fp - 0x002C
	cx = 0x0010
	cl = (byte) cx (alias)
	ch = SLICE(cx, byte, 8) (alias)
// DataOut: ax bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_92BD:
	branch cx == 0x0000 l0800_92BF
// DataOut: ax bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_92BF:
	es = Mem0[ss:sp:selector]
	sp = sp + 2
	al = Mem0[ds:si:byte]
	ax = DPB(ax, al, 0) (alias)
	dx_ax = DPB(dx_ax, al, 0) (alias)
	si = si + 0x0001
	v48 = bLoc03 & 0xEF
	bLoc03 = v48
	SZO = cond(bLoc03)
	SCZO = cond(al - 0x5E)
	Z = (bool) SCZO (alias)
	branch Test(NE,Z) l0800_92D0
// DataOut: al bp bx ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(8) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_92CA:
	v49 = bLoc03 | 0x10
	bLoc03 = v49
	SZO = cond(bLoc03)
	C = false
	al = Mem0[ds:si:byte]
	ax = DPB(ax, al, 0) (alias)
	dx_ax = DPB(dx_ax, al, 0) (alias)
	si = si + 0x0001
// DataOut: al bp bx ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_92D0:
	ah = 0x00
	ax = DPB(ax, ah, 8) (alias)
	dx_ax = DPB(dx_ax, ah, 8) (alias)
// DataOut: al ax bp bx ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_92D2:
	dl = al
	dx = DPB(dx, dl, 0) (alias)
	dx_ax = DPB(dx_ax, dl, 16) (alias)
	di = ax
	cl = 0x03
	di = di >>u 0x03
	cx = 0x0107
	cl = 0x07 & dl
	ch = 0x01 << cl
	cx = DPB(cx, ch, 8) (alias)
	v60 = Mem0[ss:bp - 0x002A + di:byte] | ch
	Mem0[ss:bp - 0x002A + di:byte] = v60
	SZO = cond(Mem0[ss:bp - 0x002A + di:byte])
	C = false
// DataOut: bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_92E4:
	al = Mem0[ds:si:byte]
	ax = DPB(ax, al, 0) (alias)
	dx_ax = DPB(dx_ax, al, 0) (alias)
	si = si + 0x0001
	SCZO = cond(al - 0x00)
	Z = (bool) SCZO (alias)
	branch Test(EQ,Z) l0800_9313
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9313:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9313_thunk_fn0800_93BE:
	ax = fn0800_93BE(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_92EA:
	SCZO = cond(al - 0x5D)
	Z = (bool) SCZO (alias)
	branch Test(EQ,Z) l0800_9316
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9316:
	wArg0A = si
	v64 = wLoc0C & 0x7FFF
	wLoc0C = v64
	SZO = cond(wLoc0C)
	si = wLoc0C
	SZO = cond(bLoc03 & 0x01)
	Z = (bool) SZO (alias)
	C = false
	branch Test(NE,Z) l0800_932A
// DataOut: ax bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_9327:
	di = fn0800_8FAB(bp, ds, out es)
// DataOut: ax bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_932A:
	si = si - 0x0001
	SZO = cond(si)
	SO = SZO (alias)
	branch Test(LT,SO) l0800_9385
// DataOut: ax bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_932D:
	v68 = wLoc08 + 0x0001
	wLoc08 = v68
	SZO = cond(v68)
	sp = sp - 2
	Mem0[ss:sp:word16] = es
	v69 = wArg08
	sp = sp - 2
	Mem0[ss:sp:word16] = v69
	v70 = wArg06
	sp = sp - 2
	Mem0[ss:sp:word16] = v70
	call SEQ(0x0800, Mem0[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2
	cx = Mem0[ss:sp:word16]
	sp = sp + 2
	es = Mem0[ss:sp:selector]
	sp = sp + 2
	ax = ax | ax
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	ah = SLICE(ax, byte, 8) (alias)
	SZO = cond(ax)
	SO = SZO (alias)
	C = false
	branch Test(LT,SO) l0800_9394
// DataOut: ax bp di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_9394:
	si = si + 0x0001
	SCZO = cond(si - wLoc0C)
	SO = SCZO (alias)
	branch Test(GE,SO) l0800_9398_thunk_fn0800_93A6
// DataOut: bp di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: Local -0003(0) Local -0006(8)

l0800_9398_thunk_fn0800_93A6:
	ax = fn0800_93A6(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_939A:
	SZO = cond(bLoc03 & 0x01)
	Z = (bool) SZO (alias)
	C = false
	branch Test(NE,Z) l0800_939E_thunk_fn0800_93A6
// DataOut: bp di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: Local -0006(8)

l0800_939E_thunk_fn0800_93A6:
	ax = fn0800_93A6(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_93A0:
	al = 0x00
	dx_ax = DPB(dx_ax, al, 0) (alias)
	Mem0[es:di:byte] = 0x00
	di = di + 0x0001
	v80 = wLoc06 + 0x0001
	wLoc06 = v80
	SZO = cond(v80)
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_93A3_thunk_fn0800_93A6:
	ax = fn0800_93A6(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:0x00 ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9341:
	v71 = ax
	ax = si
	si = v71
	bx = si
	bl = (byte) bx (alias)
	cl = 0x03
	si = si >>u 0x03
	cx = 0x0107
	cl = 0x07 & bl
	ch = 0x01 << cl
	SZO = cond(Mem0[ss:bp - 0x002A + si:byte] & ch)
	Z = (bool) SZO (alias)
	C = false
	v72 = ax
	ax = si
	si = v72
	v73 = ax
	ax = bx
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	ah = SLICE(ax, byte, 8) (alias)
	bx = v73
	bl = (byte) bx (alias)
	bh = SLICE(bx, byte, 8) (alias)
	branch Test(EQ,Z) l0800_935E
// DataOut: al ax bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_935E:
	SZO = cond(bLoc03 & 0x10)
	Z = (bool) SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_936D
// DataOut: al ax bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_9356:
	SZO = cond(bLoc03 & 0x10)
	Z = (bool) SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_9364
// DataOut: al ax bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_9364:
	SZO = cond(bLoc03 & 0x01)
	Z = (bool) SZO (alias)
	C = false
	branch Test(NE,Z) l0800_932A
// DataOut: al ax bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_936A:
	Mem0[es:di:byte] = al
	di = di + 0x0001
// DataOut: ax bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_935C:
// DataOut: ax bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_936D:
	sp = sp - 2
	Mem0[ss:sp:word16] = es
	v76 = wArg08
	sp = sp - 2
	Mem0[ss:sp:word16] = v76
	v77 = wArg06
	sp = sp - 2
	Mem0[ss:sp:word16] = v77
	sp = sp - 2
	Mem0[ss:sp:word16] = ax
	call SEQ(0x0800, Mem0[ss:bp + 0x0006:word16]) (retsize: 2; depth: 2)
	sp = sp + 0x0006
	es = Mem0[ss:sp:selector]
	sp = sp + 2
	v78 = wLoc08 - 0x0001
	wLoc08 = v78
	si = si + 0x0001
	SCZO = cond(si - wLoc0C)
	SO = SCZO (alias)
	branch Test(GE,SO) l0800_938E
// DataOut: bp bx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_9385:
	SZO = cond(bLoc03 & 0x01)
	Z = (bool) SZO (alias)
	C = false
	branch Test(NE,Z) l0800_9391
// DataOut: bp bx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_938B:
	v79 = wLoc06 + 0x0001
	wLoc06 = v79
	SZO = cond(v79)
// DataOut: bp bx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_938E:
	al = 0x00
	dx_ax = DPB(dx_ax, al, 0) (alias)
	Mem0[es:di:byte] = 0x00
	di = di + 0x0001
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_9391:
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_92EE:
	SCZO = cond(al - 0x2D)
	Z = (bool) SCZO (alias)
	branch Test(NE,Z) l0800_92D2
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_92F2:
	SCZO = cond(dl - Mem0[es:si:byte])
	CZ = SCZO (alias)
	branch Test(UGT,CZ) l0800_92D2
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_92F7:
	SCZO = cond(Mem0[es:si:byte] - 0x5D)
	Z = (bool) SCZO (alias)
	branch Test(EQ,Z) l0800_92D2
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_92FD:
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	al = al - dl
	ax = DPB(ax, al, 0) (alias)
	dx_ax = DPB(dx_ax, al, 0) (alias)
	SCZO = cond(al)
	Z = (bool) SCZO (alias)
	branch Test(EQ,Z) l0800_92E4
// DataOut: al bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9303:
	dl = dl + al
	dx = DPB(dx, dl, 0) (alias)
	dx_ax = DPB(dx_ax, dl, 16) (alias)
	SCZO = cond(dl)
// DataOut: al bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9305:
	v61 = (ch & 0x80) != 0x00
	ch = __rol(ch, 0x01)
	cx = DPB(cx, ch, 8) (alias)
	C = v61
	di = di + 0x00 + C
	v62 = Mem0[ss:bp - 0x002A + di:byte] | ch
	Mem0[ss:bp - 0x002A + di:byte] = v62
	SZO = cond(Mem0[ss:bp - 0x002A + di:byte])
	C = false
	al = al - 0x01
	ax = DPB(ax, al, 0) (alias)
	dx_ax = DPB(dx_ax, al, 0) (alias)
	SZO = cond(al)
	Z = (bool) SZO (alias)
	branch Test(NE,Z) l0800_9305
// DataOut: al bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9311:
// DataOut: bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_92BD_1:
	Mem0[es:di:word16] = ax
	di = di + 0x0002
	cx = cx - 0x0001
	cl = (byte) cx (alias)
	ch = SLICE(cx, byte, 8) (alias)
// DataOut: ax bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_920B:
	ax = fn0800_920E(ax, bp, ds, out bp, out di)
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	ah = SLICE(ax, byte, 8) (alias)
// DataOut: ax bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_920B_thunk_fn0800_920E:
	ax = fn0800_920E(ax, bp, ds, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_90BD:
	si = 0x0008
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(16) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_9098:
	v74 = bLoc03 | 0x04
	bLoc03 = v74
	SZO = cond(bLoc03)
	C = false
// DataOut: bp di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_909E:
	v63 = bLoc03 | 0x02
	bLoc03 = v63
	SZO = cond(bLoc03)
	C = false
// DataOut: bp di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9092:
	v43 = bLoc03 | 0x08
	bLoc03 = v43
	SZO = cond(bLoc03)
	C = false
// DataOut: bp di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_91A1:
	sp = sp - 2
	Mem0[ss:sp:word16] = ss
	ax = fp - 0x000A
	sp = sp - 2
	Mem0[ss:sp:word16] = fp - 0x000A
	sp = sp - 2
	Mem0[ss:sp:word16] = ss
	ax = fp - 0x0008
	sp = sp - 2
	Mem0[ss:sp:word16] = fp - 0x0008
	ax = 0x7FFF
	ax = 0x7FFF & wLoc0C
	dx_ax = SEQ(dx, ax) (alias)
	SZO = cond(ax)
	C = false
	sp = sp - 2
	Mem0[ss:sp:word16] = ax
	v81 = wArg08
	sp = sp - 2
	Mem0[ss:sp:word16] = v81
	v82 = wArg06
	sp = sp - 2
	Mem0[ss:sp:word16] = v82
	v83 = wArg04
	sp = sp - 2
	Mem0[ss:sp:word16] = v83
	v84 = wArg02
	sp = sp - 2
	Mem0[ss:sp:word16] = v84
	fn0800_A2D0()
	sp = sp + 0x0012
	SCZO = cond(wLoc0A - 0x0000)
	SZO = SCZO (alias)
	Z = (bool) SCZO (alias)
	SO = SCZO (alias)
	C = (bool) SCZO (alias)
	S = (bool) SCZO (alias)
	CZ = SCZO (alias)
	branch Test(LE,SZO) l0800_9203
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): SO
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(8) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_9203:
	fn0800_A2D8()
	branch Test(LT,SO) l0800_919E
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_919E:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_919E_thunk_fn0800_93A6:
	ax = fn0800_93A6(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9208:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9208_thunk_fn0800_93BE:
	ax = fn0800_93BE(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_91CA:
	al = bLoc03
	ax = (int16) al
	dx_ax = SEQ(dx, ax) (alias)
	SZO = cond(ax & 0x0001)
	Z = (bool) SZO (alias)
	C = false
	branch Test(NE,Z) l0800_91FD
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_91FD:
	fn0800_A2D8()
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_91D3:
	di = fn0800_8FAB(bp, ds, out es)
	v85 = wLoc06 + 0x0001
	wLoc06 = v85
	SZO = cond(bLoc03 & 0x04)
	Z = (bool) SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_91E4
// DataOut: bp bx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_91E4:
	SZO = cond(bLoc03 & 0x08)
	Z = (bool) SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_91EF
// DataOut: bp bx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_91EF:
	ax = 0x0000
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	ah = SLICE(ax, byte, 8) (alias)
	SZO = cond(0x0000)
	C = false
// DataOut: ax bp bx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_91EA:
	ax = 0x0008
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	ah = SLICE(ax, byte, 8) (alias)
// DataOut: ax bp bx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_91DF:
	ax = 0x0004
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	ah = SLICE(ax, byte, 8) (alias)
// DataOut: ax bp bx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_91F1:
	sp = sp - 2
	Mem0[ss:sp:word16] = ax
	sp = sp - 2
	Mem0[ss:sp:word16] = es
	sp = sp - 2
	Mem0[ss:sp:word16] = di
	fn0800_A2D4()
	sp = sp + 0x0006
	SCZO = cond(sp)
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_90CC:
	si = 0x0000
	SZO = cond(0x0000)
	C = false
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(16) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_90C2:
	si = 0x000A
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(16) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_90CE:
	SZO = cond(di & 0x0020)
	Z = (bool) SZO (alias)
	C = false
	branch Test(NE,Z) l0800_90DD
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(16) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_90D4:
	SCZO = cond(di - 0x0058)
	Z = (bool) SCZO (alias)
	branch Test(EQ,Z) l0800_90DD
// DataOut: bp bx ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(16) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_90D9:
	v47 = bLoc03 | 0x04
	bLoc03 = v47
	SZO = cond(bLoc03)
	C = false
// DataOut: bp bx ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(16) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_90DD:
	sp = sp - 2
	Mem0[ss:sp:word16] = ss
	ax = fp - 0x000A
	sp = sp - 2
	Mem0[ss:sp:word16] = fp - 0x000A
	sp = sp - 2
	Mem0[ss:sp:word16] = ss
	ax = fp - 0x0008
	sp = sp - 2
	Mem0[ss:sp:word16] = fp - 0x0008
	ax = wLoc0C
	ax = ax & 0x7FFF
	SZO = cond(ax)
	C = false
	sp = sp - 2
	Mem0[ss:sp:word16] = ax
	sp = sp - 2
	Mem0[ss:sp:word16] = si
	v51 = wArg08
	sp = sp - 2
	Mem0[ss:sp:word16] = v51
	v52 = wArg06
	sp = sp - 2
	Mem0[ss:sp:word16] = v52
	v53 = wArg04
	sp = sp - 2
	Mem0[ss:sp:word16] = v53
	v54 = wArg02
	sp = sp - 2
	Mem0[ss:sp:word16] = v54
	ax = fn0800_94B0(ax, bx, ds, wArg04, wArg06, wArg08, wArg0A, ptrArg0C, ptrArg10, out dx, out bx, out di)
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	ah = SLICE(ax, byte, 8) (alias)
	sp = sp + 0x0014
	SCZO = cond(wLoc0A - 0x0000)
	SZO = SCZO (alias)
	Z = (bool) SCZO (alias)
	SO = SCZO (alias)
	C = (bool) SCZO (alias)
	S = (bool) SCZO (alias)
	CZ = SCZO (alias)
	branch Test(LE,SZO) l0800_911F
// DataOut: al ax bp bx di dl ds dx sp ss
// DataOut (flags): SO
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(16) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_911F:
	branch Test(LT,SO) l0800_9124
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9124:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9124_thunk_fn0800_93A6:
	ax = fn0800_93A6(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9121:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9121_thunk_fn0800_93BE:
	ax = fn0800_93BE(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9107:
	SZO = cond(bLoc03 & 0x01)
	Z = (bool) SZO (alias)
	C = false
	branch Test(NE,Z) l0800_911C
// DataOut: al ax bp bx di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(16) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_910D:
	v55 = wLoc06 + 0x0001
	wLoc06 = v55
	SZO = cond(v55)
// DataOut: al ax bp bx dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_9110:
	di = fn0800_8FAB(bp, ds, out es)
	Mem0[es:di:word16] = ax
	di = di + 0x0002
	SZO = cond(bLoc03 & 0x04)
	Z = (bool) SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_911C
// DataOut: al bp bx di dl ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_911A:
	v50 = ax
	ax = dx
	dx = v50
	dx_ax = SEQ(dx, ax) (alias)
	dl = (byte) dx (alias)
	Mem0[es:di:word16] = ax
	di = di + 0x0002
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_911C:
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_926F:
	SZO = cond(bLoc03 & 0x01)
	Z = (bool) SZO (alias)
	C = false
	branch Test(NE,Z) l0800_9278
// DataOut: ax bp bx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(16) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_9275:
	di = fn0800_8FAB(bp, ds, out es)
// DataOut: ax bp bx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(16) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_9278:
	si = wLoc0C
	si = si | si
	SZO = cond(si)
	Z = (bool) SZO (alias)
	SO = SZO (alias)
	S = (bool) SZO (alias)
	C = false
	SCZO = DPB(SCZO, C, 0) (alias)
	CZ = DPB(CZ, C, 0) (alias)
	branch Test(GE,SO) l0800_9282
// DataOut: ax bp bx di dl ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(16) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_927F:
	si = 0x0001
// DataOut: ax bp bx di dl ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(16) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_9282:
	branch Test(EQ,Z) l0800_92A2
// DataOut: ax bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(16) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_9284:
	v65 = wLoc08 + 0x0001
	wLoc08 = v65
	SZO = cond(v65)
	sp = sp - 2
	Mem0[ss:sp:word16] = es
	v66 = wArg08
	sp = sp - 2
	Mem0[ss:sp:word16] = v66
	v67 = wArg06
	sp = sp - 2
	Mem0[ss:sp:word16] = v67
	call SEQ(0x0800, Mem0[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2
	cx = Mem0[ss:sp:word16]
	sp = sp + 2
	es = Mem0[ss:sp:selector]
	sp = sp + 2
	ax = ax | ax
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	ah = SLICE(ax, byte, 8) (alias)
	SZO = cond(ax)
	SO = SZO (alias)
	C = false
	branch Test(LT,SO) l0800_92AE
// DataOut: al ax bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(16) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_92AE:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_92AE_thunk_fn0800_93A6:
	ax = fn0800_93A6(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9298:
	SZO = cond(bLoc03 & 0x01)
	Z = (bool) SZO (alias)
	C = false
	branch Test(NE,Z) l0800_929F
// DataOut: al ax bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(16) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_929E:
	Mem0[es:di:byte] = al
	di = di + 0x0001
// DataOut: ax bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(16) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_929F:
	si = si - 0x0001
	SZO = cond(si)
	branch Test(GT,SZO) l0800_9284
// DataOut: ax bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(0) Local -0006(16) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_92A2:
	SZO = cond(bLoc03 & 0x01)
	Z = (bool) SZO (alias)
	C = false
	branch Test(NE,Z) l0800_92AB
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_92A8:
	v75 = wLoc06 + 0x0001
	wLoc06 = v75
	SZO = cond(v75)
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_92AB:
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_907E:
	di = di - 0x0030
	v86 = wLoc0C
	wLoc0C = di
	di = v86
	di = di | di
	SZO = cond(di)
	SO = SZO (alias)
	C = false
	branch Test(LT,SO) l0800_9051
// DataOut: bp di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9088:
	ax = 0x000A
	dx_ax = di *u 0x000A
	dx = SLICE(dx_ax, word16, 16) (alias)
	dl = SLICE(dx_ax, byte, 16) (alias)
	v88 = wLoc0C + 0x000A
	wLoc0C = v88
	SCZO = cond(v88)
// DataOut: bp di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9078:
	v42 = bLoc03 | 0x01
	bLoc03 = v42
	SZO = cond(bLoc03)
	C = false
// DataOut: bp di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0003(16) Local -0006(8) Local -0008(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9071:
	v41 = ax
	ax = di
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	di = v41
// DataOut: al bp bx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_906C_thunk_fn0800_93A6:
	ax = fn0800_93A6(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9067:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9067_thunk_fn0800_93A6:
	ax = fn0800_93A6(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_8FD8:
	ax = (int16) al
	v16 = ax
	ax = di
	di = v16
	v17 = wLoc08 + 0x0001
	wLoc08 = v17
	SZO = cond(v17)
	v18 = wArg08
	sp = sp - 2
	Mem0[ss:sp:word16] = v18
	v19 = wArg06
	sp = sp - 2
	Mem0[ss:sp:word16] = v19
	call SEQ(0x0800, Mem0[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2
	cx = Mem0[ss:sp:word16]
	sp = sp + 2
	ax = ax | ax
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	SZO = cond(ax)
	SO = SZO (alias)
	C = false
	branch Test(LT,SO) l0800_9016
// DataOut: al bp bx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_8FEC:
	ax = (int16) al
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	ah = SLICE(ax, byte, 8) (alias)
	di = di | di
	SZO = cond(di)
	S = (bool) SZO (alias)
	C = false
	branch Test(SG,S) l0800_902B
// DataOut: al ax bp bx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_8FF1:
	SCZO = cond(Mem0[ds:di + 0x257C:byte] - 0x01)
	Z = (bool) SCZO (alias)
	branch Test(NE,Z) l0800_902B
// DataOut: al ax bp bx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(8) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_902B:
	SCZO = cond(ax - di)
	Z = (bool) SCZO (alias)
	branch Test(EQ,Z) l0800_8FCB
// DataOut: ax bp bx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_902F:
	v35 = wArg08
	sp = sp - 2
	Mem0[ss:sp:word16] = v35
	v36 = wArg06
	sp = sp - 2
	Mem0[ss:sp:word16] = v36
	sp = sp - 2
	Mem0[ss:sp:word16] = ax
	call SEQ(0x0800, Mem0[ss:bp + 0x0006:word16]) (retsize: 2; depth: 2)
	sp = sp + 0x0006
	SCZO = cond(sp)
	v37 = wLoc08 - 0x0001
	wLoc08 = v37
	SZO = cond(v37)
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_903F_thunk_fn0800_93A6:
	ax = fn0800_93A6(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_8FF8:
	v23 = ax
	ax = bx
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	ah = SLICE(ax, byte, 8) (alias)
	bx = v23
	bl = (byte) bx (alias)
	bh = SLICE(bx, byte, 8) (alias)
	bl = bl | bl
	bx = DPB(bx, bl, 0) (alias)
	SZO = cond(bl)
	S = (bool) SZO (alias)
	C = false
	branch Test(SG,S) l0800_9019
// DataOut: ax bp bx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(8) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_8FFD:
	SCZO = cond(Mem0[ds:bx + 0x257C:byte] - 0x01)
	Z = (bool) SCZO (alias)
	branch Test(NE,Z) l0800_9019
// DataOut: ax bp bx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(8) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9019:
	v32 = wArg08
	sp = sp - 2
	Mem0[ss:sp:word16] = v32
	v33 = wArg06
	sp = sp - 2
	Mem0[ss:sp:word16] = v33
	sp = sp - 2
	Mem0[ss:sp:word16] = bx
	call SEQ(0x0800, Mem0[ss:bp + 0x0006:word16]) (retsize: 2; depth: 2)
	sp = sp + 0x0006
	SCZO = cond(sp)
	v34 = wLoc08 - 0x0001
	wLoc08 = v34
	SZO = cond(v34)
// DataOut: bp bx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(16) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9004:
	v26 = wLoc08 + 0x0001
	wLoc08 = v26
	SZO = cond(v26)
	v27 = wArg08
	sp = sp - 2
	Mem0[ss:sp:word16] = v27
	v28 = wArg06
	sp = sp - 2
	Mem0[ss:sp:word16] = v28
	call SEQ(0x0800, Mem0[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2
	cx = Mem0[ss:sp:word16]
	sp = sp + 2
	ax = ax | ax
	al = (byte) ax (alias)
	dx_ax = SEQ(dx, ax) (alias)
	SZO = cond(ax)
	C = false
	branch Test(GT,SZO) l0800_8FF8
// DataOut: al bp bx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(8) Local -0008(8) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000C(16)

l0800_9016:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_9016_thunk_fn0800_93A6:
	ax = fn0800_93A6(bp, out bp, out di)
	dx_ax = SEQ(dx, ax) (alias)
	return dl
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>

fn0800_8F97_exit:
	use di (=> diOut)
// DataOut: di dl sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x7FFF -58(fp):fp - 0x0008 -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -44(fp):0x0000 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid>



word16 fn0800_8FAB(word16 bp, selector ds, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di es
// Trashed: SCZO di dil edi es rdi
// Preserved: sp
fn0800_8FAB_entry:
// DataOut: al ax bp bx dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8FAB:
	ptr32 es_di_5 = Mem0[ss:bp + 0x0010:segptr32]
	word16 di_6 = (word16) es_di_5
	branch (Mem0[ss:bp - 0x0001:byte] & 0x20) == 0x00 l0800_8FBC
// DataOut: al ax bp bx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8FBC:
	word16 di_26 = Mem0[es_di_5:word16]
	Mem33[ss:bp + 0x0010:word16] = Mem0[ss:bp + 0x0010:word16] + 0x0002
	selector es_29
	*esOut = ds
	return di_26
// DataOut: al ax bp bx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid>

l0800_8FB4:
	ptr32 es_di_19 = Mem0[ds:di_6:segptr32]
	Mem23[ss:bp + 0x0010:word16] = Mem0[ss:bp + 0x0010:word16] + 0x0004
	selector es_21
	*esOut = SLICE(es_di_19, selector, 16)
	return (word16) es_di_19
// DataOut: al ax bp bx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid>

fn0800_8FAB_exit:
// DataOut: di es
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid> di:<invalid> es:ds -2(fp):ds



word16 fn0800_912A(word16 ax, word16 bp, selector ds, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds ss
// LiveOut: ax bp di
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi es esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_912A_entry:
// DataOut: ax bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_912A:
// DataOut: ax bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_912A_thunk_fn0800_93C5:
	word16 bp_5
	word16 di_6
	return fn0800_93C5(ax, bp, ds, out bp_5, out di_6)
// DataOut: ax bp di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_912A_exit:
// DataOut: ax bp di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid>



void fn0800_9145(word16 ax, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx es esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_9145_entry:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9145:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9145_thunk_fn0800_93EF:
	fn0800_93EF(ax, bp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9145_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid> ch:<invalid> dl:<invalid>



void fn0800_9169(word16 ax, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx es esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_9169_entry:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9169:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9169_thunk_fn0800_93EF:
	fn0800_93EF(ax, bp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9169_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid> ch:<invalid> dl:<invalid>



word16 fn0800_920E(word16 ax, word16 bp, selector ds, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds ss
// LiveOut: ax bp di
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi es esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_920E_entry:
// DataOut: ax bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_920E:
// DataOut: ax bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_920E_thunk_fn0800_93C5:
	word16 bp_5
	word16 di_6
	return fn0800_93C5(ax, bp, ds, out bp_5, out di_6)
// DataOut: ax bp di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_920E_exit:
// DataOut: ax bp di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid>



word16 fn0800_93A6(word16 bp, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut: ax bp di
// Trashed: SCZO ah al ax bp bpl di dil eax ebp edi es esi esp rax rbp rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_93A6_entry:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l0800_93A6:
	Mem7[ss:v3 - 2:word16] = Mem0[ss:bp + 0x000A:word16]
	Mem10[ss:v3 - 4:word16] = Mem7[ss:bp + 0x0008:word16]
	Mem13[ss:v3 - 6:word16] = 0xFFFF
	word16 sp_14
	selector ss_15
	word16 bp_16
	word16 ax_17
	byte SCZO_18
	bool C_19
	selector es_20
	word16 di_21
	word16 si_22
	call SEQ(0x0800, Mem13[ss:bp + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ax_11,bp,sp_12,ss
		defs: ax_17,bp_16,C_19,di_21,es_20,SCZO_18,si_22,sp_14,ss_15
	Mem27[ss_15:bp_16 - 0x0004:word16] = Mem13[ss_15:bp_16 - 0x0004:word16] - (Mem13[ss_15:bp_16 - 0x0004:word16] <u 0x0001)
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_93BA_thunk_fn0800_93BE:
	word16 bp_29
	word16 di_30
	return fn0800_93BE(bp_16, out bp_29, out di_30)
// DataOut: ax bp di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid>

fn0800_93A6_exit:
// DataOut: ax bp di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid>



word16 fn0800_93BE(word16 bp, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut: ax bp di sp
// Trashed: ah al ax bp bpl di dil eax ebp edi es esi esp rax rbp rdi rsi rsp si sil sp spl
// Preserved:
fn0800_93BE_entry:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l0800_93BE:
	word16 ax_7 = Mem0[ss:bp - 0x0004:word16]
// DataOut: ax bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9453:
	word16 di_8
	*diOut = Mem0[ss:v3 + 2:word16]
	word16 bp_12
	*bpOut = Mem0[ss:bp:word16]
	return ax_7
// DataOut: ax bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 + 2 es:<invalid> ax:<invalid>

fn0800_93BE_exit:
// DataOut: ax bp di sp
// DataOut (flags): 
// SymbolicIn: sp:bp + 2 es:<invalid> ax:<invalid> di:<invalid> si:<invalid> bp:<invalid>



word16 fn0800_93C5(word16 ax, word16 bp, selector ds, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds ss
// LiveOut: ax bp di
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi es esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_93C5_entry:
// DataOut: ax bp di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l0800_93C5:
	Mem8[ss:bp - 0x0006:word16] = Mem0[ss:bp - 0x0006:word16] + 0x0001
	Mem12[ss:v3 - 2:word16] = Mem8[ss:bp + 0x000A:word16]
	Mem15[ss:v3 - 4:word16] = Mem12[ss:bp + 0x0008:word16]
	word16 sp_16
	byte SZO_19
	word16 cx_20
	word16 ax_21
	bool C_22
	byte al_23
	bool S_24
	word16 bx_25
	selector ds_26
	byte SCZO_27
	bool Z_28
	word16 di_29
	call SEQ(0x0800, Mem15[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: bp_2,sp_14,ss_3,SZO_9
		defs: al_23,ax_21,bp_18,bx_25,C_22,cx_20,di_29,ds_26,S_24,SCZO_27,sp_16,ss_17,SZO_19,Z_28
	byte al_35 = (byte) ax_21
	branch ax_21 <= 0x0000 l0800_93EA
// DataOut: al ax bp di dl ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid>
// LocalsOut: v3(16)

l0800_93EA:
	branch ax_21 == 0x0000 l0800_93E4
// DataOut: ax bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid>

l0800_93EC:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid>

l0800_93ED_thunk_fn0800_93A6:
	word16 bp_91
	word16 di_92
	return fn0800_93A6(bp, out bp_91, out di_92)
// DataOut: ax bp di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid>

l0800_93D7:
	word16 ax_76 = DPB(ax_21, al_35, 0)
	branch al_35 < 0x00 l0800_93E4
// DataOut: ax bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid>
// LocalsOut: v3(16)

l0800_93DB:
	branch Mem15[ds_26:ax_76 + 0x257C:byte] == 0x01 l0800_93C5
// DataOut: ax bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid>
// LocalsOut: v3(16)

l0800_93E4:
	word16 sp_61
	selector ss_62
	word16 bp_63
	byte SZO_64
	word16 cx_65
	word16 ax_66
	bool C_67
	byte al_68
	bool S_69
	word16 bx_70
	selector ds_71
	byte SCZO_72
	bool Z_73
	word16 di_74
	call Mem15[ss:sp_16 + 4:word16] + 0x0003 (retsize: 2; depth: 2)
		uses: al_35,ax_34,bp_18,bx_25,C_39,cx_59,di_29,ds_26,S_38,SCZO_60,sp_58,ss_17,SZO_36,Z_37
		defs: al_68,ax_66,bp_63,bx_70,C_67,cx_65,di_74,ds_71,S_69,SCZO_72,sp_61,ss_62,SZO_64,Z_73
	return ax_66
// DataOut: ax bp di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid>

fn0800_93C5_exit:
// DataOut: ax bp di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid>



void fn0800_93EF(word16 ax, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx es esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_93EF_entry:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_93EF:
	word16 sp_1 = fp
	word16 dx_154 = 0x0000
	word16 cx_140 = 0x0004
	byte cl_125 = 0x04
// DataOut: ax bp cl cx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_93F4:
	word16 v8_30 = Mem0[ss:bp - 0x000A:word16] - 0x0001
	Mem31[ss:bp - 0x000A:word16] = v8_30
	branch v8_30 < 0x0000 l0800_9442
// DataOut: ax bp cl cx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9442:
// DataOut: bp cl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_93F9:
	word16 sp_91 = sp_1 - 2
	Mem92[ss:sp_91:word16] = dx_154
	Mem94[ss:sp_91 - 2:word16] = cx_140
	Mem96[ss:bp - 0x0006:word16] = Mem94[ss:bp - 0x0006:word16] + 0x0001
	Mem100[ss:sp_91 - 4:word16] = Mem96[ss:bp + 0x000A:word16]
	Mem103[ss:sp_91 - 6:word16] = Mem100[ss:bp + 0x0008:word16]
	word16 sp_104
	word16 dx_105
	byte SCZO_106
	word16 cx_107
	byte SZO_110
	byte SO_111
	word16 ax_112
	bool C_113
	byte cl_114
	byte ch_115
	byte al_116
	byte dl_117
	bool Z_118
	word16 di_119
	call SEQ(0x0800, Mem103[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: al_17,ax_20,bp_22,C_19,ch_24,cl_18,cx_25,di_15,dl_26,dx_27,SCZO_28,SO_33,sp_102,ss_21,SZO_97,Z_16
		defs: al_116,ax_112,bp_108,C_113,ch_115,cl_114,cx_107,di_119,dl_117,dx_105,SCZO_106,SO_111,sp_104,ss_109,SZO_110,Z_118
	word16 cx_124 = Mem103[ss:sp_104 + 4:word16]
	cl_125 = (byte) cx_124 (alias)
	word16 dx_127 = Mem103[ss:sp_104 + 6:word16]
	sp_1 = sp_104 + 8
	byte al_131 = (byte) ax_112
	branch ax_112 <= 0x0000 l0800_9444
// DataOut: al ax bp cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_940F:
	cl_125 = cl_125 - 0x01
	word16 cx_135 = DPB(cx_124, cl_125 - 0x01, 0)
	branch cl_125 < 0x01 l0800_9444
// DataOut: al ax bp cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9413:
	byte ch_139 = al_131 - 0x30
	cx_140 = DPB(cx_135, al_131 - 0x30, 8) (alias)
	branch al_131 <u 0x30 l0800_9444
// DataOut: ax bp ch cl cx dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_941A:
	branch al_131 <u 0x3A l0800_9436
// DataOut: ax bp ch cl cx dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x30 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_941F:
	byte ch_156 = al_131 - 0x41
	word16 cx_157 = DPB(cx_135, al_131 - 0x41, 8)
	branch al_131 <u 0x41 l0800_9444
// DataOut: ax bp ch cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x30 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9424:
	branch al_131 <u 0x47 l0800_9433
// DataOut: ax bp ch cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x41 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9429:
	ch_156 = al_131 - 0x61
	cx_157 = DPB(cx_135, al_131 - 0x61, 8) (alias)
	branch al_131 <u 0x61 l0800_9444
// DataOut: ax bp ch cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x41 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_942E:
	branch al_131 >=u 0x67 l0800_9444
// DataOut: ax bp ch cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x61 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9444:
	branch cl_125 == 0x04 l0800_944F
// DataOut: bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_944F:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9450_thunk_fn0800_93A6:
	word16 bp_88
	word16 di_89
	fn0800_93A6(bp, out bp_88, out di_89)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9449:
	word16 sp_70
	word16 dx_71
	byte SCZO_72
	word16 cx_73
	word16 bp_74
	selector ss_75
	byte SZO_76
	byte SO_77
	word16 ax_78
	bool C_79
	byte cl_80
	byte ch_81
	byte al_82
	byte dl_83
	bool Z_84
	word16 di_85
	call Mem31[ss:sp_1:word16] + 0x0003 (retsize: 2; depth: 2)
		uses: al_35,ax_38,bp_42,C_37,ch_44,cl_36,cx_68,di_34,dl_46,dx_47,SCZO_69,SO_39,sp_67,ss_41,SZO_40,Z_49
		defs: al_82,ax_78,bp_74,C_79,ch_81,cl_80,cx_73,di_85,dl_83,dx_71,SCZO_72,SO_77,sp_70,ss_75,SZO_76,Z_84
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

fn0800_93EF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9433:
	ch_139 = ch_156 + 0x0A
	cx_140 = DPB(cx_157, ch_139, 8) (alias)
// DataOut: ax bp ch cl cx dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9436:
	dx_154 = DPB(dx_127 << 0x0004, (byte) (dx_127 << 0x0004) + ch_139, 0) (alias)
// DataOut: ax bp cl cx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000



bool fn0800_9485(byte cl, byte bl)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bl cl
// LiveOut: C
// Trashed: SCZO bh bl bx ebx rbx
// Preserved: bx sp
fn0800_9485_entry:
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9485:
	bool C_15
	byte bl_31 = bl - 0x30
	branch bl <u 0x30 l0800_94AD
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_948B:
	branch bl <=u 0x39 l0800_94A2
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bl:bl - 0x30 -2(fp):bx
// LocalsOut: fp(16)

l0800_9490:
	branch bl >u 0x5A || bl <u 0x30 l0800_949A
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bl:bl - 0x30 -2(fp):bx
// LocalsOut: fp(16)

l0800_949A:
	bl_31 = bl - 0x57
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bl:bl - 0x30 -2(fp):bx
// LocalsOut: fp(16)

l0800_9495:
	bl_31 = bl - 0x37
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bl:bl - 0x30 -2(fp):bx
// LocalsOut: fp(16)

l0800_949D:
	branch bl_31 <=u 0x09 l0800_94AD
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bl:<invalid> -2(fp):bx
// LocalsOut: fp(16)

l0800_94A2:
	branch bl_31 >=u cl l0800_94AD
// DataOut: bl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bl:<invalid> -2(fp):bx
// LocalsOut: fp(16)

l0800_94AD:
	C_15 = true
// DataOut: cx di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 2 bl:<invalid> -2(fp):bx

l0800_94A6:
	C_15 = false
// DataOut: cx di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 2 bl:<invalid> -2(fp):bx

l0800_94AF:
	return C_15
// DataOut: cx di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp bl:<invalid> bx:bx bh:0x00 -2(fp):bx

fn0800_9485_exit:
// DataOut:
// DataOut (flags): C
// SymbolicIn: sp:fp bl:<invalid> bx:bx bh:0x00 -2(fp):bx



word16 fn0800_94B0(word16 ax, word16 bx, selector ds, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, segptr32 ptrArg0E, segptr32 ptrArg12, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx ds ss
// LiveOut: ax bx di dl dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: al bp sp
// Stack args: Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)
fn0800_94B0_entry:
// DataOut: ax bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94B0:
	word16 sp_11 = fp - 0x000C
	byte bLoc03_14 = 0x00
	word16 wLoc06_130 = 0x0000
	word16 wLoc08_127 = 0x0001
// DataOut: ax bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94C6:
	word16 ax_175
	word16 v8_21 = wLoc06_130 + 0x0001
	word16 sp_26 = sp_11 - 2
	Mem27[ss:sp_26:word16] = wArg08
	Mem31[ss:sp_26 - 2:word16] = wArg06
	wLoc06_130 = v8_21
	word16 sp_32
	word16 bp_33
	byte SCZO_35
	word16 si_36
	word16 di_37
	byte SZO_38
	word16 cx_39
	word16 ax_40
	bool C_41
	byte SO_42
	byte al_43
	word16 bx_44
	byte bl_45
	bool Z_46
	selector ds_47
	byte CZ_48
	byte cl_49
	selector es_50
	word16 dx_51
	byte dl_52
	byte dh_53
	byte ah_54
	call SEQ(0x0800, Mem31[ss:fp + 0x0002:word16]) (retsize: 2; depth: 2)
		uses: bLoc03_14,bp_5,di,SCZO_7,si,sp_30,ss_18,SZO_23,wLoc02_4,wLoc06_22,wLoc08_16,wLoc0A_10,wLoc0C_13
		defs: ah_54,al_43,ax_40,bl_45,bp_33,bx_44,C_41,cl_49,cx_39,CZ_48,dh_53,di_37,dl_52,ds_47,dx_51,es_50,SCZO_35,si_36,SO_42,sp_32,ss_34,SZO_38,Z_46
	sp_11 = sp_32 + 4
	word16 ax_131 = ax_40
	byte al_62 = (byte) ax_40
	branch ax_40 < 0x0000 l0800_9549
// DataOut: al ax bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:(int16) al di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94D8:
	word16 ax_215 = (int16) al_62
	byte bl_224 = (byte) ax_215
	branch (bl_224 & 0x80) != 0x00 l0800_94E7
// DataOut: ax bl bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94DF:
	branch (Mem31[ds_47:ax_215 + 0x2251:byte] & 0x01) != 0x00 l0800_94C6
// DataOut: ax bl bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:(int16) al di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94E7:
	ax_131 = ax_215
	byte al_235 = (byte) ax_215
	word16 wArg0C_240 = wArg0C - 0x0001
	branch wArg0C < 0x0001 l0800_9550
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:(int16) al di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94ED:
	word16 bp_300
	branch al_235 == 0x2B l0800_94F8
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94F1:
	bp_300 = bp_33
	branch al_235 != 0x2D l0800_950F
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94F5:
	bLoc03_14 = 0x01
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94F8:
	wArg0C_240 = wArg0C - 0x0002
	branch wArg0C < 0x0002 l0800_9550
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94FD:
	Mem849[ss:sp_32 + 2:word16] = wArg08
	Mem852[ss:sp_32:word16] = wArg06
	wLoc06_130 = v8_21 + 0x0001
	word16 sp_853
	byte SCZO_856
	word16 si_857
	word16 di_858
	byte SZO_859
	word16 cx_860
	word16 ax_861
	bool C_862
	byte SO_863
	byte al_864
	word16 bx_865
	byte bl_866
	bool Z_867
	selector ds_868
	byte CZ_869
	byte cl_870
	selector es_871
	word16 dx_872
	byte dl_873
	byte dh_874
	byte ah_875
	call SEQ(0x0800, Mem852[ss:bp_33 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_236,al_235,ax_232,bl_224,bLoc03_837,bp_33,bx_238,C_229,cl_49,cx_57,CZ_48,dh_53,di_230,dl_52,ds_47,dx_51,es_50,SCZO_839,si_36,SO_843,sp_851,ss_34,SZO_846,wLoc02_4,wLoc06_845,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_838
		defs: ah_875,al_864,ax_861,bl_866,bp_854,bx_865,C_862,cl_870,cx_860,CZ_869,dh_874,di_858,dl_873,ds_868,dx_872,es_871,SCZO_856,si_857,SO_863,sp_853,ss_855,SZO_859,Z_867
	sp_11 = sp_853 + 4
	ax_131 = ax_861
	al_235 = (byte) ax_861 (alias)
	branch ax_861 < 0x0000 l0800_9549
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9549:
	wLoc08_127 = 0xFFFF
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000E(32) Stack +0012(32)

l0800_950F:
	word16 ax_408
	word16 si_302 = 0x0000
	word16 di_305 = 0x0000
	byte cl_310 = (byte) wArg0A
	branch wArg0A == 0x0000 l0800_956E
// DataOut: al ax cl cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_956E:
	wArg0A = 0x000A
	branch al_235 != 0x30 l0800_959E
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9577:
	word16 v70_788 = wArg0C_240 - 0x0001
	wArg0C_240 = v70_788
	branch v70_788 < 0x0000 l0800_956B
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_957C:
	word16 sp_796 = sp_11 - 2
	Mem797[ss:sp_796:word16] = wArg08
	Mem800[ss:sp_796 - 2:word16] = wArg06
	wLoc06_130 = wLoc06_130 + 0x0001
	word16 sp_801
	byte SCZO_804
	byte SZO_807
	word16 cx_808
	bool C_810
	byte SO_811
	byte al_812
	word16 bx_813
	byte bl_814
	bool Z_815
	selector ds_816
	byte CZ_817
	byte cl_818
	selector es_819
	word16 dx_820
	byte dl_821
	byte dh_822
	byte ah_823
	call SEQ(0x0800, Mem800[ss:bp_300 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_290,al_289,ax_288,bl_299,bLoc03_279,bp_300,bx_298,C_292,cl_310,cx_308,CZ_281,dh_296,di_305,dl_295,ds_282,dx_293,es_297,SCZO_785,si_302,SO_791,sp_799,ss_284,SZO_794,wLoc02_4,wLoc06_793,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_786
		defs: ah_823,al_812,ax_809,bl_814,bp_802,bx_813,C_810,cl_818,cx_808,CZ_817,dh_822,di_806,dl_821,ds_816,dx_820,es_819,SCZO_804,si_805,SO_811,sp_801,ss_803,SZO_807,Z_815
	sp_11 = sp_801 + 4
	wArg0A = 0x0008
	branch al_812 == 0x78 l0800_9597
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9593:
	branch al_812 != 0x58 l0800_95C8
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x0008 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9597:
	wArg0A = 0x0010
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x0008 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9518:
	branch wArg0A >u 0x0024 l0800_9550
// DataOut: al ax cl di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_951D:
	branch cl_310 <u 0x02 l0800_9550
// DataOut: al ax cl di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9522:
	branch al_235 != 0x30 l0800_959E
// DataOut: al cl di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_959E:
	branch fn0800_9485(0x0A, (byte) ax_131) l0800_9550
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9550:
	wLoc08_127 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:0x0000 bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000E(32) Stack +0012(32)

l0800_9555:
	word16 sp_137 = sp_11 - 2
	Mem138[ss:sp_137:word16] = wArg08
	Mem141[ss:sp_137 - 2:word16] = wArg06
	Mem143[ss:sp_137 - 4:word16] = ax_131
	word16 sp_144
	word16 bp_145
	byte SCZO_147
	word16 si_148
	word16 di_149
	byte SZO_150
	word16 cx_151
	word16 ax_152
	bool C_153
	byte SO_154
	byte al_155
	word16 bx_156
	byte bl_157
	bool Z_158
	selector ds_159
	byte CZ_160
	byte cl_161
	selector es_162
	word16 dx_163
	byte dl_164
	byte dh_165
	byte ah_166
	call SEQ(0x0800, Mem143[ss:bp_33 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_63,al_62,ax_131,bl_45,bLoc03_125,bp_33,bx_44,C_67,cl_49,cx_57,CZ_48,dh_53,di_37,dl_52,ds_47,dx_51,es_50,SCZO_35,si_36,SO_66,sp_142,ss_129,SZO_65,wLoc02_4,wLoc06_130,wLoc08_127,wLoc0A_10,wLoc0C_13,Z_46
		defs: ah_166,al_155,ax_152,bl_157,bp_145,bx_156,C_153,cl_161,cx_151,CZ_160,dh_165,di_149,dl_164,ds_159,dx_163,es_162,SCZO_147,si_148,SO_154,sp_144,ss_146,SZO_150,Z_158
	sp_11 = sp_144 + 0x0006
	wLoc06_130 = wLoc06_130 - 0x0001
	ax_175 = 0x0000 (alias)
	word16 dx_177
	*dxOut = 0x0000
// DataOut: ax dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:0x0000 bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_95A8:
	si_302 = ax_131
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:0x000A ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9526:
	branch cl_310 != 0x10 l0800_959C
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_952B:
	word16 v31_740 = wArg0C_240 - 0x0001
	wArg0C_240 = v31_740
	branch v31_740 < 0x0000 l0800_956B
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_956B:
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_9530:
	word16 sp_748 = sp_11 - 2
	Mem749[ss:sp_748:word16] = wArg08
	Mem752[ss:sp_748 - 2:word16] = wArg06
	wLoc06_130 = wLoc06_130 + 0x0001
	word16 sp_753
	byte SCZO_756
	byte SZO_759
	word16 cx_760
	bool C_762
	byte SO_763
	byte al_764
	word16 bx_765
	byte bl_766
	bool Z_767
	selector ds_768
	byte CZ_769
	byte cl_770
	selector es_771
	word16 dx_772
	byte dl_773
	byte dh_774
	byte ah_775
	call SEQ(0x0800, Mem752[ss:bp_300 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_290,al_289,ax_288,bl_299,bLoc03_279,bp_300,bx_298,C_735,cl_310,cx_308,CZ_733,dh_296,di_305,dl_295,ds_282,dx_293,es_297,SCZO_738,si_302,SO_743,sp_751,ss_284,SZO_746,wLoc02_4,wLoc06_745,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_739
		defs: ah_775,al_764,ax_761,bl_766,bp_754,bx_765,C_762,cl_770,cx_760,CZ_769,dh_774,di_758,dl_773,ds_768,dx_772,es_771,SCZO_756,si_757,SO_763,sp_753,ss_755,SZO_759,Z_767
	sp_11 = sp_753 + 4
	branch al_764 == 0x78 l0800_959C
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9542:
	branch al_764 == 0x58 l0800_959C
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_959C:
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x0010 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9546:
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95C8:
	byte cl_451 = (byte) wArg0A
	byte bl_455 = (byte) ax_408
	bool C_456 = fn0800_9485(cl_451, bl_455)
	word16 ax_458 = ax_408
	branch C_456 l0800_95AB
// DataOut: ax di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95AB:
	int32 dx_ax_516 = wArg0A *u si_302
	ui32 di_si_523 = SEQ(di_305, ax_408 + (word16) dx_ax_516) + dx_ax_516
	di_305 = SLICE(di_si_523, word16, 16) (alias)
	si_302 = (word16) di_si_523 (alias)
	bp_555 = bp_300
	branch di_si_523 != 0x00000000 l0800_95E5
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95E5:
	word16 bp_555
	word16 v54_557 = wArg0C_240 - 0x0001
	wArg0C_240 = v54_557
	branch v54_557 < 0x0000 l0800_9612
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95EA:
	word16 sp_565 = sp_11 - 2
	Mem566[ss:sp_565:word16] = wArg08
	Mem569[ss:sp_565 - 2:word16] = wArg06
	wLoc06_130 = wLoc06_130 + 0x0001
	word16 sp_570
	byte SCZO_573
	word16 si_574
	word16 di_575
	byte SZO_576
	word16 cx_577
	word16 ax_578
	bool C_579
	byte SO_580
	byte al_581
	word16 bx_582
	byte bl_583
	bool Z_584
	selector ds_585
	byte CZ_586
	byte cl_587
	selector es_588
	word16 dx_589
	byte dl_590
	byte dh_591
	byte ah_592
	call SEQ(0x0800, Mem569[ss:bp_555 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_538,al_537,ax_536,bl_548,bLoc03_279,bp_555,bx_547,C_540,cl_529,cx_532,CZ_530,dh_544,di_549,dl_543,ds_531,dx_541,es_546,SCZO_545,si_552,SO_560,sp_568,ss_533,SZO_563,wLoc02_4,wLoc06_562,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_535
		defs: ah_592,al_581,ax_578,bl_583,bp_571,bx_582,C_579,cl_587,cx_577,CZ_586,dh_591,di_575,dl_590,ds_585,dx_589,es_588,SCZO_573,si_574,SO_580,sp_570,ss_572,SZO_576,Z_584
	sp_11 = sp_570 + 4
	ax_458 = ax_578
	branch fn0800_9485((byte) wArg0A, (byte) ax_578) l0800_95D4
// DataOut: ax cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95D4:
	int32 dx_ax_616 = wArg0A *u si_574
	word16 ax_617 = (word16) dx_ax_616
	ui32 ax_si_632 = SEQ(di_575, ax_578 + ax_617) + SEQ(SLICE(dx_ax_616, word16, 16), ax_617)
	int32 dx_ax_626 = wArg0A *u di_575
	si_302 = (word16) ax_si_632 (alias)
	di_305 = SLICE(ax_si_632, word16, 16)
	branch SLICE(dx_ax_626, byte, 16) + SLICE(dx_ax_626, byte, 24) + (ax_si_632 <u 0x00000000) != 0x00 l0800_9636
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9636:
	byte ah_657 = (bLoc03_14 <u 0xFF) + 0xFF
	ax_175 = DPB(0xFFFF, ah_657, 8) (alias)
	word16 dx_663
	*dxOut = (ah_657 <u 0x00) + 0x7FFF
	wLoc08_127 = 0x0002
// DataOut: ax dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_95B5:
	word16 v44_387 = wArg0C_240 - 0x0001
	wArg0C_240 = v44_387
	branch v44_387 < 0x0000 l0800_9612
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95BA:
	word16 sp_395 = sp_11 - 2
	Mem396[ss:sp_395:word16] = wArg08
	Mem399[ss:sp_395 - 2:word16] = wArg06
	wLoc06_130 = wLoc06_130 + 0x0001
	word16 sp_400
	byte SCZO_403
	byte SZO_406
	word16 cx_407
	bool C_409
	byte SO_410
	byte al_411
	word16 bx_412
	byte bl_413
	bool Z_414
	selector ds_415
	byte CZ_416
	byte cl_417
	selector es_418
	word16 dx_419
	byte dl_420
	byte dh_421
	byte ah_422
	call SEQ(0x0800, Mem399[ss:bp_300 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_369,al_368,ax_367,bl_379,bLoc03_279,bp_385,bx_378,C_371,cl_360,cx_363,CZ_361,dh_375,di_380,dl_374,ds_362,dx_372,es_377,SCZO_376,si_382,SO_390,sp_398,ss_364,SZO_393,wLoc02_4,wLoc06_392,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_366
		defs: ah_422,al_411,ax_408,bl_413,bp_401,bx_412,C_409,cl_417,cx_407,CZ_416,dh_421,di_405,dl_420,ds_415,dx_419,es_418,SCZO_403,si_404,SO_410,sp_400,ss_402,SZO_406,Z_414
	sp_11 = sp_400 + 4
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95D2:
// DataOut: ax di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000E(32) Stack +0012(32)

l0800_9602:
	word16 sp_477 = sp_11 - 2
	Mem478[ss:sp_477:word16] = wArg08
	Mem481[ss:sp_477 - 2:word16] = wArg06
	Mem483[ss:sp_477 - 4:word16] = ax_458
	word16 sp_484
	word16 bp_485
	byte SCZO_487
	byte SZO_490
	word16 cx_491
	word16 ax_492
	bool C_493
	byte SO_494
	byte al_495
	word16 bx_496
	byte bl_497
	bool Z_498
	selector ds_499
	byte CZ_500
	byte cl_501
	selector es_502
	word16 dx_503
	byte dl_504
	byte dh_505
	byte ah_506
	call SEQ(0x0800, Mem483[ss:bp_300 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_462,al_461,ax_468,bl_455,bLoc03_279,bp_447,bx_464,C_456,cl_451,cx_449,CZ_430,dh_440,di_444,dl_439,ds_431,dx_438,es_442,SCZO_441,si_445,SO_432,sp_482,ss_466,SZO_435,wLoc02_4,wLoc06_467,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_436
		defs: ah_506,al_495,ax_492,bl_497,bp_485,bx_496,C_493,cl_501,cx_491,CZ_500,dh_505,di_489,dl_504,ds_499,dx_503,es_502,SCZO_487,si_488,SO_494,sp_484,ss_486,SZO_490,Z_498
	sp_11 = sp_484 + 0x0006
	wLoc06_130 = wLoc06_130 - 0x0001
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_9612:
	word16 dx_333
	*dxOut = di_305
	ax_175 = si_302
	branch bLoc03_14 == 0x00 l0800_9622
// DataOut: ax dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_961B:
	ax_175 = -si_302
	word16 dx_353
	*dxOut = -di_305 - (ax_175 == 0x0000)
// DataOut: ax dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_9622:
	Mem103[ptrArg0E:word16] = Mem31[ptrArg0E:word16] + wLoc06_130
	Mem111[ptrArg12:word16] = wLoc08_127
	word16 bx_109
	*bxOut = wLoc08_127
// DataOut: ax bx dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> al:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16)

l0800_964C:
	word16 di_112
	*diOut = Mem111[ss:sp_11:word16]
	return ax_175
// DataOut: ax bx di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 cx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> al:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

fn0800_94B0_exit:
// DataOut: ax bx di dl dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> al:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>



void fn0800_9652(byte al, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al
// LiveOut:
// Trashed: ah ax ch cl cx dh dl dx eax ecx edx es esi rax rcx rdx rsi si sil
// Preserved: bp si sp
// Stack args: Stack +0002(32)
fn0800_9652_entry:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_9652:
	__syscall(0x21)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9652_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2B Sequence es:si:<invalid> cx:<invalid> dx:<invalid> si:si -4(fp):si -2(fp):bp



void fn0800_9667(byte al, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al
// LiveOut:
// Trashed: ah ax ch cl cx dh dl dx eax ecx edx es esi rax rcx rdx rsi si sil
// Preserved: bp si sp
// Stack args: Stack +0002(32)
fn0800_9667_entry:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_9667:
	__syscall(0x21)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9667_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2D Sequence es:si:<invalid> cx:<invalid> dx:<invalid> si:si -4(fp):si -2(fp):bp



word16 fn0800_9764(byte dl, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dl ds ss
// LiveOut: ax di dl ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_9764_entry:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0014(16) Stack +0002(16) Stack +0004(16)

l0800_9764:
	fn0800_8B95((byte) (fp - 0x0006), dl, DPB(ptrLoc12, fp - 0x0006, 0))
	fn0800_8BA8((byte) (fp - 0x000A), (byte) ss, DPB(ptrLoc12, fp - 0x000A, 0))
	word16 dx_48
	word16 di_49
	selector ds_50
	word16 ax_51 = fn0800_C04F(ds, DPB(ptrLoc16, fp - 0x0006, 0), DPB(ptrLoc12, fp - 0x000A, 0), out dx_48, out di_49, out ds_50)
	branch (wArg02 | wArg04) == 0x0000 l0800_97AC
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16) Stack +0002(32)

l0800_979C:
	Mem84[ptrArg02 + 0x0002:word16] = dx_48
	Mem85[ptrArg02:word16] = ax_51
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 ax:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> dx:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16)

l0800_97AC:
	byte dl_69
	*dlOut = (byte) dx_48
	return ax_51
// DataOut: ax di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_9764_exit:
// DataOut: ax di dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp



word16 fn0800_97B6(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_97B6_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_97B6:
	word16 dx_23
	return fn0800_8E29(0x00, ds, wArg02, 0x0000, 0x0000, 0x01, out dx_23)
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_97B6_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0001 -2(fp):bp



byte fn0800_97CC(selector ds, word16 wArg02, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al dl
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_97CC_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_97CC:
	byte al_18
	byte dl_8 = (byte) wArg02
	*dlOut = dl_8
	branch wArg02 != 0xFFFF l0800_97DC
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_97DC:
	branch (Mem0[ds:DPB(ax, 0x00, 8) + 0x2251:byte] & 0x08) == 0x00 l0800_97F2
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 dx:<invalid> -2(fp):bp

l0800_97F2:
	al_18 = dl_8
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 dx:<invalid> al:dl ah:0x00 bx:ax -2(fp):bp

l0800_97E9:
	al_18 = (byte) (DPB(ax, 0x00, 8) + 0xFFE0) (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 dx:<invalid> al:dl ah:0x00 bx:ax -2(fp):bp

l0800_97D7:
	al_18 = 0xFF (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 dx:<invalid> -2(fp):bp

l0800_97F6:
	return al_18
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:ax -2(fp):bp

fn0800_97CC_exit:
// DataOut: al dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:ax -2(fp):bp



byte fn0800_97F8(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: dl
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(32)
fn0800_97F8_entry:
// DataOut: al di ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_97F8:
	word16 ax_11 = DPB(ax, 0x41, 8)
	byte dl_16 = (byte) ptrArg02
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), (word16) ptrArg02) l0800_980A
// DataOut: ax di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_980A:
	fn0800_8D2B(ds, ax_11)
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_9806:
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_980E:
	return dl_16
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_97F8_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



word16 fn0800_9810(byte dh, byte dl, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dh di dl es
// LiveOut: di sp
// Trashed: SCZO ah al ax di dil eax edi esp rax rdi rsp sp spl
// Preserved:
fn0800_9810_entry:
// DataOut: bp dh di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9810:
	word16 di_6 = fn0800_9817(dh, di, es)
// DataOut: al bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9815_thunk_fn0800_9817:
	return fn0800_9817(dl, di_6, es)
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFE al:dl ax:<invalid> ah:<invalid> di:<invalid>

fn0800_9810_exit:
// DataOut: di sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFE al:<invalid> ax:<invalid> ah:<invalid> di:<invalid>



word16 fn0800_9817(byte al, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al di es
// LiveOut: di
// Trashed: SCZO ah al ax di dil eax edi rax rdi
// Preserved: ah sp
fn0800_9817_entry:
// DataOut: al bp di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9817:
	word16 ax_3 = __aam(al)
	byte al_4 = (byte) ax_3
	word16 di_11 = fn0800_9820(SLICE(ax_3, byte, 8), di, es)
// DataOut: al bp di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_981E_thunk_fn0800_9820:
	return fn0800_9820(al_4, di_11, es)
// DataOut: bp di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> al:ah ah:<invalid> di:<invalid>

fn0800_9817_exit:
// DataOut: di
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> al:<invalid> ah:<invalid> di:<invalid>



word16 fn0800_9820(byte al, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al di es
// LiveOut: di
// Trashed: SCZO al ax di dil eax edi rax rdi
// Preserved: sp
fn0800_9820_entry:
// DataOut: ah al bp di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9820:
	byte al_4
	bool C_5 = __daa(al + 0x90, &al_4)
	byte al_8
	__daa(al_4 + 0x40 + C_5, &al_8)
	Mem10[es:di:byte] = al_8
	return di + 0x0001
// DataOut: ah bp di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9820_exit:
// DataOut: di
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> di:di + 0x0001



byte fn0800_9828(word16 bp, selector ds, word16 wArg02, segptr32 ptrArg04, selector psegArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di es si sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_9828_entry:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32)

l0800_9828:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_988C:
	word16 sp_1010 = fp - 0x009E
	word16 wLoc06_22 = fp - 0x0098
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x009C bp:fp - 2 -156(fp):di -154(fp):si -24(fp):0x0000 -22(fp):0x0050 -20(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9895:
	word16 di_128 = wLoc06_22
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9898:
	word16 si_133 = (word16) ptrArg04
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16)

l0800_989B:
	byte al_148 = Mem0[ds:si_133:byte]
	si_133 = si_133 + 0x0001
	byte al_151 = al_148
	ax = DPB(ax, al_148, 0) (alias)
	branch al_148 == 0x00 l0800_98B3
// DataOut: al bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16)

l0800_98B3:
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0016(0)

l0800_98A1:
	branch al_148 == 0x25 l0800_98B6
// DataOut: al bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16)

l0800_98B6:
	al_151 = Mem0[ds:si_133:byte]
	ax = DPB(ax, al_151, 0) (alias)
	si_133 = si_133 + 0x0001
	branch al_151 == 0x25 l0800_98A5
// DataOut: al bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0016(8) Stack +0002(16)

l0800_98BF:
	wLoc06_22 = di_128
	byte ch_249 = 0x00
	word16 wLoc10_252 = 0x0000
	word16 wLoc04_1002 = 0x0020
	byte bLoc0D_1003 = 0x00
	word16 wLoc0A_255 = 0xFFFF
	word16 wLoc0C_256 = 0xFFFF
// DataOut: al bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_98DD:
	word16 ax_275 = DPB(ax, 0x00, 8)
	byte bl_281 = (byte) ax_275
	dl = (byte) ax_275 (alias)
	word16 bx_284 = DPB(ax_275, bl_281 - 0x20, 0)
	branch bl_281 >=u 0x80 l0800_98FE
// DataOut: bp bx ch cl dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_98EB:
	word16 bx_333 = DPB(ax_275, Mem0[ds:bx_284 + 0x2605:byte], 0)
	branch bx_333 <=u 0x0017 l0800_98F7
// DataOut: bp bx ch cl dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_98F7:
	word16 cx_1328
	selector es_1015
	word16 di_1014
	word16 bx_1040
	byte bh_1032
	word16 dx_1039
	word16 ax_1037
	byte bLoc08_1027
	word16 dx_1021
	switch (bx_333 << 0x0001) { l0800_9917 l0800_9901 l0800_994C l0800_990C l0800_997A l0800_9987 l0800_99C5 l0800_99CC l0800_99D1 l0800_9935 l0800_99FA l0800_99D8 l0800_99DC l0800_99E0 l0800_9A55 l0800_9B02 l0800_9AA5 l0800_9AC5 l0800_9C46 l0800_9C82 l0800_9C82 l0800_9C82 l0800_9927 l0800_992D }
// DataOut: bl bp ch cl dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_992D:
	wLoc04_1002 = wLoc04_1002 | 0x0020
// DataOut: bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9927:
	wLoc04_1002 = wLoc04_1002 & 0xFFDF
// DataOut: bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9C46:
	selector es_1418
	word16 di_1417
	branch (wLoc04_1002 & 0x0020) != 0x0000 l0800_9C5E
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0016(8) Stack +0002(8) Stack +0004(32)

l0800_9C5E:
	ptr32 es_di_1444 = Mem0[ds:wArg02:segptr32]
	di_1417 = (word16) es_di_1444 (alias)
	es_1418 = SLICE(es_di_1444, selector, 16) (alias)
	wArg02 = wArg02 + 0x0004
// DataOut: bp di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C53:
	di_1417 = Mem0[ss:wArg02:word16]
	word16 sp_1438 = sp_1010 - 2
	Mem1439[ss:sp_1438:word16] = ds
	wArg02 = wArg02 + 0x0002
	es_1418 = Mem1439[ss:sp_1438:selector]
// DataOut: bp di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C65:
	word16 ax_1421 = DPB(0x0050, 0x50 - bLoc16, 0)
	Mem1424[es_1418:di_1417:word16] = ax_1421
	ax = ax_1421
	branch (wLoc04_1002 & 0x0010) == 0x0000 l0800_9C7F
// DataOut: bp di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C78:
	Mem1433[es_1418:di_1417 + 0x0002:word16] = 0x0000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C7F:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AC5:
	bool Z_1345
	branch (wLoc04_1002 & 0x0020) != 0x0000 l0800_9AE2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(0) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AE2:
	ptr32 es_di_1392 = Mem0[ds:wArg02:segptr32]
	di_1014 = (word16) es_di_1392 (alias)
	es_1015 = SLICE(es_di_1392, selector, 16) (alias)
	wArg02 = wArg02 + 0x0004
	Z_1345 = (bool) cond(es_1015 | di_1014) (alias)
// DataOut: bp di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(0) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AD5:
	word16 di_1375 = Mem0[ss:wArg02:word16]
	word16 sp_1378 = sp_1010 - 2
	Mem1379[ss:sp_1378:word16] = ds
	wArg02 = wArg02 + 0x0002
	es_1015 = Mem1379[ss:sp_1378:selector]
	di_1014 = di_1375
	Z_1345 = (bool) cond(di_1375) (alias)
// DataOut: bp di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(0) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AED:
	branch Z_1345 l0800_9AF4
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(0) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AEF:
	word16 sp_1368 = sp_1010 - 2
	Mem1369[ss:sp_1368:word16] = ds
	es_1015 = Mem1369[ss:sp_1368:selector]
	di_1014 = 0x25FE
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(0) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AF4:
	cx_1328 = fn0800_9842(di_1014, es_1015)
	branch cx_1328 <=u wLoc0C_256 l0800_9AFF
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AFC:
	cx_1328 = wLoc0C_256
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:0x00 si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AFF:
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:0x00 si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AA5:
	word16 sp_1316 = sp_1010 - 2
	Mem1317[ss:sp_1316:word16] = ss
	wArg02 = wArg02 + 0x0002
	es_1015 = Mem1317[ss:sp_1316:selector]
	sp_1010 = sp_1316 + 2
	di_1014 = fp - 0x0047
	cx_1328 = 0x0001
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B02:
	word16 cx_1248 = wLoc0C_256
	branch wLoc0C_256 >= 0x0000 l0800_9B15
// DataOut: bp cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B12:
	cx_1248 = 0x0006
// DataOut: bp cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B15:
	word16 ax_1282
	word16 sp_1257 = sp_1010 - 2
	Mem1258[ss:sp_1257:word16] = ss
	Mem1260[ss:sp_1257 - 2:word16] = wArg02
	Mem1262[ss:sp_1257 - 4:word16] = cx_1248
	Mem1264[ss:sp_1257 - 6:word16] = ss
	Mem1267[ss:sp_1257 - 8:word16] = fp - 0x0047
	Mem1269[ss:sp_1257 - 10:word16] = ax_275
	Mem1273[ss:sp_1257 - 12:word16] = wLoc04_1002 & 0x0001
	branch (wLoc04_1002 & 0x0100) == 0x0000 l0800_9B36
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B36:
	wArg02 = wArg02 + 0x0008
	ax_1282 = 0x0006
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:fp - 0x0047 bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B2D:
	ax_1282 = 0x0008
	wArg02 = wArg02 + 0x000A
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:fp - 0x0047 bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B3D:
	Mem1285[ss:sp_1257 - 14:word16] = ax_1282
	fn0800_A2CC()
	Mem1287[ss:sp_1257 - 16:word16] = ss
	es_1015 = Mem1287[ss:sp_1257 - 16:selector]
	sp_1010 = sp_1257 - 14
	di_1014 = fp - 0x0047
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:fp - 0x0047 bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A55:
	word16 sp_1184 = sp_1010 - 2
	Mem1185[ss:sp_1184:word16] = Mem0[ss:wArg02:word16]
	word16 bx_1186 = wArg02 + 0x0001
	word16 di_1180 = fp - 0x0048
	wArg02 = bx_1186 + 0x0001
	branch (wLoc04_1002 & 0x0020) == 0x0000 l0800_9A80
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A70:
	word16 dx_1226 = Mem1185[ss:bx_1186 + 0x0001:word16]
	Mem1234[ss:sp_1184 - 2:word16] = ss
	selector es_1235 = Mem1234[ss:sp_1184 - 2:selector]
	word16 di_1237 = fn0800_9810(SLICE(dx_1226, byte, 8), (byte) dx_1226, fp - 0x0048, es_1235)
	Mem1240[es_1235:di_1237:byte] = 0x3A
	wArg02 = bx_1186 + 0x0003
	sp_1184 = sp_1184 + 0xFFFE
	di_1180 = di_1237 + 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0048 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A80:
	word16 sp_1199 = sp_1184 - 2
	Mem1200[ss:sp_1199:word16] = ss
	word16 dx_1204 = Mem1200[ss:sp_1199 + 2:word16]
	es_1015 = Mem1200[ss:sp_1199:selector]
	word16 di_1208 = fn0800_9810(SLICE(dx_1204, byte, 8), (byte) dx_1204, di_1180, es_1015)
	Mem1210[ss:di_1208:byte] = 0x00
	sp_1010 = sp_1199 + 0x0002
	wLoc04_1002 = wLoc04_1002 & 0xFFFB
	di_1014 = fp - 0x0048
	branch wLoc0C_256 > di_1208 - (fp - 0x0048) l0800_9AA2
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AA0:
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0048 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x00 -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AA2:
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0048 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x00 -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_99E0:
	bh_1032 = 0x10
	bx_1040 = DPB(bx_333 << 0x0001, dl + 0xE9, 0) (alias)
// DataOut: bh bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -000A(16) Local -000C(0) Local -0010(0) Local -0016(8) Stack +0002(16)

l0800_99DC:
	bh_1032 = 0x0A
	bx_1040 = DPB(bx_333 << 0x0001, 0x0A, 8) (alias)
// DataOut: bh bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16)

l0800_99D8:
	bh_1032 = 0x08
	bx_1040 = DPB(bx_333 << 0x0001, 0x08, 8) (alias)
// DataOut: bh bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -000A(16) Local -000C(0) Local -0010(0) Local -0016(8) Stack +0002(16)

l0800_99E6:
	bLoc0D_1003 = 0x00
// DataOut: bh bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16)

l0800_99EA:
	dx_1039 = 0x0000
	bLoc08_1027 = 0x00
	ax_1037 = Mem0[ss:wArg02:word16]
// DataOut: ax bh bp bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8)

l0800_99FA:
	int32 dx_ax_1139 = (int32) Mem0[ss:wArg02:word16]
	bh_1032 = 0x0A
	bx_1040 = DPB(bx_333 << 0x0001, 0x0A, 8) (alias)
	bLoc08_1027 = 0x01
	ax_1037 = (word16) dx_ax_1139 (alias)
	dx_1039 = SLICE(dx_ax_1139, word16, 16) (alias)
// DataOut: ax bh bp bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8)

l0800_9A0A:
	word16 di_1042 = wArg02 + 0x0001
	word16 di_1043 = di_1042 + 0x0001
	branch (wLoc04_1002 & 0x0010) == 0x0000 l0800_9A1B
// DataOut: ax bh bp bx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0004(32)

l0800_9A16:
	dx_1039 = Mem0[ss:di_1042 + 0x0001:word16]
	di_1043 = di_1042 + 0x0003
// DataOut: ax bh bp bx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0004(32)

l0800_9A1B:
	wArg02 = di_1043
	di_1014 = fp - 0x0047
	ax = ax_1037
	branch ax_1037 != 0x0000 l0800_9A32
// DataOut: ax bh bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A25:
	dl = (byte) dx_1039 (alias)
	branch dx_1039 != 0x0000 l0800_9A32
// DataOut: ax bh bp bx dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0047 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A32:
	wLoc04_1002 = wLoc04_1002 | 0x0004
// DataOut: ax bh bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0047 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A29:
	branch wLoc0C_256 != 0x0000 l0800_9A36
// DataOut: ax bh bp bx dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0047 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A36:
	word16 sp_1067 = sp_1010 - 2
	Mem1068[ss:sp_1067:word16] = dx_1039
	Mem1070[ss:sp_1067 - 2:word16] = ax_1037
	Mem1072[ss:sp_1067 - 4:word16] = ss
	Mem1074[ss:sp_1067 - 6:word16] = fp - 0x0047
	word16 ax_1076 = (int16) bh_1032
	Mem1078[ss:sp_1067 - 8:word16] = ax_1076
	Mem1082[ss:sp_1067 - 10:word16] = DPB(ax_1076, bLoc08_1027, 0)
	Mem1084[ss:sp_1067 - 12:word16] = bx_1040
	fn0800_8D87(bArg00, bArg02, si_133, ptrArg06, wArg08, wArg0A, wArg0C)
	Mem1093[ss:sp_1067:word16] = ss
	es_1015 = Mem1093[ss:sp_1067:selector]
	sp_1010 = sp_1067 + 2
	dx_1021 = wLoc0C_256
	branch wLoc0C_256 >= 0x0000 l0800_9A52
// DataOut: bp di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0047 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A52:
// DataOut: bp di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A4F:
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B46:
	branch (wLoc04_1002 & 0x0008) == 0x0000 l0800_9B65
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B4D:
	dx_1021 = wLoc0A_255
	branch wLoc0A_255 <= 0x0000 l0800_9B65
// DataOut: bp di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B54:
	word16 cx_972 = fn0800_9842(di_1014, es_1015)
	branch Mem0[es_1015:di_1014:byte] != 0x2D l0800_9B5E
// DataOut: bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B5D:
	cx_972 = cx_972 - 0x0001
// DataOut: bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:0x00 si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B5E:
	word16 dx_980 = dx_1021 - cx_972
	branch dx_980 <= 0x0000 l0800_9B65
// DataOut: bp di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:0x00 si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B62:
	wLoc10_252 = dx_980
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:0x00 si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B65:
	branch Mem0[es_1015:di_1014:byte] == 0x2D l0800_9B76
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B6B:
	branch bLoc0D_1003 == 0x00 l0800_9B86
// DataOut: al bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B72:
	di_1014 = di_1014 - 0x0001
	Mem947[es_1015:di_1014:byte] = bLoc0D_1003
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B76:
	branch wLoc10_252 <= 0x0000 l0800_9B86
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B7C:
	branch wLoc0C_256 >= 0x0000 l0800_9B86
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B83:
	wLoc10_252 = wLoc10_252 - 0x0001
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B86:
	cx_1328 = fn0800_9842(di_1014, es_1015)
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B89:
	word16 si_561 = di_1014
	word16 bx_565 = wLoc0A_255
	ax = wLoc04_1002 & 0x0005
	branch ax != 0x0005 l0800_9BAF
// DataOut: al bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B9C:
	ax = DPB(ax, dl, 8) (alias)
	branch dl != 0x6F l0800_9BB1
// DataOut: ah bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0007(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BB1:
	branch dl == 0x78 l0800_9BBB
// DataOut: ah bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:dl dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BB6:
	branch dl != 0x58 l0800_9BCC
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:dl dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BBB:
	word16 v40_869 = wLoc10_252 - 0x0002
	wLoc04_1002 = wLoc04_1002 | 0x0040
	bx_565 = wLoc0A_255 - 0x0002
	wLoc10_252 = v40_869
	branch v40_869 >= 0x0000 l0800_9BCC
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:dl dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BC7:
	wLoc10_252 = 0x0000
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:dl dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BA4:
	branch wLoc10_252 > 0x0000 l0800_9BAF
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:dl dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BAA:
	wLoc10_252 = 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:dl dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BAF:
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BCC:
	word16 cx_584 = cx_1328 + wLoc10_252
	branch (wLoc04_1002 & 0x0002) != 0x0000 l0800_9BE2
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BD6:
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BDE:
	branch bx_565 > cx_584 l0800_9BD8
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BD8:
	word16 dx_832
	word16 bx_833
	cx_584 = fn0800_984F(0x20, fp - 2, di_128, out dx_832, out bx_833, out di_128, out es_1015)
	sp_1010 = sp_1010 + 0xFFFE
	bx_565 = bx_833 - 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BE2:
	branch (wLoc04_1002 & 0x0040) == 0x0000 l0800_9BF4
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BE9:
	word16 dx_803
	word16 bx_804
	word16 di_805
	selector es_806
	fn0800_984F(0x30, fp - 2, di_128, out dx_803, out bx_804, out di_805, out es_806)
	word16 dx_810
	cx_584 = fn0800_984F(dl, fp - 2, di_805, out dx_810, out bx_565, out di_128, out es_1015)
	sp_1010 = sp_1010 + 0xFFFC
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BF4:
	word16 dx_614 = wLoc10_252
	dl = (byte) wLoc10_252 (alias)
	branch wLoc10_252 <= 0x0000 l0800_9C22
// DataOut: bp bx cx di dl ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BFB:
	byte al_725 = Mem0[es_1015:di_1014:byte]
	word16 cx_719 = cx_584 - wLoc10_252
	bx_565 = bx_565 - wLoc10_252
	ax = DPB(ax, al_725, 0) (alias)
	branch al_725 == 0x2D l0800_9C0E
// DataOut: al bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C06:
	branch al_725 == 0x20 l0800_9C0E
// DataOut: al bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C0A:
	branch al_725 != 0x2B l0800_9C15
// DataOut: bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C0E:
	si_561 = di_1014 + 0x0001
	sp_1010 = sp_1010 + 0xFFFE
	word16 bx_786
	selector es_788
	cx_719 = fn0800_984F(Mem0[ds:di_1014:byte], fp - 2, di_128, out dx_614, out bx_786, out di_128, out es_788) - 0x0001
	bx_565 = bx_786 - 0x0001
// DataOut: bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C15:
	word16 dx_746 = cx_719
	word16 cx_750 = dx_614
	branch dx_614 == 0x0000 l0800_9C20
// DataOut: bp bx cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C19:
	selector es_774
	word16 cx_775 = fn0800_984F(0x30, fp - 2, di_128, out dx_746, out bx_565, out di_128, out es_774)
	sp_1010 = sp_1010 + 0xFFFE
	cx_750 = cx_775 - 0x0001
	branch cx_775 != 0x0001 l0800_9C19
// DataOut: bp bx cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C20:
	dl = (byte) cx_750 (alias)
	cx_584 = dx_746
// DataOut: bp bx cx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C22:
	branch cx_584 == 0x0000 l0800_9C36
// DataOut: bp bx cx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C24:
	bx_565 = bx_565 - cx_584
// DataOut: bp bx cx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C26:
	Mem698[ss:di_128:byte] = Mem0[ds:si_561:byte]
	byte v45_701 = bLoc16 - 0x01
	si_561 = si_561 + 0x0001
	di_128 = di_128 + 0x0001
	bLoc16 = v45_701
	branch v45_701 > 0x00 l0800_9C34
// DataOut: bp bx cx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C31:
	word16 dx_712
	selector es_715
	cx_584 = fn0800_9858(fp - 2, di_128, out dx_712, out bx_565, out di_128, out es_715)
// DataOut: bp bx cx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C34:
	cx_584 = cx_584 - 0x0001
	branch cx_584 != 0x0000 l0800_9C26
// DataOut: bp bx cx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C36:
	branch bx_565 <= 0x0000 l0800_9C43
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C3A:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C3C:
	sp_1010 = sp_1010 + 0xFFFE
	word16 di_1458 = di_128
	word16 dx_673
	word16 bx_674
	selector es_676
	branch fn0800_984F(0x20, fp - 2, di_1458, out dx_673, out bx_674, out di_128, out es_676) != 0x0001 l0800_9C3C
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C43:
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A2F:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0047 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9935:
	branch ch_249 >u 0x00 l0800_9987
// DataOut: bp ch cl dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_993A:
	branch (wLoc04_1002 & 0x0002) != 0x0000 l0800_996A
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9941:
	wLoc04_1002 = wLoc04_1002 | 0x0008
	ch_249 = 0x01
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_99CC:
	wLoc04_1002 = wLoc04_1002 | 0x0100
// DataOut: bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_99D1:
	wLoc04_1002 = wLoc04_1002 & 0xFFEF
// DataOut: bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_99C5:
	wLoc04_1002 = wLoc04_1002 | 0x0010
// DataOut: bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9931:
	ch_249 = 0x05
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9987:
	word16 ax_463 = (int16) ((byte) ax_275 - 0x30)
	branch ch_249 >u 0x02 l0800_99A9
// DataOut: al ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_99A9:
	branch ch_249 != 0x04 l0800_9949
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_99AE:
	wLoc0C_256 = ax_463
	ax_275 = wLoc0C_256
	branch wLoc0C_256 == 0x0000 l0800_996A
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_99B5:
	word16 ax_501 = wLoc0C_256 << 0x0001
	ax_275 = ax_501 * 0x0005
	wLoc0C_256 = ax_463 + ax_501 * 0x0005
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9990:
	ch_249 = 0x02
	wLoc0A_255 = ax_463
	ax_275 = wLoc0A_255
	branch wLoc0A_255 < 0x0000 l0800_996A
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(8) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9999:
	word16 ax_481 = wLoc0A_255 << 0x0001
	ax_275 = ax_481 * 0x0005
	wLoc0A_255 = ax_463 + ax_481 * 0x0005
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> ch:0x02 es:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_997A:
	branch ch_249 >=u 0x04 l0800_9949
// DataOut: bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(8) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_997F:
	ch_249 = 0x04
	wLoc0C_256 = wLoc0C_256 + 0x0001
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_990C:
	branch ch_249 >u 0x00 l0800_98FE
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9911:
	wLoc04_1002 = wLoc04_1002 | 0x0002
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_994C:
	ax_275 = Mem0[ss:wArg02:word16]
	wArg02 = wArg02 + 0x0002
	branch ch_249 >=u 0x02 l0800_996D
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_996D:
	branch ch_249 != 0x04 l0800_9949
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9949:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Local -0016(0)

l0800_9972:
	wLoc0C_256 = ax_275
	ch_249 = ch_249 + 0x01
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_995B:
	branch ax_275 >= 0x0000 l0800_9965
// DataOut: ax bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_995F:
	ax_275 = -ax_275
	wLoc04_1002 = wLoc04_1002 | 0x0002
// DataOut: ax bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9965:
	wLoc0A_255 = ax_275
	ch_249 = 0x03
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_996A:
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> ch:<invalid> es:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9901:
	branch ch_249 >u 0x00 l0800_98FE
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9906:
	wLoc04_1002 = wLoc04_1002 | 0x0001
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9917:
	branch ch_249 >u 0x00 l0800_98FE
// DataOut: bp ch cl dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_98FE:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Local -0016(0)

l0800_991C:
	branch bLoc0D_1003 == 0x2B l0800_9925
// DataOut: bp ch cl dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9922:
	bLoc0D_1003 = dl
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9925:
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_98DB:
	ax = DPB(ax_275, Mem0[ds:si_133:byte], 0) (alias)
	si_133 = si_133 + 0x0001
// DataOut: al bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_98F4:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Local -0016(0)

l0800_9C82:
	word16 si_298 = si_133
	byte al_304 = 0x25
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0016(0)

l0800_9C8D:
	word16 dx_313
	word16 bx_314
	selector es_316
	fn0800_984F(al_304, fp - 2, di_128, out dx_313, out bx_314, out di_128, out es_316)
	byte al_319 = Mem0[ds:si_298:byte]
	si_298 = si_298 + 0x0001
	al_304 = al_319
	branch al_319 != 0x00 l0800_9C8D
// DataOut: al bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0016(0)

l0800_9C96:
	branch bLoc16 >= 0x50 l0800_9C9F
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_9C9C:
	word16 dx_212
	word16 bx_213
	word16 di_214
	selector es_215
	fn0800_9858(fp - 2, di_128, out dx_212, out bx_213, out di_214, out es_215)
// DataOut: dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_9C9F:
	branch 0x0000 == 0x0000 l0800_9CAB
// DataOut: dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_9CAB:
// DataOut: dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_9CA6:
// DataOut: dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_9CAE:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_9828_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_98A5:
	Mem227[ss:di_128:byte] = al_151
	byte v16_230 = bLoc16 - 0x01
	di_128 = di_128 + 0x0001
	bLoc16 = v16_230
	branch v16_230 > 0x00 l0800_989B
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16)

l0800_98AE:
	word16 dx_233
	word16 bx_234
	selector es_236
	fn0800_9858(fp - 2, di_128, out dx_233, out bx_234, out di_128, out es_236)
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -176(fp):ss -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16)



word16 fn0800_9842(word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di es
// LiveOut: cx
// Trashed: SCZO al ax ch cl cx eax ecx rax rcx
// Preserved: di sp
fn0800_9842_entry:
// DataOut: bp di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9842:
	word16 cx_13 = 0xFFFF
// DataOut: bp cx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9848:
	branch cx_13 == 0x0000 l0800_984A
// DataOut: bp cx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> al:0x00 di:<invalid> -2(fp):di

l0800_9848_1:
	di = di_29 + 0x0001
	cx_13 = cx_13 - 0x0001
	word16 di_29 = di
	branch 0x00 == Mem0[es:di_29:byte] l0800_9848
// DataOut: bp cx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> al:0x00 di:<invalid> -2(fp):di

l0800_984A:
	return ~cx_13 - 0x0001
// DataOut: bp cx ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> al:0x00 di:<invalid> -2(fp):di

fn0800_9842_exit:
// DataOut: cx
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> al:0x00 di:di -2(fp):di



word16 fn0800_984F(byte al, word16 bp, word16 di, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp di ss
// LiveOut: bx cx di dl dx es
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: sp
fn0800_984F_entry:
	*dxOut = dx
	*bxOut = bx
	*esOut = es
// DataOut: al bp bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_984F:
	Mem3[ss:di:byte] = al
	byte v8_8 = Mem3[ss:bp - 0x0014:byte] - 0x01
	Mem9[ss:bp - 0x0014:byte] = v8_8
	word16 di_6
	*diOut = di + 0x0001
	branch v8_8 != 0x00 l0800_988B_in_fn0800_984F
// DataOut: bp bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_988B_in_fn0800_984F:
	return cx
// DataOut: bp bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_9856_thunk_fn0800_9858:
	word16 dx_21
	word16 bx_22
	word16 di_23
	selector es_24
	return fn0800_9858(bp, di + 0x0001, out dx_21, out bx_22, out di_23, out es_24)
// DataOut: bp bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

fn0800_984F_exit:
// DataOut: bx cx di dl dx es
// DataOut (flags): 
// SymbolicIn: sp:fp di:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid>



word16 fn0800_9858(word16 bp, word16 di, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ss
// LiveOut: bx cx di dl dx es
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: sp
fn0800_9858_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9858:
	word16 sp_34
	word16 bx_35
	selector ss_36
	word16 cx_37
	word16 dx_38
	selector es_39
	word16 bp_40
	word16 ax_41
	word16 di_42
	byte SCZO_43
	byte SZO_44
	bool C_45
	bool Z_46
	call SEQ(0x0800, Mem0[ss:bp + 0x000E:word16]) (retsize: 2; depth: 20)
		uses: ax_22,bp,bx,cx,di_17,dx,es,SCZO_18,sp_32,ss,wLoc02_4,wLoc04_7,wLoc06_10,wLoc08_13,wLoc0A_21,wLoc0C_24,wLoc0E_26,wLoc10_30,wLoc12_33
		defs: ax_41,bp_40,bx_35,C_45,cx_37,di_42,dx_38,es_39,SCZO_43,sp_34,ss_36,SZO_44,Z_46
	branch ax_41 != 0x0000 l0800_987B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9876:
	Mem68[ss_36:bp_40 - 0x0016:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:di - (bp - 0x0096) -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

l0800_987B:
	Mem51[ss_36:bp_40 - 0x0014:word16] = 0x0050
	Mem53[ss_36:bp_40 - 0x0012:word16] = Mem51[ss_36:bp_40 - 0x0012:word16] + di_42
	word16 di_55
	*diOut = bp_40 - 0x0096
	selector es_56
	*esOut = Mem53[ss_36:sp_34:selector]
	word16 dx_58
	*dxOut = Mem53[ss_36:sp_34 + 2:word16]
	word16 cx_60 = Mem53[ss_36:sp_34 + 4:word16]
	word16 bx_62
	*bxOut = Mem53[ss_36:sp_34 + 6:word16]
// DataOut: bp bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:di - (bp - 0x0096) -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

l0800_988B:
	return cx_60
// DataOut: bp bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:bp - 0x0096 es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

fn0800_9858_exit:
// DataOut: bx cx di dl dx es
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> di:bp - 0x0096 es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx



word16 fn0800_9CE6(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax ds dx
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl ds dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_9CE6_entry:
	*dsOut = ds
// DataOut: sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_9CE6:
	word16 ax_19 = fn0800_BFC7(DPB(ptrLoc08, wArg06, 0), wArg08)
	fn0800_B03B(DPB(ptrLoc0E, wArg02, 0), wArg04, DPB(ptrLoc0A, wArg06, 0), ax_19 + 0x0001)
	word16 dx_48
	*dxOut = wArg04
	return wArg02 + ax_19
// DataOut: ax ds dx sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9CE6_exit:
// DataOut: ax ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> si:si ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



byte fn0800_9D41(word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9D41_entry:
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D41:
	word16 wLoc02_11
	selector ds_10
	branch dx == Mem0[0x0800:0x9D35:word16] l0800_9D7F
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D48:
	selector ds_43 = Mem0[dx:0x0002:selector]
	branch Mem0[ds_43:0x0002:word16] == 0x0000 l0800_9D5C
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D5C:
	branch ds_43 == Mem0[0x0800:0x9D35:word16] l0800_9D7A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid>
// LocalsOut: fp(16)

l0800_9D7A:
	dx = Mem0[0x0800:0x9D35:word16]
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid>
// LocalsOut: fp(16)

l0800_9D7F:
	Mem39[0x0800:0x9D35:word16] = 0x0000
	Mem40[0x0800:0x9D37:word16] = 0x0000
	Mem41[0x0800:0x9D39:word16] = 0x0000
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_9D65:
	Mem51[0x0800:0x9D37:word16] = Mem0[ds_43:0x0008:word16]
	fn0800_9E15(ds_43)
	wLoc02_11 = ds_43
	ds_10 = Mem51[0x0800:0x9D3B:selector]
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid>
// LocalsOut: Local -0002(0) Local -0004(0)

l0800_9D55:
	Mem46[0x0800:0x9D37:word16] = ds_43
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid>
// LocalsOut: fp(16)

l0800_9D94:
	ds_10 = Mem0[0x0800:0x9D3B:selector]
	wLoc02_11 = dx
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid>
// LocalsOut: Local -0002(0) Local -0004(0)

l0800_9D9D:
	return fn0800_A1D6(ds_10, 0x0000, wLoc02_11)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_9D41_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> dx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



byte fn0800_9DA4(word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx
// LiveOut: dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9DA4_entry:
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9DA4:
	selector es_7 = Mem0[dx:0x0002:selector]
	Mem8[dx:0x0002:word16] = 0x0000
	Mem9[dx:0x0008:word16] = es_7
	word16 wLoc02_12 = dx
	branch dx == Mem9[0x0800:0x9D35:word16] l0800_9DEA
// DataOut: dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_9DBC:
	branch Mem9[es_7:0x0002:word16] != 0x0000 l0800_9DEA
// DataOut: dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: fp(16) Local -0002(16)

l0800_9DEA:
	fn0800_9E3E(dx)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: Local -0002(16)

l0800_9DC4:
	word16 ax_44 = Mem9[dx:0x0000:word16]
	Mem50[es_7:0x0000:word16] = Mem9[es_7:0x0000:word16] + ax_44
	word16 dx_52 = dx + ax_44
	wLoc02_12 = es_7
	dl = (byte) dx_52 (alias)
	branch Mem50[dx_52:0x0002:word16] != 0x0000 l0800_9DE3
// DataOut: cx dl es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: Local -0002(16)

l0800_9DE3:
	Mem58[dx_52:0x0002:word16] = es_7
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ds:dx es:<invalid> ax:<invalid> bx:dx cx:<invalid> dx:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_9DDC:
	Mem57[dx_52:0x0008:word16] = es_7
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ds:dx es:<invalid> ax:<invalid> bx:dx cx:<invalid> dx:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_9DED:
	word16 ax_20 = wLoc02_12 + Mem9[wLoc02_12:0x0000:word16]
	branch Mem9[ax_20:0x0002:word16] == 0x0000 l0800_9DFF
// DataOut: dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ds:dx es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9DFF:
	Mem30[wLoc02_12:0x0000:word16] = Mem9[wLoc02_12:0x0000:word16] + Mem9[ax_20:0x0000:word16]
	Mem36[ax_20 + Mem30[ax_20:0x0000:word16]:0x0002:word16] = wLoc02_12
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9E11_thunk_fn0800_9E15:
	fn0800_9E15(ax_20)
	return dl
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9DFE:
	return dl
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

fn0800_9DA4_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>



void fn0800_9E15(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO bh bl bx ebx es rbx
// Preserved: ds sp
fn0800_9E15_entry:
// DataOut: dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9E15:
	branch ds == Mem0[ds:0x0006:word16] l0800_9E36
// DataOut: dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9E36:
	Mem15[0x0800:0x9D39:word16] = 0x0000
	return
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds

l0800_9E1D:
	selector es_9 = Mem0[ds:0x0006:selector]
	selector ds_10 = Mem0[ds:0x0004:selector]
	Mem11[ds_10:0x0006:word16] = es_9
	Mem12[es_9:0x0004:word16] = ds_10
	Mem13[0x0800:0x9D39:word16] = ds_10
	return
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds

fn0800_9E15_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds es:<invalid> ds:ds



void fn0800_9E3E(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bx eax ebx es rax rbx
// Preserved: sp ss
fn0800_9E3E_entry:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E3E:
	word16 ax_3 = Mem0[0x0800:0x9D39:word16]
	branch ax_3 == 0x0000 l0800_9E67
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E67:
	Mem29[0x0800:0x9D39:word16] = ds
	Mem30[ds:0x0004:word16] = ds
	Mem31[ds:0x0006:word16] = ds
	return
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

l0800_9E46:
	__cli()
	selector es_20 = Mem0[ax_3:0x0006:selector]
	Mem22[ax_3:0x0006:word16] = ds
	Mem23[ds:0x0004:word16] = ax_3
	Mem27[es_20:0x0004:word16] = ds
	Mem28[ds:0x0006:word16] = es_20
	return
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

fn0800_9E3E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> bx:ss ss:ss es:<invalid> -2(fp):<invalid>



byte fn0800_9E75(selector ds, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0004(16)
fn0800_9E75_entry:
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_9E75:
	Mem13[0x0800:0x9D3B:word16] = ds
	byte dl_17 = (byte) wArg04
	branch wArg04 == 0x0000 l0800_9E95
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E86:
	branch wArg04 != Mem13[0x0800:0x9D37:word16] l0800_9E92
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E92:
	dl_17 = fn0800_9DA4(wArg04)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E8D:
	dl_17 = fn0800_9D41(wArg04)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E95:
	selector ds_26
	*dsOut = Mem13[0x0800:0x9D3B:selector]
	return dl_17
// DataOut: dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:<invalid> ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_9E75_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ds:<invalid> di:di si:si ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp



word16 fn0800_9E9E(word16 ax, word16 bp, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut: ax bx dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9E9E_entry:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E9E:
	word16 dx_15
	word16 ax_16 = fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], 0x0000, 0x0000, out dx_15)
	branch (ax_16 & 0x000F) == 0x0000 l0800_9EC7
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_9EB3:
	word16 dx_86
	fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], 0x0010 - (ax_16 & 0x000F), 0x0000, out dx_86)
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):0x0000 -4(fp):0x0000 -2(fp):ax
// LocalsOut: fp(16) Local -0002(16)

l0800_9EC7:
	word16 bx_47
	*bxOut = ax
	word16 dx_43
	branch fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], ax << 0x04, (word16) SLICE(ax, byte, 8) >>u 0x04, out dx_43) == 0xFFFF l0800_9EFE
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

l0800_9EFE:
	word16 dx_74
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

l0800_9EE6:
	Mem61[0x0800:0x9D35:word16] = dx_43
	Mem62[0x0800:0x9D37:word16] = dx_43
	Mem64[dx_43:0x0000:word16] = ax
	Mem65[dx_43:0x0002:word16] = dx_43
	return 0x0004
// DataOut: ax bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

fn0800_9E9E_exit:
// DataOut: ax bx dx
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> Sequence dx:ax:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax



word16 fn0800_9F02(word16 ax, word16 bp, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah ax bp ss
// LiveOut: ax bx dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9F02_entry:
// DataOut: ah ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16)

l0800_9F02:
	selector ds_14 = Mem0[0x0800:0x9D3B:selector]
	word16 dx_117
	word16 ax_21 = fn0800_A215(bp, ds_14, ax << 0x04, (word16) ah >>u 0x04, out dx_117)
	branch ax_21 == 0xFFFF l0800_9F58
// DataOut: ax bp bx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9F20:
	branch (ax_21 & 0x000F) != 0x0000 l0800_9F3D
// DataOut: ax bp bx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax
// LocalsOut: fp(16)

l0800_9F3D:
	word16 dx_106
	branch fn0800_A215(bp, ds_14, -(ax_21 & 0x000F) + 0x0010, 0x0000, out dx_106) == 0xFFFF l0800_9F58
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

l0800_9F58:
	word16 dx_65
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

l0800_9F55:
	*dxOut = dx_117 + 0x0001
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):<invalid> -2(fp):ax

l0800_9F25:
	word16 cx_85 = Mem0[0x0800:0x9D37:word16]
	Mem86[0x0800:0x9D37:word16] = dx_117
	Mem88[dx_117:0x0000:word16] = ax
	Mem89[dx_117:0x0002:word16] = cx_85
	return 0x0004
// DataOut: ax bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

fn0800_9F02_exit:
// DataOut: ax bx dx
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> Sequence dx:ax:<invalid> cx:<invalid> dx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax



word16 fn0800_9F5C(word16 ax, word16 dx, selector ds, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax ds dx
// LiveOut: ax bx dx
// Trashed: SCZO ah al ax bh bl bx dh dl ds dx eax ebx edx rax rbx rdx
// Preserved: sp
fn0800_9F5C_entry:
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9F5C:
	Mem8[ds:0x0000:word16] = Mem0[ds:0x0000:word16] - ax
	word16 dx_9 = dx + Mem8[ds:0x0000:word16]
	*dxOut = dx_9
	Mem11[dx_9:0x0000:word16] = ax
	Mem12[dx_9:0x0002:word16] = dx
	word16 bx_14 = dx_9 + Mem12[dx_9:0x0000:word16]
	*bxOut = bx_14
	Mem17[bx_14:0x0002:word16] = dx_9
	return 0x0004
// DataOut: ax bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9F5C_exit:
// DataOut: ax bx dx
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> dx:<invalid> ds:<invalid> ax:0x0004



word16 fn0800_9F7F(word16 bp, selector ds, word16 wArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp di ds dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16)
fn0800_9F7F_entry:
	*siOut = si
	*diOut = di
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_9F7F:
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_9F87_thunk_fn0800_9F92:
	word16 dx_12
	word16 bx_13
	word16 bp_14
	selector ds_15
	return fn0800_9F92(wArg02, 0x0000, fp - 2, ds, bp, out dx_12, out bx_13, out bp_14, out ds_15)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 dx:0x0000 ax:<invalid> -2(fp):bp

fn0800_9F7F_exit:
// DataOut: ax bp di ds dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -2(fp):bp



word16 fn0800_9F89(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp bx ds dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_9F89_entry:
	*siOut = si
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_9F89:
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_9F8F_thunk_fn0800_9F92:
	word16 dx_14
	word16 bx_15
	word16 bp_16
	selector ds_17
	return fn0800_9F92(wArg02, wArg04, fp - 2, ds, bp, out dx_14, out bx_15, out bp_16, out ds_17)
// DataOut: ax bp bx ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 dx:<invalid> ax:<invalid> -2(fp):bp

fn0800_9F89_exit:
// DataOut: ax bp bx ds dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -2(fp):bp



word16 fn0800_9F92(word16 ax, word16 dx, word16 bp, selector ds, word16 wArg00, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds dx ss
// LiveOut: ax bp bx ds dx sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: di si
// Stack args: Stack +0000(16)
l0800_9F92:
	cx = ax
	cx = cx | dx
	SZO = cond(cx)
	Z = (bool) SZO (alias)
	C = false
	sp = sp - 2
	Mem0[ss:sp:word16] = si
	sp = sp - 2
	Mem0[ss:sp:word16] = di
	Mem0[0x0800:0x9D3B:word16] = ds
	branch Test(EQ,Z) l0800_9FFD
// DataOut: ax bp dx ss
// DataOut (flags): 
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	ax = fn0800_9F9F(ax, dx, bp, out dx, out bx, out bp, out ds)
	return ax
// DataOut: ax bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	ax = fn0800_9F9F(ax, dx, bp, out dx, out bx, out bp, out ds)
	return ax
// DataOut: ax bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn:

fn0800_9F92_entry:
	def fp
	def ax
	def dx
	def si
	def di
	def ds
	def dxOut
	def bxOut
	def bpOut
	def dsOut
	def bp
	def wArg00
	def bx
// DataOut: ax bp bx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l0800_9F92:
	sp_1 = fp
	cx_3 = ax
	cx_5 = cx_3 | dx
	SZO_6 = cond(cx_5)
	Z_7 = (bool) SZO_6 (alias)
	C_8 = false
	sp_9 = fp - 2
	wLoc02_11 = si
	sp_12 = fp - 4
	wLoc04_14 = di
	Mem16[0x0800:0x9D3B:word16] = ds
	branch cx_5 == 0x0000 l0800_9FFD_in_fn0800_9F92
// DataOut: ax bp bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FFD_in_fn0800_9F92:
	ds_35 = Mem16[0x0800:0x9D3B:selector]
	di_36 = wLoc04_14
	sp_37 = fp - 2
	si_38 = wLoc02_11
	sp_39 = fp
	bp_41 = wArg00
	sp_42 = fp + 2
	return ax
// DataOut: ax bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 cx:ax | dx -4(fp):di -2(fp):si

l0800_9F9D_thunk_fn0800_9F9F:
	ax_34 = fn0800_9F9F(ax, dx, bp, out dx_30, out bx_31, out bp_32, out ds_33)
	return ax_34
// DataOut: ax bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 cx:ax | dx -4(fp):di -2(fp):si

fn0800_9F92_exit:
	di_17 = PHI(di_36, di, di, di)
	si_18 = PHI(si_38, si, si, si)
	sp_19 = PHI(sp_42, sp_12, sp, sp)
	dx_20 = PHI(dx, dx_30, dx, dx)
	bx_21 = PHI(bx, bx_31, bx, bx)
	bp_22 = PHI(bp_41, bp_32, bp, bp)
	ds_23 = PHI(ds_35, ds_33, ds, ds)
	ax_24 = PHI(ax, ax_34, ax, ax)
	use dx_20 (=> dxOut)
	use bx_21 (=> bxOut)
	use bp_22 (=> bpOut)
	use ds_23 (=> dsOut)
// DataOut: ax bp bx ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -4(fp):di -2(fp):si



word16 fn0800_9F9F(word16 ax, word16 dx, word16 bp, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp dx ss
// LiveOut: ax bp bx ds dx sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_9F9F_entry:
	*bxOut = bx
// DataOut: ax bp bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l0800_9F9F:
	word16 ax_106
	int32 dx_ax_5 = SEQ(dx, ax + 0x0013)
	word16 ax_8 = (word16) (dx_ax_5 + 0x00000013)
	word16 dx_9 = SLICE(dx_ax_5 + 0x00000013, word16, 16)
	branch dx_ax_5 <u 0x00000013 l0800_9FE8
// DataOut: ax bp bx dl dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9FA7:
	branch (dx_9 & 0xFFF0) != 0x0000 l0800_9FE8
// DataOut: ax bp bx dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:ax + 0x0013 dx:<invalid>

l0800_9FE8:
	ax_106 = 0x0000 (alias)
	word16 dx_46
	*dxOut = 0x0000
// DataOut: ax bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:ax + 0x0013 dx:<invalid>

l0800_9FAD:
	word16 ax_61 = DPB(ax_8 >>u 0x04, SLICE(ax_8 >>u 0x04, byte, 8) | (byte) (dx_9 << 0x04), 8)
	branch Mem0[0x0800:0x9D35:word16] == 0x0000 l0800_9FDE
// DataOut: ah ax bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:ax + 0x0013 dx:<invalid>

l0800_9FDE:
	word16 dx_114
	word16 bx_115
	ax_106 = fn0800_9E9E(ax_61, bp, out dx_114, out bx_115)
// DataOut: ax bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl

l0800_9FBE:
	word16 dx_68 = Mem0[0x0800:0x9D39:word16]
	word16 dx_69
	*dxOut = dx_68
	branch dx_68 == 0x0000 l0800_9FD9
// DataOut: ah ax bp dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl

l0800_9FC7:
// DataOut: ah ax bp bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl

l0800_9FC9:
	branch Mem0[dx_69:0x0000:word16] >=u ax_61 l0800_9FED
// DataOut: ah ax bp bx ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FED:
	branch Mem0[dx_69:0x0000:word16] >u ax_61 l0800_9FE3
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FE3:
	word16 dx_109
	word16 bx_110
	ax_106 = fn0800_9F5C(ax_61, dx_69, dx_69, out dx_109, out bx_110)
// DataOut: ax bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FEF:
	fn0800_9E15(dx_69)
	word16 bx_104 = Mem0[dx_69:0x0008:word16]
	*bxOut = bx_104
	Mem105[dx_69:0x0002:word16] = bx_104
	ax_106 = 0x0004
// DataOut: ax bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FD1:
	dx_69 = Mem0[dx_69:0x0006:word16]
	*dxOut = dx_69
	branch dx_69 != dx_68 l0800_9FC9
// DataOut: ah ax bp bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FD9:
	word16 dx_84
	word16 bx_85
	ax_106 = fn0800_9F02(ax_61, bp, out dx_84, out bx_85)
// DataOut: ax bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FFD:
	selector ds_28
	*dsOut = Mem0[0x0800:0x9D3B:selector]
	word16 bp_34
	*bpOut = Mem0[ss:v3 + 4:word16]
	return ax_106
// DataOut: ax bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> bx:<invalid> bl:<invalid> cx:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid>

fn0800_9F9F_exit:
// DataOut: ax bp bx ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:v3 + 6 ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> cx:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid>



void fn0800_A006(word16 bx, word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp bx ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi rax rbp rbx rcx rdi rdx rsi si sil
// Preserved: bx dx sp
fn0800_A006_entry:
// DataOut: bp bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A006:
	word16 dx_14
	word16 bx_15
	word16 bp_16
	word16 si_17
	selector ds_18
	fn0800_9F89(bp, ds, Mem0[0x0800:0x9D3F:word16], Mem0[0x0800:0x9D3D:word16], out dx_14, out bx_15, out bp_16, out si_17, out ds_18)
	branch dx_14 != 0x0000 l0800_A01F
// DataOut: bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_A01F:
	selector ds_51 = Mem0[ss:fp - 0x0002:selector]
	Mem55[ss:fp - 2:word16] = dx_14
	Mem57[ss:fp - 4:word16] = ds_51
	Mem59[ss:fp - 6:word16] = bx_15
	word16 dx_60 = Mem59[ds_51:0x0000:word16]
	word16 di_65 = 0x0004
	word16 si_66 = 0x0004
	word16 cx_67 = 0x0006
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> ds:<invalid> di:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx
// LocalsOut: Local -0002(16)

l0800_A033:
	branch cx_67 == 0x0000 l0800_A035
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A035:
	word16 dx_104 = dx_60 - 0x0001
	branch dx_60 == 0x0001 l0800_A070
// DataOut: ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A039:
	selector es_105 = dx_14 + 0x0001
	selector ds_102 = ds_51 + 0x0001
// DataOut: ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A043:
	word16 di_108 = 0x0000
	word16 si_109 = 0x0000
	word16 cx_110 = dx_104
	branch dx_104 <=u 0x1000 l0800_A052
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A04F:
	cx_110 = 0x1000
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A052:
	word16 cx_116 = cx_110 << 0x0003
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A058:
	branch cx_116 == 0x0000 l0800_A05A
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A05A:
	dx_104 = dx_104 - 0x1000
	branch dx_104 <=u 0x0000 l0800_A070
// DataOut: ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A070:
	selector ds_89
	fn0800_9E75(Mem59[0x0800:0x9D3B:selector], wArg02, out ds_89)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_A060:
	es_105 = es_105 + 0x1000
	ds_102 = ds_102 + 0x1000
// DataOut: ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A058_1:
	Mem122[es_105:di_108:word16] = Mem59[ds_102:si_109:word16]
	si_109 = si_109 + 0x0002
	di_108 = di_108 + 0x0002
	cx_116 = cx_116 - 0x0001
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A033_1:
	Mem72[dx_14:di_65:word16] = Mem59[ds_51:si_66:word16]
	si_66 = si_66 + 0x0002
	di_65 = di_65 + 0x0002
	cx_67 = cx_67 - 0x0001
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A01D:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> ds:<invalid> di:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx

fn0800_A006_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp si:<invalid> dx:<invalid> bx:<invalid> bp:<invalid> ax:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_A080(word16 ax, word16 cx, word16 bx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx ds
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: sp
fn0800_A080_entry:
// DataOut: ax bx cx ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16)

l0800_A080:
	branch bx == Mem0[0x0800:0x9D37:word16] l0800_A0CB
// DataOut: ax bx cx ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16)

l0800_A0CB:
	Mem58[bx:0x0000:word16] = ax
	fn0800_A1D6(ds, 0x0000, bx + ax)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A087:
	word16 di_24 = bx + ax
	Mem29[di_24:0x0000:word16] = cx - ax
	Mem30[di_24:0x0002:word16] = bx
	Mem36[bx:0x0000:word16] = ax
	word16 dx_38 = bx + cx
	branch Mem36[dx_38:0x0002:word16] == 0x0000 l0800_A0B8
// DataOut: di ds es
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16) Local -0004(16) Local -0006(16)

l0800_A0B8:
	Mem54[dx_38:0x0008:word16] = di_24
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 di:bx + ax es:bx + cx si:cx - ax dx:bx + cx -4(fp):ax -2(fp):bx + ax
// LocalsOut: Local -0002(16) Local -0004(16) Local -0006(16)

l0800_A0B1:
	Mem53[dx_38:0x0002:word16] = di_24
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 di:bx + ax es:bx + cx si:cx - ax dx:bx + cx -4(fp):ax -2(fp):bx + ax
// LocalsOut: Local -0002(16) Local -0004(16) Local -0006(16)

l0800_A0BD:
	selector ds_44
	fn0800_9E75(ds, di_24, out ds_44)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 di:bx + ax es:bx + cx si:cx - ax dx:bx + cx -4(fp):ax -2(fp):bx + ax

fn0800_A080_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid> bx:<invalid> ax:0x0004 dx:bx di:bx + ax si:bx ds:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:0x04 ah:0x00 bl:<invalid> -6(fp):0x0000 -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_A162(selector ds, word16 wArg02, word16 wArg04, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A162_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A162:
	word16 ax_35
	word16 si_17 = wArg04 + 0x0001 - Mem0[ds:0x007B:word16] + 0x003F >>u 0x06
	branch si_17 != Mem0[ds:0x2698:word16] l0800_A18D
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A18D:
	word16 ax_66 = (si_17 << 0x06) + Mem0[ds:0x007B:word16]
	word16 si_62 = si_17 << 0x06
	word16 dx_63 = Mem0[ds:0x0091:word16]
	byte al_67 = (byte) ax_66
	branch ax_66 <=u dx_63 l0800_A1A5
// DataOut: al ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cl:0x06 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A19F:
	si_62 = dx_63 - Mem0[ds:0x007B:word16]
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1A5:
	word16 ax_76 = fn0800_A401(al_67, ds, Mem0[ds:0x007B:word16], si_62)
	byte dl_82
	*dlOut = (byte) ax_76
	branch ax_76 != 0xFFFF l0800_A1C1
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1C1:
	Mem92[ds:0x0091:word16] = Mem0[ds:0x007B:word16] + ax_76
	Mem93[ds:0x008F:word16] = 0x0000
	ax_35 = 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A1B6:
	Mem89[ds:0x2698:word16] = si_62 >>u 0x06
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A17B:
	Mem55[ds:0x008D:word16] = wArg04
	Mem56[ds:0x008B:word16] = wArg02
	byte dl_54
	*dlOut = (byte) wArg02
	ax_35 = 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A1D1:
	return ax_35
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A162_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



byte fn0800_A1D6(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A1D6_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1D6:
	byte dl_15
	branch (bool) fn0800_8F2F(wArg02, Mem0[ds:0x0089:word16], wArg04, Mem0[ds:0x0087:word16], out dl_15) l0800_A20C
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1EC:
	branch fn0800_8F2F(wArg02, Mem0[ds:0x0091:word16], wArg04, Mem0[ds:0x008F:word16], out dl_15) l0800_A20C
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1FF:
	branch fn0800_A162(ds, wArg02, wArg04, out dl_15) != 0x0000 l0800_A211
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -2(fp):bp

l0800_A211:
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A20C:
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A213:
	return dl_15
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A1D6_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A215(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A215_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A215:
	word16 ax_118
	word16 dx_15
	word16 ax_17 = fn0800_8C69(Mem0[ds:0x008D:word16], 0x04, 0x0000, wLoc0C, out dx_15) + Mem0[ds:0x008B:word16]
	ui32 dx_ax_26 = SEQ(dx_15 + (ax_17 <u 0x0000), ax_17 + wArg02) + _
	word16 ax_27 = (word16) dx_ax_26
	word16 dx_28 = SLICE(dx_ax_26, word16, 16)
	branch dx_28 < 0x000F l0800_A246
// DataOut: ax ds ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A237:
	branch dx_28 > 0x000F l0800_A23E
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A239:
	branch ax_27 <=u 0xFFFF l0800_A246
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A246:
	word16 dx_76
	word16 ax_77 = fn0800_8CCB(Mem0[ds:0x008B:word16], wArg04, Mem0[ds:0x008D:word16], wArg02, bp, out dx_76)
	byte dl_84
	branch (bool) fn0800_8F2F(ax_77, Mem0[ds:0x0089:word16], dx_76, Mem0[ds:0x0087:word16], out dl_84) l0800_A23E
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_A26C:
	byte dl_94
	branch fn0800_8F2F(ax_77, Mem0[ds:0x0091:word16], dx_76, Mem0[ds:0x008F:word16], out dl_94) l0800_A23E
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ch:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_A27F:
	word16 ax_96 = Mem0[ds:0x008D:word16]
	word16 dx_97 = Mem0[ds:0x008B:word16]
	Mem103[ss:fp - 0x000C:word16] = dx_76
	Mem107[ss:fp - 0x000E:word16] = ax_77
	byte dl_109
	branch fn0800_A162(ds, wArg00, wArg02, out dl_109) == 0x0000 l0800_A23E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A299:
	word16 dx_116
	*dxOut = ax_96
	ax_118 = dx_97
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A23E:
	word16 dx_66
	*dxOut = 0xFFFF
	ax_118 = 0xFFFF
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A29F:
	return ax_118
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A215_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A2A3(byte al, selector ds, word16 wArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: al ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0004(16) Stack +0006(32)
fn0800_A2A3_entry:
// DataOut: al di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(32)

l0800_A2A3:
	msdos_unknown_2144()
	word16 dx_11 = (word16) ptrArg06
	word16 ax_16 = DPB(ax, bArg04, 0)
	branch C l0800_A2C6
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_A2C6:
	ax_16 = fn0800_8D2B(ds, ax_16)
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2BA:
	branch wArg04 != 0x0000 l0800_A2C4
// DataOut: al ax di dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2C4:
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2C0:
	ax_16 = dx_11
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2CA:
	return ax_16
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 Sequence ds:dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A2A3_exit:
// DataOut: al ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence ds:dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_A2CC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0800_A2CC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A2CC:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x26F4:word16] (retsize: 2; depth: 2)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_A2CC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0800_A2D0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0800_A2D0_entry:
// DataOut: bp bx di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A2D0:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x26F6:word16] (retsize: 2; depth: 2)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut: bp bx di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_A2D0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0800_A2D4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0800_A2D4_entry:
// DataOut: bp bx di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A2D4:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x26F8:word16] (retsize: 2; depth: 2)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut: bp bx di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_A2D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0800_A2D8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0800_A2D8_entry:
// DataOut: bp bx di dl ds ss
// DataOut (flags): SO
// SymbolicIn: sp:fp

l0800_A2D8:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x26FA:word16] (retsize: 2; depth: 2)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut: bp bx di dl ds ss
// DataOut (flags): SO
// SymbolicIn: sp:fp

fn0800_A2D8_exit:
// DataOut:
// DataOut (flags): SO
// SymbolicIn: sp:fp



void fn0800_A36D(word16 ax, word16 cx, word16 dx, word16 bx, word16 si, word16 di, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx di ds dx es si
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ah sp
fn0800_A36D_entry:
// DataOut: ax bx cx di ds dx es si
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A36D:
	byte al_4 = (byte) ax
	branch ax == 0x0000 l0800_A378
// DataOut: ah al bx cx di ds dx es si
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A371:
	Mem62[es:di:byte] = al_4
	branch al_4 != 0x00 l0800_A378
// DataOut: ah bx cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:ax

l0800_A377:
// DataOut: ah cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:al

l0800_A378:
	branch cx == 0x0000 l0800_A394
// DataOut: cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:al bx:bx + 0x0001

l0800_A37F:
	byte al_37 = Mem0[ds:si:byte]
	branch al_37 == 0x22 l0800_A394
// DataOut: al cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:0x00 ah:ah bx:bx + 0x0001

l0800_A385:
	branch al_37 != 0x5C l0800_A392
// DataOut: cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:si + 0x0001 cx:cx - 0x0001 bx:bx + 0x0001

l0800_A38B:
	branch Mem0[ds:si + 0x0001:byte] != 0x22 l0800_A392
// DataOut: cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:si + 0x0001 cx:cx - 0x0001 bx:bx + 0x0001

l0800_A390:
// DataOut: si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:si + 0x0001 cx:cx - 0x0001 bx:bx + 0x0001

l0800_A392:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:<invalid> cx:<invalid> bx:bx + 0x0001

l0800_A394:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:<invalid> cx:<invalid> bx:bx + 0x0001

fn0800_A36D_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:<invalid> cx:<invalid> bx:bx + 0x0001



word16 fn0800_A401(byte al, selector ds, selector psegArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx eax ebx es rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A401_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A401:
	word16 ax_17
	word16 ax_8 = DPB(ax, 0x4A, 8)
	word16 bx_13
	branch msdos_resize_memory_block(psegArg02, wArg04, out bx_13) l0800_A415
// DataOut: ax bx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A415:
	fn0800_8D2B(ds, ax_8)
	ax_17 = bx_13
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x4A bx:<invalid> es:<invalid> -2(fp):bp

l0800_A410:
	ax_17 = 0xFFFF
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x4A bx:<invalid> es:<invalid> -2(fp):bp

l0800_A41B:
	return ax_17
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:<invalid> bx:<invalid> es:<invalid> ax:<invalid> al:<invalid> -6(fp):ax -4(fp):<invalid> -2(fp):bp

fn0800_A401_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> bx:<invalid> es:<invalid> ax:<invalid> al:<invalid> -6(fp):ax -4(fp):<invalid> -2(fp):bp



word16 fn0800_A471(byte bl, selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bl ds
// LiveOut: ax dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp di es si sp
// Stack args: Stack +0002(32)
fn0800_A471_entry:
// DataOut: bl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0002(32)

l0800_A471:
	selector es_19 = SLICE(ptrArg02, selector, 16)
	word16 si_157 = (word16) ptrArg02
	word16 ax_117 = 0x0000
	byte dl_141 = 0x00
	word16 dx_142 = 0x0000
	*dxOut = dx_142
	ui32 dh_bx_128 = DPB(dh_bx, 0x00, 8)
// DataOut: ax di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A487:
	byte bl_218 = Mem0[es_19:si_157:byte]
	bx = DPB(bx, bl_218, 0) (alias)
	dh_bx_128 = DPB(dh_bx_128, bl_218, 0) (alias)
	si_157 = si_157 + 0x0001
	branch (Mem0[ds:bx + 0x2251:byte] & 0x01) != 0x00 l0800_A487
// DataOut: ax bl di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:fp - 2 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A490:
	word16 bp_217 = 0x0000
	branch bl_218 == 0x2B l0800_A49E
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:fp - 2 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A498:
	branch bl_218 != 0x2D l0800_A4A2
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:0x0000 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A49D:
	bp_217 = 0x0001
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:0x0000 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A49E:
	bl_218 = Mem0[es_19:si_157:byte]
	bx = DPB(bx, bl_218, 0) (alias)
	dh_bx_128 = DPB(dh_bx_128, bl_218, 0) (alias)
	si_157 = si_157 + 0x0001
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4A2:
	branch bl_218 >u 0x39 l0800_A4D6
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4A7:
	byte bl_126 = bl_218 - 0x30
	bx = DPB(bx, bl_126, 0) (alias)
	dh_bx_128 = DPB(dh_bx_128, bl_126, 0) (alias)
	branch bl_126 <u 0x00 l0800_A4D6
// DataOut: ax bp bx ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4AC:
	ui32 dl_ax_139 = SEQ(dl_141, (word16) (ax_117 *u 0x000A) + bx) + dh_bx_128
	ax_117 = (word16) dl_ax_139 (alias)
	dl_141 = SLICE(dl_ax_139, byte, 16) (alias)
	*dxOut = SLICE(dl_ax_139, word16, 16)
	branch dl_ax_139 == 0x00000000 l0800_A49E
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4B4:
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4C8:
	byte bl_158 = Mem0[es_19:si_157:byte]
	si_157 = si_157 + 0x0001
	branch bl_158 >u 0x39 l0800_A4D6
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D1:
	bx = DPB(bx, bl_158 - 0x30, 0) (alias)
	branch bl_158 >=u 0x30 l0800_A4B6
// DataOut: ax bp bx ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4B6:
	int32 dx_ax_174 = ax_117 *u 0x000A
	int32 dx_ax_197 = SEQ((word16) (dx_142 *u 0x000A), (word16) dx_ax_174 + bx) + SEQ(SLICE(dx_ax_174, word16, 16), bx)
	ax_117 = (word16) dx_ax_197 (alias)
	*dxOut = SLICE(dx_ax_197, word16, 16)
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D6:
	branch bp_217 < 0x0001 l0800_A4E0
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D9:
	ax_117 = -ax_117
	word16 dx_119
	*dxOut = -dx_142 - (ax_117 == 0x0000)
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4E0:
	return ax_117
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dx:<invalid> dl:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp

fn0800_A471_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:di bl:<invalid> si:si dx:<invalid> es:es dl:<invalid> -10(fp):fp - 2 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp



selector fn0800_A4F6(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds
// LiveOut: ds
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_A4F6_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_A4F6:
	word16 ax_24 = fn0800_A53C(0x00, ds, DPB(ptrLoc08, wArg02, 0), 0x00, bp)
	branch ax_24 != 0xFFFF l0800_A513
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_A513:
	word16 dx_61 = ax_24 & 0xFFFE
	branch (wArg06 & 0x0080) != 0x0000 l0800_A520
// DataOut: ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A51D:
	dx_61 = ax_24 & 0xFFFE | 0x0001
// DataOut: ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A520:
	branch fn0800_A53C(0x01, ds, DPB(ptrLoc0A, wArg02, 0), 0x01, dx_61) == 0xFFFF l0800_A50F
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_A538:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):<invalid> -2(fp):bp

l0800_A50F:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A53A:
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A4F6_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A53C(byte al, selector ds, segptr32 ptrArg02, byte bArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: ax
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0006(8) Stack +0008(16)
fn0800_A53C_entry:
// DataOut: al di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(8) Stack +0008(16)

l0800_A53C:
	word16 ax_24
	msdos_unknown_2143()
	word16 ax_15 = DPB(ax, bArg06, 0)
	branch C l0800_A553
// DataOut: ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A553:
	ax_24 = fn0800_8D2B(ds, ax_15)
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 cx:<invalid> ah:0x43 al:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A550:
	ax_24 = wArg08
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 cx:<invalid> ah:0x43 al:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A557:
	return ax_24
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 cx:<invalid> ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A53C_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_A559(byte al, selector ds, word16 wArg02, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A559_entry:
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_A559:
	byte al_18
	byte dl_8
	*dlOut = (byte) wArg02
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_A56E
// DataOut: al di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A56E:
	Mem33[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	al_18 = fn0800_A57F(al, ds, wArg02)
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 dx:<invalid> -2(fp):bp

l0800_A565:
	al_18 = (byte) fn0800_8D2B(ds, 0x0006) (alias)
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 dx:<invalid> -2(fp):bp

l0800_A57D:
	return al_18
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 dx:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_A559_exit:
// DataOut: al dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



byte fn0800_A57F(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al
// Trashed: SCZO ah al ax bh bl bx eax ebx rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A57F_entry:
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_A57F:
	byte al_15
	word16 ax_8 = DPB(ax, 0x3E, 8)
	branch msdos_close_file(wArg02) l0800_A597
// DataOut: ax bx di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A597:
	al_15 = (byte) fn0800_8D2B(ds, ax_8) (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x3E bx:<invalid> -2(fp):bp

l0800_A58B:
	Mem21[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	al_15 = 0x00 (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x3E bx:<invalid> -2(fp):bp

l0800_A59B:
	return al_15
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:<invalid> bx:<invalid> ax:<invalid> al:0xFF -4(fp):ax -2(fp):bp

fn0800_A57F_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> bx:<invalid> ax:<invalid> al:0xFF -4(fp):ax -2(fp):bp



word16 fn0800_A59D(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A59D_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A59D:
	word16 wLoc08_107
	word16 ax_123
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_A5B2
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A5B2:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_A5C4
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A5C4:
	word16 ax_103 = 0x4400
	word16 dx_91
	branch msdos_ioctl_get_device_info(wArg02, out dx_91) l0800_A60C
// DataOut: ax bx di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5CE:
	branch (dl & 0x80) != 0x00 l0800_A608
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:0x4400 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5D3:
	ax_103 = 0x4201
	branch msdos_set_file_position(wArg02, 0x00000000, 0x01, 0x00004201) l0800_A60C
// DataOut: ax bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:0x4400 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5DE:
	ax_103 = 0x4202
	branch msdos_set_file_position(wArg02, 0x00000000, 0x02, 0x00004202) l0800_A60C
// DataOut: ax bx cx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:0x4201 bx:<invalid> cx:0x0000 dx:0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5F3:
	ax_103 = 0x4200
	branch msdos_set_file_position(wArg02, 0x00004201, 0x00, 0x42014200) l0800_A60C
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:0x4202 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A60C:
	wLoc08_107 = ax_103
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> bx:<invalid> cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A5FA:
	branch false l0800_A608
// DataOut: di ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5FF:
	branch false l0800_A606
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A601:
	branch false l0800_A608
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A608:
	ax_123 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A606:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5BF:
	ax_123 = 0x0001
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5AC:
	wLoc08_107 = 0x0006
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A60D:
	ax_123 = fn0800_8D2B(ds, wLoc08_107)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> bx:<invalid> cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A610:
	return ax_123
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> bx:<invalid> al:0xFF cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp

fn0800_A59D_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> al:0xFF cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp



byte fn0800_A614(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: al di dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_A614_entry:
	*diOut = di
	*dsOut = ds
	*dlOut = dl
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A614:
	word16 si_145 = 0xFFFF
	branch Mem0[ptrArg02 + 0x0012:word16] == wArg02 l0800_A62A
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A62A:
	word16 bx_63 = (word16) ptrArg02
	branch Mem0[ptrArg02 + 0x0006:word16] == 0x0000 l0800_A65F
// DataOut: bx di dl ds es sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A634:
	branch Mem0[ptrArg02:word16] >= 0x0000 l0800_A647
// DataOut: bx di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A63A:
	ptrLoc08 = DPB(ptrLoc08, bx_63, 0) (alias)
	byte dl_182
	branch fn0800_A6B7(ds, ptrLoc08, wArg04, out dl_182, out ds) != 0x0000 l0800_A6B2
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_A647:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0004) == 0x0000 l0800_A65F
// DataOut: bx di dl ds es sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_A652:
	byte dl_169
	*dlOut = fn0800_9E75(ds, Mem0[ptrArg02 + 0x000A:word16], out ds)
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +0002(32)

l0800_A65F:
	branch Mem0[ptrArg02 + 0x0004:byte] < 0x00 l0800_A675
// DataOut: bx di dl ds es sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ch:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +0002(32)

l0800_A669:
	word16 ax_136 = (int16) Mem0[ptrArg02 + 0x0004:byte]
	byte dl_140
	si_145 = DPB(ax_136, fn0800_A559((byte) ax_136, ds, ax_136, out dl_140), 0)
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ch:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_A675:
	Mem95[ptrArg02 + 0x0002:word16] = 0x0000
	Mem96[ptrArg02 + 0x0006:word16] = 0x0000
	Mem97[ptrArg02:word16] = 0x0000
	Mem98[ptrArg02 + 0x0004:byte] = 0xFF
	branch Mem98[ptrArg02 + 0x0010:word16] == 0x0000 l0800_A6B2
// DataOut: bx di dl ds es sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> es:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_A695:
	word16 dx_115
	word16 di_116
	selector ds_117
	byte al_118 = fn0800_8E6A(ds, Mem98[ptrArg02 + 0x0010:word16], 0x0000, 0x0000, 0x0000, 0x0000, out dx_115, out di_116, out ds_117)
	byte dl_125
	*dlOut = fn0800_97F8(al_118, ds_117, DPB(ptrLoc08, 0x4ED6, 0))
	Mem134[ptrArg02 + 0x0010:word16] = 0x0000
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> es:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A627:
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A6B2:
	return (byte) si_145
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A614_exit:
// DataOut: al di dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_A6B7(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax dl ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A6B7_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A6B7:
	word16 ax_29
	branch (wArg02 | wArg04) != 0x0000 l0800_A6C9
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6C9:
	branch Mem0[ptrArg02 + 0x0012:word16] == wArg02 l0800_A6DB
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6DB:
	branch Mem0[ptrArg02:word16] < 0x0000 l0800_A732
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A732:
	word16 ax_137 = Mem0[ptrArg02 + 0x0006:word16] + Mem0[ptrArg02:word16]
	Mem141[ptrArg02:word16] = Mem0[ptrArg02:word16] - (ax_137 + 0x0001)
	word16 ax_145 = Mem141[ptrArg02 + 0x000A:word16]
	word16 dx_146 = Mem141[ptrArg02 + 0x0008:word16]
	Mem148[ptrArg02 + 0x000E:word16] = ax_145
	Mem149[ptrArg02 + 0x000C:word16] = dx_146
	byte dl_158
	selector ds_159
	branch fn0800_C632(ds, (int16) Mem149[ptrArg02 + 0x0004:byte], dx_146, ax_145, ax_137 + 0x0001, out dl_158, out ds_159) == ax_137 + 0x0001 l0800_A778
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32)

l0800_A765:
	branch (Mem149[ptrArg02 + 0x0002:word16] & 0x0200) != 0x0000 l0800_A778
// DataOut: bx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A770:
	Mem171[ptrArg02 + 0x0002:word16] = Mem149[ptrArg02 + 0x0002:word16] | 0x0010
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A6E4:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0008) != 0x0000 l0800_A701
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6EC:
	byte dl_128
	*dlOut = (byte) (wArg02 + 0x0005)
	branch Mem0[ptrArg02 + 0x000E:word16] != wArg04 l0800_A778
// DataOut: bx di dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6FB:
	branch Mem0[ptrArg02 + 0x000C:word16] != wArg02 + 0x0005 l0800_A778
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A701:
	Mem111[ptrArg02:word16] = 0x0000
	byte dl_115
	*dlOut = (byte) (wArg02 + 0x0005)
	branch Mem111[ptrArg02 + 0x000E:word16] != wArg04 l0800_A778
// DataOut: bx di dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A718:
	branch Mem111[ptrArg02 + 0x000C:word16] != wArg02 + 0x0005 l0800_A778
// DataOut: bx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A71E:
	word16 dx_121 = Mem111[ptrArg02 + 0x0008:word16]
	Mem123[ptrArg02 + 0x000E:word16] = Mem111[ptrArg02 + 0x000A:word16]
	Mem124[ptrArg02 + 0x000C:word16] = dx_121
	byte dl_122
	*dlOut = (byte) dx_121
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A6D5:
	ax_29 = 0xFFFF
// DataOut: ax di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A6C3:
	selector ds_59
	byte dl_60
	*dlOut = fn0800_A877(ds, out ds_59)
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A778:
	ax_29 = 0x0000
// DataOut: ax di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A77A:
	return ax_29
// DataOut: ax di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A6B7_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> Sequence es:bx:<invalid> si:si dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_A77D(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)
fn0800_A77D_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_A77D:
	word16 di_130 = wArg06
	word16 cx_15 = 0x0000
	word16 wLoc06_160 = wArg02
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7A1:
	branch cx_15 == 0x000A l0800_A7D8
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7A6:
	di_130 = di_130 - 0x0001
	branch di_130 <= 0x0000 l0800_A7D8
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7A9:
	word16 ax_145
	word16 v17_136 = Mem0[ptrArg08:word16] - 0x0001
	Mem137[ptrArg08:word16] = v17_136
	branch v17_136 < 0x0000 l0800_A7C6
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_A7C6:
	ptrLoc0E = DPB(ptrLoc0E, wArg08, 0) (alias)
	ax_145 = fn0800_AEC2(ds, ptrLoc0E, wArg0A, out ds)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7B1:
	word16 ax_162 = Mem137[ptrArg08 + 0x000E:word16]
	Mem165[ptrArg08 + 0x000C:word16] = Mem137[ptrArg08 + 0x000C:word16] + 0x0001
	ax_145 = DPB(ax_162, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7D1:
	cx_15 = ax_145
	byte cl_152 = (byte) ax_145
	branch ax_145 != 0xFFFF l0800_A798
// DataOut: cl cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A798:
	Mem158[ptrLoc06:byte] = cl_152
	wLoc06_160 = wLoc06_160 + 0x0001
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7D8:
	word16 ax_109
	branch cx_15 != 0xFFFF l0800_A7F3
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_A7DD:
	branch wArg04 != wArg04 l0800_A7F3
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_A7E8:
	branch wLoc06_160 != wArg02 l0800_A7F3
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_A7F3:
	Mem100[ptrLoc06:byte] = 0x00
	branch (Mem100[ptrArg08 + 0x0002:word16] & 0x0010) == 0x0000 l0800_A80B
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A80B:
	word16 dx_114
	*dxOut = wArg04
	ax_109 = wArg02
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A805:
	word16 dx_108
	*dxOut = 0x0000
	ax_109 = 0x0000
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A7ED:
	word16 dx_124
	*dxOut = 0x0000
	ax_109 = 0x0000
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A811:
	return ax_109
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A77D_exit:
// DataOut: ax ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:si es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A817(byte al, selector ds, segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  SZDOP al ds
// LiveOut: ax dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp bx ds sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_A817_entry:
// DataOut: al ds si ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_A817:
	word16 ax_55
	word32 es_bx_9 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg06, selector, 16), (word16) ptrArg06)
	word16 bx_11 = (word16) es_bx_9
	bool C_29 = msdos_find_first_file(wArg0A, SLICE(ptrArg02, selector, 16), (word16) ptrArg02)
	msdos_set_DTA(SLICE(es_bx_9, selector, 16), bx_11)
	word16 ax_22 = DPB(ax, 0x4E, 8)
	byte dl_42
	*dlOut = (byte) bx_11
	branch C_29 l0800_A844
// DataOut: bx dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16)

l0800_A844:
	ax_55 = fn0800_8D2B(ds, ax_22)
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A840:
	ax_55 = 0x0000
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A848:
	return ax_55
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A817_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_A84A(byte al, selector ds, segptr32 ptrArg02, ptr16 & axOut, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  SZDOP al ds
// LiveOut: DP ax dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp bx ds sp
// Stack args: Stack +0002(32)
fn0800_A84A_entry:
// DataOut: al ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_A84A:
	word32 es_bx_9 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg02, selector, 16), (word16) ptrArg02)
	bool C_23 = msdos_find_next_file()
	word16 bx_11 = (word16) es_bx_9
	msdos_set_DTA(SLICE(es_bx_9, selector, 16), bx_11)
	word16 ax_22 = DPB(ax, 0x4F, 8)
	byte SCZDOP_25 = DPB(SCZDOP, C_23, 0)
	byte dl_36
	*dlOut = (byte) bx_11
	branch C_23 l0800_A871
// DataOut: bx dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16)

l0800_A871:
	word16 ax_69
	*axOut = fn0800_8D2B(ds, ax_22)
// DataOut: ax dl ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A86D:
	word16 ax_61
	*axOut = 0x0000
// DataOut: ax dl ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A875:
	return SCZDOP_25
// DataOut: ax dl ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A84A_exit:
// DataOut: ax dl
// DataOut (flags): DP
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_A877(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
fn0800_A877_entry:
	*dsOut = ds
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A877:
	word16 si_18 = Mem0[ds:0x24E8:word16]
	ds_37 = ds
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_A8A8:
	selector ds_37
	si_18 = si_18 - 0x0001
	branch si_18 != 0x0000 l0800_A88F
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_A88F:
	word16 bx_60 = (word16) ptrLoc06
	branch (Mem0[ptrLoc06 + 0x0002:word16] & 0x0003) == 0x0000 l0800_A8A4
// DataOut: bx di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_A89A:
	ptrLoc0E = DPB(ptrLoc0E, bx_60, 0) (alias)
	fn0800_A6B7(ds_37, ptrLoc0E, ds, out dl, out ds_37)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_A8A4:
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_A8AF:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_A877_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di si:si ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_A8B7(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(32)
fn0800_A8B7_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8B7:
	word16 dx_117
	word16 si_121
	word16 ax_150
	word16 di_12 = 0x0000
	byte cl_21 = Mem0[ptrArg0A:byte]
	branch cl_21 != 0x72 l0800_A8D5
// DataOut: cl di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8D5:
	branch cl_21 != 0x77 l0800_A8DF
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8DF:
	branch cl_21 != 0x61 l0800_A8EF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8EF:
	ax_150 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16)

l0800_A8E4:
	dx_117 = 0x0902
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8DA:
	dx_117 = 0x0302
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8E7:
	di_12 = 0x0080
	si_121 = 0x0002
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8CD:
	dx_117 = 0x0001
	si_121 = 0x0001
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8F3:
	byte cl_112 = Mem0[ptrArg0A:byte]
	branch cl_112 == 0x2B l0800_A914
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A901:
	branch Mem0[ptrArg0A:byte] != 0x2B l0800_A92B
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A90A:
	branch cl_112 == 0x74 l0800_A914
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A90F:
	branch cl_112 != 0x62 l0800_A92B
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A914:
	branch cl_112 != 0x2B l0800_A91F
// DataOut: cl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A919:
	cl_112 = Mem0[ptrArg0A:byte]
// DataOut: cl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A91F:
	dx_117 = dx_117 & 0xFFFC | 0x0004
	di_12 = 0x0180
	si_121 = 0x0003
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A92B:
	word16 dx_102
	branch cl_112 != 0x74 l0800_A936
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A936:
	branch cl_112 != 0x62 l0800_A941
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A941:
	dx_102 = dx_117 | Mem0[ds:0x2512:word16] & 0xC000
	branch (dx_102 & 0x8000) == 0x0000 l0800_A953
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A93B:
	dx_102 = dx_117 | 0x8000
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A950:
	si_121 = si_121 | 0x0040
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A930:
	dx_102 = dx_117 | 0x4000
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A953:
	Mem71[ds:0x2354:word16] = 0xC7B5
	Mem77[ptrArg06:word16] = dx_102
	Mem82[ptrArg02:word16] = di_12
	ax_150 = si_121
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16)

l0800_A967:
	return ax_150
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>

fn0800_A8B7_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di Sequence es:bx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> si:si dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>



word16 fn0800_A96D(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, segptr32 ptrArg0C, word16 wArg0E, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: ax di ds dx
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)
fn0800_A96D_entry:
	*dsOut = ds
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)

l0800_A96D:
	word16 ax_196
	word16 ax_34 = fn0800_A8B7(ds, DPB(ptrLoc12, fp - 0x0006, 0), DPB(ptrLoc0E, fp - 0x0004, 0), DPB(ptrLoc0A, wArg04, 0))
	Mem40[ptrArg0C + 0x0002:word16] = ax_34
	branch ax_34 == 0x0000 l0800_A9B9
// DataOut: bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -0010(16) Stack +0002(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)

l0800_A991:
	branch Mem40[ptrArg0C + 0x0004:byte] >= 0x00 l0800_A9CD
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):fp - 0x0004 -12(fp):ss -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -0010(16) Stack +0002(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)

l0800_A998:
	byte al_233 = fn0800_B140(si, di, ds, wArg08, wArg0A, wLoc04 | wArg02, wLoc06, out ds)
	Mem238[ptrArg0C + 0x0004:byte] = al_233
	branch al_233 >= 0x00 l0800_A9CD
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):fp - 0x0004 -12(fp):ss -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +000C(32) Stack +000E(16)

l0800_A9CD:
	fn0800_8D76((int16) Mem40[ptrArg0C + 0x0004:byte])
	branch 0x0000 == 0x0000 l0800_A9E7
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cl:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +000C(32) Stack +000E(16)

l0800_A9DE:
	Mem208[ptrArg0C + 0x0002:word16] = Mem40[ptrArg0C + 0x0002:word16] | 0x0200
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:0x0000 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x00 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +000C(32) Stack +000E(16)

l0800_A9E7:
	word16 ax_148
	branch (Mem40[ptrArg0C + 0x0002:word16] & 0x0200) == 0x0000 l0800_A9FB
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:0x0000 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x00 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +000C(16) Stack +000E(16)

l0800_A9FB:
	ax_148 = 0x0000
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:0x0200 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x02 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +000C(16) Stack +000E(16)

l0800_A9F6:
	ax_148 = 0x0001
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:0x0200 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x02 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +000C(16) Stack +000E(16)

l0800_A9FD:
	selector ds_168
	branch fn0800_BA89(ds, DPB(ptrLoc12, wArg0C, 0), wArg0E, 0x0000, 0x0000, ax_148, 0x0200, out ds_168) == 0x0000 l0800_AA1F
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x00 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Stack +000C(32) Stack +000E(16)

l0800_AA1F:
	Mem193[ptrArg0C + 0x0010:word16] = 0x0000
	word16 dx_194
	*dxOut = wArg0E
	ax_196 = wArg0C
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> cl:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp
// LocalsOut: fp(16)

l0800_AA12:
	byte dl_182
	word16 di_183
	selector ds_184
	fn0800_A614(ds_168, DPB(ptrLoc0A, wArg0C, 0), wArg0E, out dl_182, out di_183, out ds_184)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> cl:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp
// LocalsOut: fp(16)

l0800_A9B9:
	Mem115[ptrArg0C + 0x0004:byte] = 0xFF
	Mem116[ptrArg0C + 0x0002:word16] = 0x0000
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cl:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A9C7:
	word16 dx_94
	*dxOut = 0x0000
	ax_196 = 0x0000
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_AA2E:
	return ax_196
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

fn0800_A96D_exit:
// DataOut: ax di ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp



word16 fn0800_AA34(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
fn0800_AA34_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_AA34:
	word16 wLoc06_10 = 0x2358
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA42:
	branch Mem0[ptrLoc06 + 0x0004:byte] < 0x00 l0800_AA64
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA4C:
	wLoc06_10 = wLoc06_10 + 0x0014
	branch wLoc06_10 <u (word16) (Mem0[ds:0x24E8:word16] *s 0x0014) + 0x2358 l0800_AA42
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA64:
	word16 ax_43
	branch Mem0[ptrLoc06 + 0x0004:byte] < 0x00 l0800_AA74
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_AA74:
	word16 dx_56
	*dxOut = ds
	ax_43 = wLoc06_10
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_AA6E:
	word16 dx_51
	*dxOut = 0x0000
	ax_43 = 0x0000
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_AA7A:
	return ax_43
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_AA34_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_AA7E(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: ax di ds dx
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_AA7E_entry:
	*dsOut = ds
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_AA7E:
	word16 ax_28
	word16 dx_9
	word16 ax_10 = fn0800_AA34(ds, out dx_9)
	branch (ax_10 | dx_9) != 0x0000 l0800_AA97
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_AA97:
	word16 dx_79
	word16 di_80
	selector ds_81
	ax_28 = fn0800_A96D(si, di, ds, 0x0000, wArg06, wArg08, wArg02, wArg04, DPB(ptrLoc0A, ax_10, 0), dx_9, out dx_79, out di_80, out ds_81)
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_AA91:
	word16 dx_37
	*dxOut = 0x0000
	ax_28 = 0x0000
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_AAAF:
	return ax_28
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AA7E_exit:
// DataOut: ax di ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AAB3(word16 dx, selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds dx ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)
fn0800_AAB3_entry:
	*dsOut = ds
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAB3:
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB91:
	branch wArg06 == 0x0000 l0800_AB9A
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB97:
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AABB:
	word16 ax_102
	word16 v10_92 = wArg06 + 0x0001
	wArg06 = v10_92
	branch Mem0[ptrArg02 + 0x0006:word16] <=u v10_92 l0800_AACF
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AACF:
	ax_102 = Mem0[ptrArg02 + 0x0006:word16]
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AACA:
	ax_102 = v10_92
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAD6:
	word16 di_105 = ax_102
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_AB50
// DataOut: bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAE3:
	branch Mem0[ptrArg02 + 0x0006:word16] == 0x0000 l0800_AB50
// DataOut: bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAEA:
	branch Mem0[ptrArg02 + 0x0006:word16] >=u v10_92 l0800_AB50
// DataOut: bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAF3:
	branch Mem0[ptrArg02:word16] != 0x0000 l0800_AB50
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB50:
	word16 v18_160 = wArg06 - 0x0001
	wArg06 = v18_160
	branch v18_160 == 0x0000 l0800_AB8C
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB5A:
	di_105 = di_105 - 0x0001
	branch di_105 == 0x0000 l0800_AB8C
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB5D:
	word16 ax_204
	word16 v19_193 = Mem0[ptrArg02:word16] - 0x0001
	Mem194[ptrArg02:word16] = v19_193
	branch v19_193 < 0x0000 l0800_AB7A
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB7A:
	ptrLoc0A = DPB(ptrLoc0A, wArg02, 0) (alias)
	ax_204 = fn0800_AEC2(ds, ptrLoc0A, wArg04, out ds)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB65:
	word16 ax_221 = Mem194[ptrArg02 + 0x000E:word16]
	Mem224[ptrArg02 + 0x000C:word16] = Mem194[ptrArg02 + 0x000C:word16] + 0x0001
	ax_204 = DPB(ax_221, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB85:
	dx = ax_204
	byte dl_210 = (byte) ax_204
	branch ax_204 != 0xFFFF l0800_AB47
// DataOut: di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB47:
	Mem217[ptrArg08:byte] = dl_210
	wArg08 = wArg08 + 0x0001
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB8C:
	branch dx == 0xFFFF l0800_AB3D
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAF9:
	wArg06 = v10_92 - 0x0001
	word16 di_256 = 0x0000
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB0E:
	branch Mem0[ptrArg02 + 0x0006:word16] <=u wArg06 l0800_AB00
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB00:
	di_256 = di_256 + Mem0[ptrArg02 + 0x0006:word16]
	wArg06 = wArg06 - Mem0[ptrArg02 + 0x0006:word16]
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB1A:
	word16 ax_278 = (int16) Mem0[ptrArg02 + 0x0004:byte]
	ptrLoc0C = DPB(ptrLoc0C, wArg08, 0) (alias)
	word16 ax_282 = fn0800_8F50((byte) ax_278, ds, ax_278, ptrLoc0C, di_256)
	dx = ax_282
	wArg08 = wArg08 + ax_282
	branch ax_282 == di_256 l0800_AB91
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB36:
	wArg06 = wArg06 + (di_256 - ax_282)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:0xFF bx:<invalid> ah:0x3F cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16)

l0800_AB3D:
	Mem138[ptrArg02 + 0x0002:word16] = Mem0[ptrArg02 + 0x0002:word16] | 0x0020
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0006(16)

l0800_AB9A:
	return wArg06
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_AAB3_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si Sequence es:bx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_ABA3(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_ABA3_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABA3:
	word16 ax_116
	branch wArg06 != 0x0000 l0800_ABB6
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABB6:
	word16 dx_100
	word16 ax_80 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out dx_100)
	branch dx_100 >u 0x0001 l0800_ABF2
// DataOut: ax di ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABCD:
	branch dx_100 <u 0x0001 l0800_ABD3
// DataOut: ax di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABCF:
	branch false l0800_ABF2
// DataOut: di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABF2:
	word16 si_101 = wArg08 + 0x0001
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AC0B:
	word16 dx_150
	si_101 = si_101 - 0x0001
	branch si_101 == 0x0000 l0800_AC26
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AC12:
	Mem121[ss:fp - 0x000C:word16] = wArg04
	Mem124[ss:fp - 0x000E:word16] = wArg02
	Mem126[ss:fp - 0x0010:word16] = wArg06
	Mem130[ss:fp - 0x0012:word16] = wArg0C
	Mem134[ss:fp - 0x0014:word16] = wArg0A
	branch fn0800_AAB3(dx_100, ds, ptrArg00, wArg02, wArg04, ptrArg06, wArg08, out ds) == 0x0000 l0800_ABF8
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABF8:
	wArg04 = dx_150
	wArg02 = fn0800_8CCB(wArg02, 0x0000, wArg04, wArg06, bp, out dx_150)
	dx_100 = dx_150
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AC26:
	ax_116 = wArg08 - si_101
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_ABD3:
	selector ds_174
	ax_116 = (uint16) ((uint32) (uint16) (ax_80 - fn0800_AAB3(dx_100, ds, DPB(ptrLoc14, wArg0A, 0), wArg0C, ax_80, DPB(ptrLoc0E, wArg02, 0), wArg04, out ds_174)) /u wArg06)
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_ABB2:
	ax_116 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AC2B:
	return ax_116
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_ABA3_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> ax:<invalid> si:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



word16 fn0800_AC31(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32)
fn0800_AC31_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AC31:
	word16 si_105
	word16 cx_110
	branch Mem0[ptrArg02:word16] >= 0x0000 l0800_AC4D
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AC4D:
	int32 dx_ax_120 = (int32) Mem0[ptrArg02:word16]
	word16 dx_122 = SLICE(dx_ax_120, word16, 16)
	word16 ax_124 = ((word16) dx_ax_120 ^ dx_122) - dx_122
	cx_110 = ax_124
	si_105 = ax_124
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 Sequence es:bx:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AC41:
	word16 cx_108 = Mem0[ptrArg02 + 0x0006:word16] + Mem0[ptrArg02:word16]
	cx_110 = cx_108 + 0x0001
	si_105 = cx_108 + 0x0001
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 Sequence es:bx:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AC5C:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0040) != 0x0000 l0800_ACAA
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AC67:
	word16 wLoc06_58 = Mem0[ptrArg02 + 0x000C:word16]
	branch Mem0[ptrArg02:word16] >= 0x0000 l0800_ACA3
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_ACA3:
	cx_110 = cx_110 - 0x0001
	branch cx_110 != 0x0000 l0800_AC96
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_AC96:
	branch Mem0[ptrLoc06:byte] != 0x0A l0800_ACA3
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_ACA2:
	si_105 = si_105 + 0x0001
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_AC7E:
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_AC8D:
	cx_110 = cx_110 - 0x0001
	branch cx_110 != 0x0000 l0800_AC80
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_AC80:
	word16 v18_75 = wLoc06_58 - 0x0001
	ptrLoc06 = DPB(ptrLoc06, v18_75, 0) (alias)
	wLoc06_58 = v18_75
	branch Mem0[SLICE(ptrLoc06, selector, 16):v18_75:byte] != 0x0A l0800_AC8D
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_AC8C:
	si_105 = si_105 + 0x0001
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_AC94:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_ACAA:
	return si_105
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AC31_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> cx:<invalid> si:si ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_ACB3(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_ACB3_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_ACB3:
	word16 ax_118
	byte dl_22
	selector ds_23
	branch fn0800_A6B7(ds, DPB(ptrLoc08, wArg02, 0), wArg04, out dl_22, out ds_23) == 0x0000 l0800_ACCE
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_ACCE:
	branch wArg0A != 0x0001 l0800_ACEA
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_ACD3:
	word16 bx_129 = (word16) ptrArg02
	branch Mem0[ptrArg02:word16] <= 0x0000 l0800_ACEA
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_ACDC:
	wArg06 = wArg06 - (word16) ((int32) fn0800_AC31(DPB(ptrLoc08, bx_129, 0)))
	wArg08 = v21
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_ACEA:
	Mem87[ptrArg02 + 0x0002:word16] = Mem0[ptrArg02 + 0x0002:word16] & 0xFE5F
	Mem90[ptrArg02:word16] = 0x0000
	word16 dx_92 = Mem90[ptrArg02 + 0x0008:word16]
	Mem93[ptrArg02 + 0x000E:word16] = Mem90[ptrArg02 + 0x000A:word16]
	Mem94[ptrArg02 + 0x000C:word16] = dx_92
	word16 ax_105 = (int16) Mem94[ptrArg02 + 0x0004:byte]
	word16 dx_109
	word16 ax_110 = fn0800_8E29((byte) ax_105, ds_23, ax_105, wArg06, wArg08, (byte) wArg0A, out dx_109)
	branch dx_109 != 0xFFFF l0800_AD2A
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_AD20:
	branch ax_110 != 0xFFFF l0800_AD2A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_AD2A:
	ax_118 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_AD25:
	ax_118 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_ACC9:
	ax_118 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AD2C:
	return ax_118
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_ACB3_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_AD2F(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp dx sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_AD2F_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AD2F:
	word16 dx_18
	word16 ax_19 = fn0800_97B6(ds, (int16) Mem0[ptrArg02 + 0x0004:byte], out dx_18)
	word16 wLoc06_25 = ax_19
	branch dx_18 != 0xFFFF l0800_AD52
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0004(16)

l0800_AD4D:
	branch ax_19 == 0xFFFF l0800_AD7B
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0004(16)

l0800_AD52:
	word16 bx_51 = (word16) ptrArg02
	branch Mem0[ptrArg02:word16] >= 0x0000 l0800_AD6B
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_AD6B:
	wLoc06_25 = ax_19 - (word16) ((int32) fn0800_AC31(DPB(ptrLoc0A, wArg02, 0)))
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16)

l0800_AD5B:
	wLoc06_25 = ax_19 + (word16) ((int32) fn0800_AC31(DPB(ptrLoc0A, bx_51, 0)))
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16)

l0800_AD7B:
	return wLoc06_25
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ah:0x42 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AD2F_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AD85(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_AD85_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AD85:
	word16 ax_144
	branch wArg06 == 0x0000 l0800_AE07
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AD94:
	word16 dx_92
	word16 ax_93 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out dx_92)
	branch dx_92 >u 0x0001 l0800_ADC9
// DataOut: ax di ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADAB:
	branch dx_92 <u 0x0001 l0800_ADB1
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADAD:
	branch false l0800_ADC9
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADC9:
	word16 si_104 = 0x0000
	branch 0x0000 >=u wArg08 l0800_AE07
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADD0:
	Mem117[ss:fp - 0x000C:word16] = wArg04
	Mem120[ss:fp - 0x000E:word16] = wArg02
	Mem122[ss:fp - 0x0010:word16] = wArg06
	Mem126[ss:fp - 0x0012:word16] = wArg0C
	Mem130[ss:fp - 0x0014:word16] = wArg0A
	word16 ax_134 = fn0800_B4BE(ds, ptrArg00, wArg02, wArg04, ptrArg06, wArg08, out ds)
	branch false l0800_ADEA
// DataOut: ax di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADE6:
	branch ax_134 == wArg06 l0800_ADEE
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADEE:
	wArg04 = dx_154
	word16 dx_154
	wArg02 = fn0800_8CCB(wArg02, 0x0000, wArg04, wArg06, bp, out dx_154)
	si_104 = si_104 + 0x0001
	branch si_104 <u wArg08 l0800_ADD0
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AE07:
	ax_144 = wArg08
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_ADEA:
	ax_144 = si_104
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_ADB1:
	selector ds_180
	ax_144 = (uint16) ((uint32) (uint16) fn0800_B4BE(ds, DPB(ptrLoc14, wArg0A, 0), wArg0C, ax_93, DPB(ptrLoc0E, wArg02, 0), wArg04, out ds_180) /u wArg06)
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_AE0A:
	return ax_144
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_AD85_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> ax:<invalid> si:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



selector fn0800_AE10(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
fn0800_AE10_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_AE10:
	word16 si_11 = 0x0014
	ds_30 = ds
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AE40:
	selector ds_30
	si_11 = si_11 - 0x0001
	branch si_11 != 0x0000 l0800_AE24
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AE24:
	word16 bx_48 = (word16) ptrLoc06
	branch (Mem0[ptrLoc06 + 0x0002:word16] & 0x0300) != 0x0300 l0800_AE3C
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_AE33:
	ptrLoc0C = DPB(ptrLoc0C, bx_48, 0) (alias)
	byte dl_72
	fn0800_A6B7(ds_30, ptrLoc0C, ds, out dl_72, out ds_30)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_AE3C:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AE47:
	return ds_30
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_AE10_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_AE4C(selector ds, segptr32 ptrArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_AE4C_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AE4C:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_AE5D
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AE5A:
	ds = fn0800_AE10(ds)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AE5D:
	word16 ax_51
	word16 v11_19 = Mem0[ptrArg02 + 0x0006:word16]
	word16 ax_22 = Mem0[ptrArg02 + 0x000A:word16]
	word16 dx_23 = Mem0[ptrArg02 + 0x0008:word16]
	Mem24[ptrArg02 + 0x000E:word16] = ax_22
	Mem25[ptrArg02 + 0x000C:word16] = dx_23
	selector ds_36
	word16 ax_37 = fn0800_B97F(ds, (int16) Mem25[ptrArg02 + 0x0004:byte], DPB(ptrLoc08, dx_23, 0), ax_22, v11_19, out ds_36)
	Mem42[ptrArg02:word16] = ax_37
	branch ax_37 <= 0x0000 l0800_AE95
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(32)

l0800_AE95:
	branch Mem42[ptrArg02:word16] != 0x0000 l0800_AEAE
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Stack +0002(32)

l0800_AEAE:
	Mem87[ptrArg02:word16] = 0x0000
	Mem89[ptrArg02 + 0x0002:word16] = Mem87[ptrArg02 + 0x0002:word16] | 0x0010
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AE9E:
	Mem83[ptrArg02 + 0x0002:word16] = Mem42[ptrArg02 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AEBB:
	ax_51 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AE8C:
	Mem59[ptrArg02 + 0x0002:word16] = Mem42[ptrArg02 + 0x0002:word16] & 0xFFDF
	ax_51 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AEBE:
	return ax_51
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AE4C_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AEC2(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: al ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_AEC2_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_AEC2:
	Mem12[ptrArg02:word16] = Mem0[ptrArg02:word16] + 0x0001
	selector ds_23
	return fn0800_AED6(ds, DPB(ptrLoc06, (word16) ptrArg02, 0), wArg04, out ds_23)
// DataOut: al ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_AEC2_exit:
// DataOut: al ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):bp



word16 fn0800_AED6(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: al ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_AED6_entry:
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_AED6:
	word16 ax_100
	branch (wArg02 | wArg04) != 0x0000 l0800_AEE8
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AEE8:
	word16 ax_122
	branch Mem0[ptrArg02:word16] <= 0x0000 l0800_AF0B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF0B:
	branch Mem0[ptrArg02:word16] < 0x0000 l0800_AF7F
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF14:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0110) != 0x0000 l0800_AF7F
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF1C:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0001) == 0x0000 l0800_AF7F
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF24:
	Mem158[ptrArg02 + 0x0002:word16] = Mem0[ptrArg02 + 0x0002:word16] | 0x0080
	word16 bx_155 = (word16) ptrArg02
	branch Mem158[ptrArg02 + 0x0006:word16] == 0x0000 l0800_AF43
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF43:
	branch (Mem158[ptrArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_AF51
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF4E:
	ds = fn0800_AE10(ds)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF51:
	ptrLoc0A = DPB(ptrLoc0A, 0x4EE4, 0) (alias)
	word16 ax_209 = fn0800_B97F(ds, (int16) Mem158[ptrArg02 + 0x0004:byte], ptrLoc0A, ds, 0x0001, out ds)
	branch ax_209 != 0x0000 l0800_AF9E
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +0002(32)

l0800_AF9E:
	branch Mem158[ds:0x4EE4:byte] != 0x0D l0800_AFB0
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFA5:
	branch (Mem158[ptrArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_AF43
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFB0:
	Mem243[ptrArg02 + 0x0002:word16] = Mem158[ptrArg02 + 0x0002:word16] & 0xFFDF
	ax_122 = DPB(ax_209, Mem243[ds:0x4EE4:byte], 0) (alias)
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AF6D:
	branch fn0800_A59D(ds, (int16) Mem158[ptrArg02 + 0x0004:byte]) == 0x0001 l0800_AF8A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF8A:
	Mem235[ptrArg02 + 0x0002:word16] = Mem158[ptrArg02 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:0xFF dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AF7F:
	Mem145[ptrArg02 + 0x0002:word16] = Mem0[ptrArg02 + 0x0002:word16] | 0x0010
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:0xFF dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AF34:
	selector ds_168
	branch fn0800_AE4C(ds, DPB(ptrLoc08, bx_155, 0), out ds_168) == 0x0000 l0800_AEF1
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF3F:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AEF1:
	Mem114[ptrArg02:word16] = Mem0[ptrArg02:word16] - 0x0001
	word16 ax_115 = Mem114[ptrArg02 + 0x000E:word16]
	word16 si_116 = Mem114[ptrArg02 + 0x000C:word16]
	Mem118[ptrArg02 + 0x000C:word16] = Mem114[ptrArg02 + 0x000C:word16] + 0x0001
	ax_122 = DPB(ax_115, Mem118[ax_115:si_116:byte], 0) (alias)
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AFBB:
	ax_100 = DPB(ax_122, 0x00, 8) (alias)
// DataOut: al ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AEE2:
	ax_100 = 0xFFFF
// DataOut: al ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AFBD:
	return ax_100
// DataOut: al ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_AED6_exit:
// DataOut: al ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> si:si Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_AFCB(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32)
fn0800_AFCB_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFCB:
	word16 ax_188
	word16 di_15 = (word16) ptrArg02
	selector es_16 = SLICE(ptrArg02, selector, 16)
	branch (es_16 | di_15) == 0x0000 l0800_AFFC
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFDC:
	byte ah_82 = Mem0[ptrArg02:byte]
	word16 cx_205 = 0xFFFF
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 Sequence es:di:<invalid> ax:es | di -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE5:
	branch cx_205 == 0x0000 l0800_AFE7
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE5_1:
	di_15 = di_206 + 0x0001
	cx_205 = cx_205 - 0x0001
	word16 di_206 = di_15
	branch 0x00 == Mem0[es_16:di_206:byte] l0800_AFE5
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE7:
	word16 cx_95 = ~cx_205
	branch cx_95 == 0x0001 l0800_AFFC
// DataOut: ah cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFEC:
	ptr32 es_di_99 = Mem0[ds:0x26AA:segptr32]
	word16 di_100 = (word16) es_di_99
	word16 wLoc06_108 = di_100
	branch (SLICE(es_di_99, selector, 16) | di_100) != 0x0000 l0800_B009
// DataOut: ah cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B009:
	ptr32 es_di_121 = Mem0[ds:di_100:segptr32]
	word16 di_122 = (word16) es_di_121
	selector es_123 = SLICE(es_di_121, selector, 16)
	word16 cx_112 = cx_95 - 0x0001
	branch (es_123 | di_122) == 0x0000 l0800_AFFC
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B012:
	byte al_129 = Mem0[es_di_121:byte]
	branch al_129 == 0x00 l0800_AFFC
// DataOut: ah al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B019:
	branch ah_82 != al_129 l0800_B002
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B01D:
	bool Z_156 = (bool) cond(Mem0[es_123:cx_95 - 0x0001 + di_122:byte] - 0x3D)
	branch Mem0[es_123:cx_95 - 0x0001 + di_122:byte] != 0x3D l0800_B002
// DataOut: ah bx cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B025:
	selector ds_161 = SLICE(ptrArg02, selector, 16)
	word16 si_162 = (word16) ptrArg02
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B029:
	branch cx_112 == 0x0000 l0800_B02B
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B029_1:
	Z_156 = (bool) cond(Mem0[ds_161:si_208:byte] - Mem0[es_123:di_122:byte]) (alias)
	si_162 = si_208 + 0x0001
	di_122 = di_122 + 0x0001
	cx_112 = cx_112 - 0x0001
	word16 si_208 = si_162
	branch Mem0[ds_161:si_208:byte] != Mem0[es_123:di_122:byte] l0800_B029
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B02B:
	branch Z_156 l0800_B002
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B002:
	word16 v23_147 = wLoc06_108 + 0x0004
	wLoc06_108 = v23_147
	di_100 = v23_147 (alias)
// DataOut: ah cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B030:
	ax_188 = di_122 + 0x0001
	word16 dx_191
	*dxOut = es_123
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16)

l0800_AFFC:
	word16 dx_74
	*dxOut = 0x0000
	ax_188 = 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16)

l0800_B035:
	return ax_188
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp

fn0800_AFCB_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> dx:<invalid> di:di si:si al:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> Sequence ds:si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp



void fn0800_B03B(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl ds dx eax ecx edi edx es esi rax rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_B03B_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B03B:
	word16 di_16 = (word16) ptrArg02
	selector es_17 = SLICE(ptrArg02, selector, 16)
	selector ds_20 = SLICE(ptrArg06, selector, 16)
	word16 si_21 = (word16) ptrArg06
	word16 cx_24 = wArg0A >>u 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B04E:
	branch cx_24 == 0x0000 l0800_B050
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B050:
	branch wArg0A >>u 0x0001 >=u 0x0000 l0800_B053
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B052:
	Mem53[es_17:di_16:byte] = Mem0[ds_20:si_21:byte]
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B053:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_B03B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:si di:di ds:ds ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_B04E_1:
	Mem35[es_17:di_16:word16] = Mem0[ds_20:si_21:word16]
	si_21 = si_21 + 0x0002
	di_16 = di_16 + 0x0002
	cx_24 = cx_24 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



void fn0800_B05F(segptr32 ptrArg02, word16 wArg06, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(8)
fn0800_B05F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(8)

l0800_B05F:
	word16 di_11 = (word16) ptrArg02
	selector es_12 = SLICE(ptrArg02, selector, 16)
	word16 cx_14 = wArg06
	word16 ax_19 = DPB(ax, bArg08, 8)
	branch (di_11 & 0x0001) == 0x0000 l0800_B079
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B075:
	branch wArg06 == 0x0000 l0800_B080
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B077:
	Mem52[ptrArg02:byte] = bArg08
	di_11 = di_11 + 0x0001
	cx_14 = wArg06 - 0x0001
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B079:
	word16 cx_37 = cx_14 >>u 0x0001
	cx_44 = cx_37
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 4 bp:fp - 2 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:di + 0x0001 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07B:
	word16 cx_44
	branch cx_44 == 0x0000 l0800_B07D
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 4 bp:fp - 2 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07D:
	branch cx_37 >=u 0x0000 l0800_B080
// DataOut: al di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07F:
	Mem49[es_12:di_11:byte] = bArg08
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B080:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp

fn0800_B05F_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:di -4(fp):di -2(fp):bp

l0800_B07B_1:
	Mem45[es_12:di_11:word16] = ax_19
	di_11 = di_11 + 0x0002
	cx_44 = cx_44 - 0x0001
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 4 bp:fp - 2 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)



void fn0800_B083(word16 wArg02, word16 wArg04, byte bArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(16)
fn0800_B083_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(16)

l0800_B083:
	fn0800_B05F(DPB(ptrLoc0A, wArg02, 0), wArg08, bArg06)
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B083_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> dx:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ax -2(fp):bp



void fn0800_B0A1(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_B0A1_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_B0A1:
	word16 ax_119
	byte dl_24
	branch (bool) fn0800_8F2F(wArg02, wArg08, wArg04, wArg06, out dl_24) l0800_B0BE
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0BE:
	ax_119 = 0x0000
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0B8:
	ax_119 = 0x0001
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0C1:
	selector ds_31 = SLICE(ptrArg02, selector, 16)
	word16 si_104 = (word16) ptrArg02
	word16 di_106 = (word16) ptrArg06
	selector es_36 = SLICE(ptrArg06, selector, 16)
	word16 cx_108 = wArg0A
	branch ax_119 == 0x0000 l0800_B0D4
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0CE:
	si_104 = si_104 + wArg0A - 0x0001
	di_106 = di_106 + wArg0A - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0D4:
	branch (di_106 & 0x0001) == 0x0000 l0800_B0DE
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DA:
	branch wArg0A == 0x0000 l0800_B0ED
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DC:
	Mem103[es_36:di_106:byte] = Mem0[ds_31:si_104:byte]
	si_104 = si_104 + 0x0001
	di_106 = di_106 + 0x0001
	cx_108 = wArg0A - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DE:
	word16 si_72 = si_104 - ax_119
	word16 di_74 = di_106 - ax_119
	word16 cx_76 = cx_108 >>u 0x0001
	cx_86 = cx_76
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E4:
	word16 cx_86
	branch cx_86 == 0x0000 l0800_B0E6
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E6:
	branch cx_76 >=u 0x0000 l0800_B0ED
// DataOut: ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E8:
	Mem99[es_36:di_74 + ax_119:byte] = Mem0[ds_31:si_72 + ax_119:byte]
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0ED:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_B0A1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:si di:di ds:ds ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_B0E4_1:
	Mem89[es_36:di_74:word16] = Mem0[ds_31:si_72:word16]
	si_72 = si_72 + 0x0002
	di_74 = di_74 + 0x0002
	cx_86 = cx_86 - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



selector fn0800_B0F3(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_B0F3_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_B0F3:
	fn0800_B0A1(DPB(ptrLoc0C, wArg06, 0), wArg08, DPB(ptrLoc08, wArg02, 0), wArg04, wArg0A)
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B0F3_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_B113(byte al, selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_B113_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32)

l0800_B113:
	word16 ax_18
	branch msdos_create_truncate_file(wArg02, SLICE(ptrArg04, selector, 16), (word16) ptrArg04, out ax_18) l0800_B126
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B126:
	fn0800_8D2B(ds, ax_18)
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_B124:
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_B12A:
	return
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds al:0xFF ax:0xFFFF -4(fp):<invalid> -2(fp):bp

fn0800_B113_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds al:0xFF ax:0xFFFF -4(fp):<invalid> -2(fp):bp



void fn0800_B12E(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut:
// Trashed: SCZO ah ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_B12E_entry:
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_B12E:
	word16 ax_16
	msdos_write_file(wArg02, 0x0000, SEQ(ds, 0x0000), out ax_16)
	return
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B12E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> cx:0x0000 dx:0x0000 ah:0x40 -2(fp):bp



byte fn0800_B140(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si
// LiveOut: al ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_B140_entry:
	*dsOut = ds
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B140:
	word16 si_115 = wArg06
	branch (wArg06 & 0xC000) != 0x0000 l0800_B15C
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B154:
	si_115 = wArg06 | Mem0[ds:0x2512:word16] & 0xC000
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B15C:
	word16 di_114
	byte al_289
	word16 ax_163 = fn0800_A53C(0x00, ds, DPB(ptrLoc10, wArg02, 0), 0x00, di)
	word16 wLoc04_158 = ax_163
	branch (si_115 & 0x0100) == 0x0000 l0800_B1F2
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B174:
	word16 di_273 = wArg08 & Mem0[ds:0x2514:word16]
	ax_163 = di_273
	branch (di_273 & 0x0180) != 0x0000 l0800_B186
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B17F:
	ax_163 = fn0800_8D2B(ds, 0x0001)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B186:
	word16 wLoc0C_287
	branch ax_163 != 0xFFFF l0800_B1AF
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1AF:
	branch (si_115 & 0x0400) == 0x0000 l0800_B1F2
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1B5:
	wLoc0C_287 = 0x0050
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16)

l0800_B18C:
	branch Mem0[ds:0x2516:word16] == 0x0002 l0800_B19D
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B19D:
	byte al_303
	word16 ax_302
	branch (di_273 & 0x0080) == 0x0000 l0800_B1A7
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1A7:
	ax_302 = 0x0001
	al_303 = 0x01 (alias)
// DataOut: al ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1A3:
	ax_302 = 0x0000
	al_303 = 0x00 (alias)
// DataOut: al ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1AA:
	wLoc04_158 = ax_302
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1BB:
	branch (si_115 & 0x00F0) == 0x0000 l0800_B1DD
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1DD:
	fn0800_B113(al_303, ds, ax_302, DPB(ptrLoc0E, wArg02, 0))
	di_114 = 0xFFFF
	branch false l0800_B265
// DataOut: di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B1EF:
// DataOut: dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B1C1:
	ptrLoc0E = DPB(ptrLoc0E, wArg02, 0) (alias)
	fn0800_B113(0x00, ds, 0x0000, ptrLoc0E)
	di_114 = 0xFFFF
	ax_163 = 0xFFFF
	branch false l0800_B1D6
// DataOut: al dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1D6:
	fn0800_A57F(0xFF, ds, 0xFFFF)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1F2:
	fn0800_B2A0(ds, DPB(ptrLoc10, wArg02, 0), si_115)
	di_114 = ax_163
	branch ax_163 < 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> bx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -0010(16) Stack +0002(16) Stack +0004(16)

l0800_B205:
	word16 ax_194 = fn0800_A2A3(0x00, ds, ax_163, 0x0000, ptrLoc0A, wLoc06)
	byte al_195 = (byte) ax_194
	branch (ax_194 & 0x0080) == 0x0000 l0800_B237
// DataOut: al ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -000A(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B237:
	branch (si_115 & 0x0200) == 0x0000 l0800_B241
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B23D:
	fn0800_B12E(al_195, ds, ax_163)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B216:
	si_115 = si_115 | 0x2000
	branch (si_115 & 0x8000) == 0x0000 l0800_B241
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_B220:
	fn0800_A2A3(0x01, ds, ax_163, 0x0001, DPB(ptrLoc0E, ax_194 & 0x00FF | 0x0020, 0), di)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B241:
	branch (wLoc04_158 & 0x0001) == 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B248:
	branch (si_115 & 0x0100) == 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B24E:
	branch (si_115 & 0x00F0) == 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B254:
	fn0800_A53C(0x01, ds, DPB(ptrLoc12, wArg02, 0), 0x01, 0x0001)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B265:
	branch di_114 < 0x0000 l0800_B298
// DataOut: di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B269:
	word16 ax_125
	branch (si_115 & 0x0300) == 0x0000 l0800_B274
// DataOut: di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B274:
	ax_125 = 0x0000
// DataOut: ax di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B26F:
	ax_125 = 0x1000
// DataOut: ax di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B276:
	word16 ax_137
	word16 dx_129 = si_115 & 0xF8FF | ax_125
	branch (wLoc04_158 & 0x0001) == 0x0000 l0800_B28A
// DataOut: di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16)

l0800_B28A:
	ax_137 = 0x0100
// DataOut: ax di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16)

l0800_B286:
	ax_137 = 0x0000
// DataOut: ax di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16)

l0800_B28D:
	Mem145[ds:(di_114 << 0x0001) + 0x24EA:word16] = dx_129 | ax_137
// DataOut: dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B1D3:
// DataOut: dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B298:
	al_289 = (byte) di_114 (alias)
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B193:
	wLoc0C_287 = Mem0[ds:0x2516:word16]
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16)

l0800_B197:
	al_289 = (byte) fn0800_8D2B(ds, wLoc0C_287) (alias)
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B29A:
	return al_289
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_B140_exit:
// DataOut: al ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si di:di ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_B2A0(selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: ax bp ds sp
// Stack args: Stack +0002(32) Stack +0006(16)
fn0800_B2A0_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16)

l0800_B2A0:
	byte al_17 = 0x01
	branch (wArg06 & 0x0002) != 0x0000 l0800_B2BB
// DataOut: al cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2B1:
	al_17 = 0x02
	branch (wArg06 & 0x0004) != 0x0000 l0800_B2BB
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 al:0x01 cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2B9:
	al_17 = 0x00
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 al:0x02 cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2BB:
	word16 ax_31
	branch msdos_open_file(ptrArg02, al_17 | bArg06 & 0xF0, out ax_31) l0800_B2E7
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 al:<invalid> cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0006(16)

l0800_B2E7:
	fn0800_8D2B(ds, ax_31)
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:0x3D ds:ds -6(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_B2CD:
	Mem52[ds:(ax_31 << 0x0001) + 0x24EA:word16] = wArg06 & 0xB8FF | 0x8000
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:0x3D ds:ds -6(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_B2EB:
	return
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:<invalid> ds:ds ax:<invalid> bx:ax << 0x0001 -6(fp):<invalid> -4(fp):ax -2(fp):bp

fn0800_B2A0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:<invalid> ds:ds ax:<invalid> bx:ax << 0x0001 -6(fp):<invalid> -4(fp):ax -2(fp):bp



word16 fn0800_B2EF(selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_B2EF_entry:
	*diOut = di
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_B2EF:
	fn0800_9828(fp - 2, ds, fp + 0x0006, DPB(ptrLoc0C, wArg02, 0), wArg04)
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B2EF_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):fp + 0x0006 -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x236C -6(fp):ds -4(fp):0xB4BE -2(fp):bp



word16 fn0800_B30A(selector ds, byte bArg02, segptr32 ptrArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(8) Stack +0004(32) Stack +0006(16)
fn0800_B30A_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(32) Stack +0006(16)

l0800_B30A:
	Mem12[ptrArg04:word16] = Mem0[ptrArg04:word16] - 0x0001
	selector ds_29
	return fn0800_B324(ds, (byte) (int16) bArg02, DPB(ptrLoc06, (word16) ptrArg04, 0), wArg06, out ds_29)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B30A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):bp



word16 fn0800_B324(selector ds, byte bArg02, segptr32 ptrArg04, selector psegArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(8) Stack +0004(32) Stack +0006(16)
fn0800_B324_entry:
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(8) Stack +0004(32) Stack +0006(16)

l0800_B324:
	word16 ax_133
	word16 ax_39
	Mem11[ds:0x4EE6:byte] = bArg02
	word16 bx_15 = (word16) ptrArg04
	branch Mem11[ptrArg04:word16] >= 0xFFFF l0800_B389
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B389:
	branch (Mem11[ptrArg04 + 0x0002:word16] & 0x0090) != 0x0000 l0800_B39C
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B394:
	branch (Mem11[ptrArg04 + 0x0002:word16] & 0x0002) != 0x0000 l0800_B3A6
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B3A6:
	Mem174[ptrArg04 + 0x0002:word16] = Mem11[ptrArg04 + 0x0002:word16] | 0x0100
	word16 bx_171 = (word16) ptrArg04
	branch Mem174[ptrArg04 + 0x0006:word16] == 0x0000 l0800_B421
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B421:
	selector es_245 = SLICE(ptrArg04, selector, 16)
	branch (Mem174[ds:((int16) Mem174[ptrArg04 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B44C
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_B435:
	word16 ax_347 = (int16) Mem174[es_245:wArg04 + 0x0004:byte]
	word16 dx_351
	fn0800_8E29((byte) ax_347, ds, ax_347, 0x0000, 0x0000, 0x02, out dx_351)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B44C:
	branch Mem174[ds:0x4EE6:byte] != 0x0A l0800_B478
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B453:
	branch (Mem174[ptrArg04 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B478
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B45E:
	word16 ax_325 = (int16) Mem174[ptrArg04 + 0x0004:byte]
	ptrLoc0A = DPB(ptrLoc0A, 0x26AE, 0) (alias)
	byte dl_329
	ax_133 = fn0800_C779((byte) ax_325, ds, ax_325, ptrLoc0A, 0x0001, out dl_329)
	branch ax_133 != 0x0001 l0800_B495
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B478:
	word16 ax_300 = (int16) Mem174[ptrArg04 + 0x0004:byte]
	byte dl_304
	ax_133 = fn0800_C779((byte) ax_300, ds, ax_300, DPB(ptrLoc0A, 0x4EE6, 0), 0x0001, out dl_304)
	branch ax_133 == 0x0001 l0800_B4A3
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B495:
	branch (Mem174[ptrArg04 + 0x0002:word16] & 0x0200) != 0x0000 l0800_B4A3
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B4A0:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B3B6:
	branch Mem174[ptrArg04:word16] == 0x0000 l0800_B3C9
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B3BC:
	ptrLoc08 = DPB(ptrLoc08, bx_171, 0) (alias)
	byte dl_232
	branch fn0800_A6B7(ds, ptrLoc08, psegArg06, out dl_232, out ds) != 0x0000 l0800_B380
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B3C9:
	Mem191[ptrArg04:word16] = -Mem174[ptrArg04 + 0x0006:word16]
	ax_133 = Mem191[ptrArg04 + 0x000E:word16]
	word16 si_193 = Mem191[ptrArg04 + 0x000C:word16]
	Mem195[ptrArg04 + 0x000C:word16] = Mem191[ptrArg04 + 0x000C:word16] + 0x0001
	Mem198[ax_133:si_193:byte] = Mem195[ds:0x4EE6:byte]
	branch (Mem198[psegArg06:(word16) ptrArg04 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B3F8
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B3F8:
	branch Mem198[ds:0x4EE6:byte] == 0x0A l0800_B409
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B3FF:
	branch Mem198[ds:0x4EE6:byte] == 0x0D l0800_B409
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B409:
	byte dl_213
	selector ds_214
	word16 ax_215 = fn0800_A6B7(ds, DPB(ptrLoc08, wArg04, 0), psegArg06, out dl_213, out ds_214)
	ax_133 = ax_215
	branch ax_215 != 0x0000 l0800_B41B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B41B:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B418:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B406:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B3F5:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B39C:
	Mem164[ptrArg04 + 0x0002:word16] = Mem11[ptrArg04 + 0x0002:word16] | 0x0010
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B337:
	Mem93[ptrArg04:word16] = Mem11[ptrArg04:word16] + 0x0001
	ax_133 = Mem93[ptrArg04 + 0x000E:word16]
	word16 si_95 = Mem93[ptrArg04 + 0x000C:word16]
	Mem97[ptrArg04 + 0x000C:word16] = Mem93[ptrArg04 + 0x000C:word16] + 0x0001
	Mem100[ax_133:si_95:byte] = Mem97[ds:0x4EE6:byte]
	branch (Mem100[psegArg06:bx_15 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B35D
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B35D:
	branch Mem100[ds:0x4EE6:byte] == 0x0A l0800_B36E
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B364:
	branch Mem100[ds:0x4EE6:byte] == 0x0D l0800_B36E
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B36E:
	byte dl_126
	selector ds_127
	word16 ax_128 = fn0800_A6B7(ds, DPB(ptrLoc08, wArg04, 0), psegArg06, out dl_126, out ds_127)
	ax_133 = ax_128
	branch ax_128 != 0x0000 l0800_B380
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B380:
	ax_39 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B37D:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B36B:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B35A:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B4A3:
	ax_39 = DPB(ax_133, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B4A8:
	return ax_39
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_B324_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:si dl:<invalid> es:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_B4BE(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)
fn0800_B4BE_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_B4BE:
	word16 ax_108
	word16 di_136 = wArg06
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0008) == 0x0000 l0800_B504
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_B504:
	word16 bx_178 = (word16) ptrArg02
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B512
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B512:
	branch Mem0[ptrArg02 + 0x0006:word16] != 0x0000 l0800_B51C
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B51C:
	branch Mem0[ptrArg02 + 0x0006:word16] >=u wArg06 l0800_B583
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B583:
	branch Mem0[ptrArg02:word16] + wArg06 < 0x0000 l0800_B5B1
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B58D:
	branch Mem0[ptrArg02:word16] != 0x0000 l0800_B59F
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B59F:
	byte dl_501
	selector ds_502
	branch fn0800_A6B7(ds, DPB(ptrLoc0C, wArg02, 0), wArg04, out dl_501, out ds_502) == 0x0000 l0800_B5B1
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5AE:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B593:
	Mem493[ptrArg02:word16] = 0xFFFF - Mem0[ptrArg02 + 0x0006:word16]
// DataOut: di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5B1:
	fn0800_B03B(DPB(ptrLoc12, Mem0[ptrArg02 + 0x000C:word16], 0), Mem0[ptrArg02 + 0x000E:word16], DPB(ptrLoc0E, wArg08, 0), wArg06)
	Mem484[ptrArg02:word16] = Mem0[ptrArg02:word16] + wArg06
	Mem486[ptrArg02 + 0x000C:word16] = Mem484[ptrArg02 + 0x000C:word16] + wArg06
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B522:
	branch Mem0[ptrArg02:word16] == 0x0000 l0800_B535
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B528:
	byte dl_434
	branch fn0800_A6B7(ds, DPB(ptrLoc0C, bx_178, 0), wArg04, out dl_434, out ds) != 0x0000 l0800_B4F5
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B535:
	selector es_373 = SLICE(ptrArg02, selector, 16)
	branch (Mem0[ds:((int16) Mem0[ptrArg02 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B560
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):bx -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B549:
	word16 ax_420 = (int16) Mem0[es_373:wArg02 + 0x0004:byte]
	word16 dx_424
	fn0800_8E29((byte) ax_420, ds, ax_420, 0x0000, 0x0000, 0x02, out dx_424)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -12(fp):bx -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B560:
	word16 ax_398 = (int16) Mem0[ptrArg02 + 0x0004:byte]
	byte dl_402
	branch fn0800_C779((byte) ax_398, ds, ax_398, DPB(ptrLoc0E, wArg08, 0), wArg06, out dl_402) <u wArg06 l0800_B57D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):0x0000 -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B57D:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B57A:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B519:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5DB:
	selector es_305 = SLICE(ptrArg02, selector, 16)
	branch (Mem0[ds:((int16) Mem0[ptrArg02 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B606
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5EF:
	word16 ax_352 = (int16) Mem0[es_305:wArg02 + 0x0004:byte]
	word16 dx_356
	fn0800_8E29((byte) ax_352, ds, ax_352, 0x0000, 0x0000, 0x02, out dx_356)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B606:
	word16 ax_330 = (int16) Mem0[ptrArg02 + 0x0004:byte]
	byte dl_334
	branch fn0800_C779((byte) ax_330, ds, ax_330, DPB(ptrLoc0E, wArg08, 0), wArg06, out dl_334) >=u wArg06 l0800_B69D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):0x0000 -12(fp):0x0000 -10(fp):0x0002 -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B620:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B50F:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B625:
	branch Mem0[ptrArg02 + 0x0006:word16] == 0x0000 l0800_B680
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B680:
	byte dl_295
	selector ds_296
	branch fn0800_C632(ds, (int16) Mem0[ptrArg02 + 0x0004:byte], wArg08, wArg0A, wArg06, out dl_295, out ds_296) >=u wArg06 l0800_B69D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B69A:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B62F:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B677:
	di_136 = di_136 - 0x0001
	branch di_136 != 0x0000 l0800_B631
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B631:
	word16 ax_232
	word16 v19_216 = Mem0[ptrArg02:word16] + 0x0001
	Mem217[ptrArg02:word16] = v19_216
	branch v19_216 >= 0x0000 l0800_B659
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B659:
	ptrLoc0C = DPB(ptrLoc0C, wArg02, 0) (alias)
	ax_232 = fn0800_B30A(ds, Mem217[ptrArg08:byte], ptrLoc0C, wArg04, out ds)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B639:
	word16 ax_239 = Mem217[ptrArg02 + 0x000E:word16]
	word16 si_240 = Mem217[ptrArg02 + 0x000C:word16]
	Mem242[ptrArg02 + 0x000C:word16] = Mem217[ptrArg02 + 0x000C:word16] + 0x0001
	Mem251[ax_239:si_240:byte] = Mem242[ptrArg08:byte]
	ax_232 = DPB(ax_239, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B66F:
	branch ax_232 != 0xFFFF l0800_B677
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B674:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_B67E:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_B4D7:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B4FA:
	di_136 = di_136 - 0x0001
	branch di_136 != 0x0000 l0800_B4D9
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B4D9:
	ptrLoc0C = DPB(ptrLoc0C, wArg02, 0) (alias)
	selector ds_512 = ds
	branch fn0800_B324(ds_512, (byte) (int16) Mem0[ptrArg08:byte], ptrLoc0C, wArg04, out ds) != 0xFFFF l0800_B4FA
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B4F5:
	ax_108 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_B501:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_B69D:
	ax_108 = wArg06
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> si:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_B6A0:
	return ax_108
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>

fn0800_B4BE_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di Sequence es:bx:<invalid> ax:<invalid> al:<invalid> si:si es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>



word16 fn0800_B6A8(selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZDO ah al ax ch cl cx di dil ds eax ecx edi es esi rax rcx rdi rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_B6A8_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_B6A8:
	word16 ax_30
	word16 cx_17 = Mem0[ds:0x4EE8:word16]
	word16 di_20 = (word16) ptrArg02
	selector es_21 = SLICE(ptrArg02, selector, 16)
	selector ds_24 = SLICE(ptrArg06, selector, 16)
	word16 si_25 = (word16) ptrArg06
	word16 cx_26 = cx_17 >>u 0x0001
	branch cx_17 >>u 0x0001 >=u 0x0000 l0800_B6C6
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B6BD:
	byte al_56 = Mem0[ptrArg02:byte]
	Mem60[ptrArg02:byte] = Mem0[ptrArg06:byte]
	Mem65[ptrArg06:byte] = al_56
	ax_30 = DPB(ax, al_56, 0) (alias)
	si_25 = si_25 + 0x0001
	di_20 = di_20 + 0x0001
	branch cx_17 >>u 0x0001 == 0x0000 l0800_B6CF
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B6C6:
	ax_30 = Mem0[es_21:di_20:word16]
	Mem49[es_21:di_20:word16] = Mem0[ds_24:si_25:word16]
	si_25 = si_25 + 0x0002
	Mem54[ds_24:si_25 - 0x0002:word16] = ax_30
	di_20 = di_20 + 0x0002
	cx_26 = cx_26 - 0x0001
	branch cx_26 != 0x0000 l0800_B6C6
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> al:<invalid> si:<invalid> di:<invalid> ax:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B6CF:
	return ax_30
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 cx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> al:<invalid> si:<invalid> di:<invalid> ax:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_B6A8_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> al:<invalid> si:si di:di ax:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp



selector fn0800_B6D6(word16 bp, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_B6D6_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_B6D6:
	word16 bp_38 = fp - 2
	word16 sp_11 = fp - 0x001A
	word16 si_15 = wArg02
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_B6E1:
	branch si_15 >u 0x0002 l0800_B726
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B726:
	word16 bx_137 = Mem0[ss:bp_38 + 0x0006:word16] + (word16) (Mem0[ds:0x4EE8:word16] *s (si_15 - 0x0001))
	Mem138[ss:bp_38 - 0x0006:word16] = Mem0[ss:bp_38 + 0x0008:word16]
	Mem139[ss:bp_38 - 0x0008:word16] = bx_137
	word16 ax_143 = (word16) (Mem139[ds:0x4EE8:word16] *s (si_15 >>u 0x0001))
	word16 dx_144 = Mem139[ss:bp_38 + 0x0008:word16]
	word16 bx_146 = Mem139[ss:bp_38 + 0x0006:word16] + ax_143
	Mem148[ss:bp_38 - 0x0002:word16] = dx_144
	Mem149[ss:bp_38 - 0x0004:word16] = bx_146
	word16 sp_151 = sp_11 - 2
	Mem152[ss:sp_151:word16] = Mem149[ss:bp_38 - 0x0006:word16]
	Mem155[ss:sp_151 - 2:word16] = Mem152[ss:bp_38 - 0x0008:word16]
	Mem158[ss:sp_151 - 4:word16] = Mem155[ss:bp_38 - 0x0002:word16]
	Mem160[ss:sp_151 - 6:word16] = bx_146
	word16 sp_161
	word16 bp_162
	selector ss_163
	byte SCZO_164
	word16 si_165
	word16 di_166
	byte CZ_167
	bool Z_168
	word16 ax_169
	byte SZO_170
	selector ds_171
	word16 dx_172
	word16 bx_173
	bool C_174
	byte SO_175
	call SEQ(0x0800, Mem160[ds:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_143,bp_38,bx_146,C_34,CZ_41,di_36,ds_30,dx_144,SCZO_147,si_37,SO_27,sp_159,ss_32,SZO_33,wLoc02_4,wLoc18_10,wLoc1A_13,Z_31
		defs: ax_169,bp_162,bx_173,C_174,CZ_167,di_166,ds_171,dx_172,SCZO_164,si_165,SO_175,sp_161,ss_163,SZO_170,Z_168
	branch ax_169 <= 0x0000 l0800_B775
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B766:
	Mem637[ss_163:sp_161 + 0x0006:word16] = Mem160[ss_163:bp_162 - 0x0002:word16]
	Mem640[ss_163:sp_161 + 0x0004:word16] = Mem637[ss_163:bp_162 - 0x0004:word16]
	Mem643[ss_163:sp_161 + 0x0002:word16] = Mem640[ss_163:bp_162 - 0x0006:word16]
	Mem646[ss_163:sp_161:word16] = Mem643[ss_163:bp_162 - 0x0008:word16]
	fn0800_B6A8(ds_171, ptrArg00, ptrArg04)
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B775:
	word16 sp_577
	word16 sp_226
	Mem184[ss_163:sp_161 + 0x0006:word16] = Mem160[ss_163:bp_162 + 0x0008:word16]
	Mem187[ss_163:sp_161 + 0x0004:word16] = Mem184[ss_163:bp_162 + 0x0006:word16]
	Mem190[ss_163:sp_161 + 0x0002:word16] = Mem187[ss_163:bp_162 - 0x0002:word16]
	Mem193[ss_163:sp_161:word16] = Mem190[ss_163:bp_162 - 0x0004:word16]
	word16 sp_194
	byte SCZO_197
	word16 di_199
	byte CZ_200
	bool Z_201
	word16 ax_202
	byte SZO_203
	word16 dx_205
	word16 bx_206
	bool C_207
	byte SO_208
	selector ss_196
	word16 si_198
	word16 bp_195
	call SEQ(0x0800, Mem193[ds_171:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_177,bp_162,bx_173,C_180,CZ_167,di_166,ds_171,dx_172,SCZO_164,si_165,SO_175,sp_192,ss_163,SZO_179,wLoc02_4,wLoc18_10,wLoc1A_13,Z_168
		defs: ax_202,bp_195,bx_206,C_207,CZ_200,di_199,ds_204,dx_205,SCZO_197,si_198,SO_208,sp_194,ss_196,SZO_203,Z_201
	branch ax_202 <= 0x0000 l0800_B79A
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B79A:
	Mem594[ss_196:sp_194 + 0x0006:word16] = Mem193[ss_196:bp_195 - 0x0006:word16]
	Mem597[ss_196:sp_194 + 0x0004:word16] = Mem594[ss_196:bp_195 - 0x0008:word16]
	Mem600[ss_196:sp_194 + 0x0002:word16] = Mem597[ss_196:bp_195 + 0x0008:word16]
	Mem603[ss_196:sp_194:word16] = Mem600[ss_196:bp_195 + 0x0006:word16]
	word16 sp_604
	byte SCZO_607
	word16 di_609
	byte CZ_610
	bool Z_611
	word16 ax_612
	byte SZO_613
	word16 dx_615
	word16 bx_616
	bool C_617
	byte SO_618
	call SEQ(0x0800, Mem603[ds:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_210,bp_195,bx_206,C_213,CZ_200,di_199,ds_204,dx_205,SCZO_197,si_198,SO_208,sp_602,ss_196,SZO_212,wLoc02_4,wLoc18_10,wLoc1A_13,Z_201
		defs: ax_612,bp_605,bx_616,C_617,CZ_610,di_609,ds_614,dx_615,SCZO_607,si_608,SO_618,sp_604,ss_606,SZO_613,Z_611
	sp_226 = sp_604 + 0x0008
	branch ax_612 <= 0x0000 l0800_B7C0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B7B1:
	Mem625[ss_196:sp_604 + 0x0006:word16] = Mem603[ss_196:bp_195 + 0x0008:word16]
	Mem628[ss_196:sp_604 + 0x0004:word16] = Mem625[ss_196:bp_195 + 0x0006:word16]
	Mem631[ss_196:sp_604 + 0x0002:word16] = Mem628[ss_196:bp_195 - 0x0006:word16]
	Mem634[ss_196:sp_604:word16] = Mem631[ss_196:bp_195 - 0x0008:word16]
	sp_577 = sp_604
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B78C:
	Mem582[ss_196:sp_194 + 0x0006:word16] = Mem193[ss_196:bp_195 - 0x0002:word16]
	Mem585[ss_196:sp_194 + 0x0004:word16] = Mem582[ss_196:bp_195 - 0x0004:word16]
	Mem588[ss_196:sp_194 + 0x0002:word16] = Mem585[ss_196:bp_195 + 0x0008:word16]
	Mem591[ss_196:sp_194:word16] = Mem588[ss_196:bp_195 + 0x0006:word16]
	sp_577 = sp_194
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B7BD:
	fn0800_B6A8(ds, ptrArg00, ptrArg04)
	sp_226 = sp_577 + 0x0008
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B7C0:
	branch si_198 != 0x0003 l0800_B7D4
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B7D4:
	word16 ax_241 = Mem193[ss_196:bp_195 + 0x0008:word16]
	word16 dx_243 = Mem193[ss_196:bp_195 + 0x0006:word16] + Mem193[ds:0x4EE8:word16]
	Mem246[ss_196:bp_195 - 0x000A:word16] = ax_241
	Mem247[ss_196:bp_195 - 0x000C:word16] = dx_243
	Mem248[ss_196:bp_195 - 0x0002:word16] = ax_241
	Mem249[ss_196:bp_195 - 0x0004:word16] = dx_243
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B813:
	word16 sp_255 = sp_226 - 2
	Mem256[ss_196:sp_255:word16] = Mem249[ss_196:bp_195 + 0x0008:word16]
	Mem259[ss_196:sp_255 - 2:word16] = Mem256[ss_196:bp_195 + 0x0006:word16]
	Mem262[ss_196:sp_255 - 4:word16] = Mem259[ss_196:bp_195 - 0x0002:word16]
	Mem265[ss_196:sp_255 - 6:word16] = Mem262[ss_196:bp_195 - 0x0004:word16]
	word16 sp_266
	byte SCZO_269
	word16 si_270
	word16 di_271
	byte CZ_272
	bool Z_273
	word16 ax_274
	byte SZO_275
	selector ds_276
	word16 dx_277
	word16 bx_278
	bool C_279
	byte SO_280
	call SEQ(0x0800, Mem265[ds:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_241,bp_252,bx_215,C_221,CZ_218,di_223,ds_217,dx_243,SCZO_245,si_224,SO_214,sp_264,ss_251,SZO_220,wLoc02_4,wLoc18_10,wLoc1A_13,Z_228
		defs: ax_274,bp_267,bx_278,C_279,CZ_272,di_271,ds_276,dx_277,SCZO_269,si_270,SO_280,sp_266,ss_268,SZO_275,Z_273
	sp_226 = sp_266 + 0x0008
	branch ax_274 <= 0x0000 l0800_B7EC
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B7EC:
	branch ax_274 != 0x0000 l0800_B805
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B7F0:
	Mem548[ss_196:sp_266 + 0x0006:word16] = Mem265[ss_196:bp_195 - 0x0002:word16]
	Mem551[ss_196:sp_266 + 0x0004:word16] = Mem548[ss_196:bp_195 - 0x0004:word16]
	Mem554[ss_196:sp_266 + 0x0002:word16] = Mem551[ss_196:bp_195 - 0x000A:word16]
	Mem557[ss_196:sp_266:word16] = Mem554[ss_196:bp_195 - 0x000C:word16]
	fn0800_B6A8(ds_276, ptrArg00, ptrArg04)
	Mem562[ss_196:bp_195 - 0x000C:word16] = Mem557[ss_196:bp_195 - 0x000C:word16] + Mem557[ds_276:0x4EE8:word16]
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B805:
	sp_226 = sp_266 + 0x0008
	branch Mem265[ss_196:bp_195 - 0x0004:word16] >=u Mem265[ss_196:bp_195 - 0x0008:word16] l0800_B883
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B80D:
	Mem544[ss_196:bp_195 - 0x0004:word16] = Mem265[ss_196:bp_195 - 0x0004:word16] + Mem265[ds_276:0x4EE8:word16]
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B82C:
	word16 ax_443 = Mem265[ss_196:bp_195 - 0x0004:word16]
	branch ax_443 >=u Mem265[ss_196:bp_195 - 0x0008:word16] l0800_B87B
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B834:
	word16 sp_468 = sp_226 - 2
	Mem469[ss_196:sp_468:word16] = Mem265[ss_196:bp_195 - 0x0006:word16]
	Mem472[ss_196:sp_468 - 2:word16] = Mem469[ss_196:bp_195 - 0x0008:word16]
	Mem475[ss_196:sp_468 - 4:word16] = Mem472[ss_196:bp_195 + 0x0008:word16]
	Mem478[ss_196:sp_468 - 6:word16] = Mem475[ss_196:bp_195 + 0x0006:word16]
	word16 sp_479
	byte SCZO_482
	word16 si_483
	word16 di_484
	byte CZ_485
	bool Z_486
	word16 ax_487
	byte SZO_488
	selector ds_489
	word16 dx_490
	word16 bx_491
	bool C_492
	byte SO_493
	call SEQ(0x0800, Mem478[ds_276:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_443,bp_465,bx_278,C_446,CZ_272,di_282,ds_276,dx_277,SCZO_445,si_270,SO_280,sp_477,ss_464,SZO_284,wLoc02_4,wLoc18_10,wLoc1A_13,Z_273
		defs: ax_487,bp_480,bx_491,C_492,CZ_485,di_484,ds_489,dx_490,SCZO_482,si_483,SO_493,sp_479,ss_481,SZO_488,Z_486
	sp_226 = sp_479 + 0x0008
	branch ax_487 >= 0x0000 l0800_B855
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B855:
	Mem510[ss_196:sp_479 + 0x0006:word16] = Mem478[ss_196:bp_195 - 0x0002:word16]
	Mem513[ss_196:sp_479 + 0x0004:word16] = Mem510[ss_196:bp_195 - 0x0004:word16]
	Mem516[ss_196:sp_479 + 0x0002:word16] = Mem513[ss_196:bp_195 - 0x0006:word16]
	Mem519[ss_196:sp_479:word16] = Mem516[ss_196:bp_195 - 0x0008:word16]
	fn0800_B6A8(ds_489, ptrArg00, ptrArg04)
	sp_226 = sp_479 + 0x0008
	branch ax_487 == 0x0000 l0800_B87B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B868:
	word16 ax_526 = Mem519[ds_489:0x4EE8:word16]
	Mem528[ss_196:bp_195 - 0x0004:word16] = Mem519[ss_196:bp_195 - 0x0004:word16] + ax_526
	Mem530[ss_196:bp_195 - 0x0008:word16] = Mem528[ss_196:bp_195 - 0x0008:word16] - ax_526
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B84D:
	Mem502[ss_196:bp_195 - 0x0008:word16] = Mem478[ss_196:bp_195 - 0x0008:word16] - Mem478[ds_489:0x4EE8:word16]
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B873:
	branch Mem502[ss_196:bp_195 - 0x0004:word16] <u Mem502[ss_196:bp_195 - 0x0008:word16] l0800_B834
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B87B:
	branch Mem265[ss_196:bp_195 - 0x0004:word16] <u Mem265[ss_196:bp_195 - 0x0008:word16] l0800_B813
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B883:
	word16 sp_291 = sp_226 - 2
	Mem292[ss_196:sp_291:word16] = Mem265[ss_196:bp_195 + 0x0008:word16]
	Mem295[ss_196:sp_291 - 2:word16] = Mem292[ss_196:bp_195 + 0x0006:word16]
	Mem298[ss_196:sp_291 - 4:word16] = Mem295[ss_196:bp_195 - 0x0002:word16]
	Mem301[ss_196:sp_291 - 6:word16] = Mem298[ss_196:bp_195 - 0x0004:word16]
	word16 sp_302
	word16 bp_303
	byte SCZO_305
	word16 si_306
	word16 di_307
	byte CZ_308
	bool Z_309
	word16 ax_310
	byte SZO_311
	selector ds_312
	word16 dx_313
	word16 bx_314
	bool C_315
	byte SO_316
	call SEQ(0x0800, Mem301[ds_276:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_283,bp_288,bx_278,C_285,CZ_272,di_282,ds_276,dx_277,SCZO_269,si_270,SO_280,sp_300,ss_287,SZO_284,wLoc02_4,wLoc18_10,wLoc1A_13,Z_273
		defs: ax_310,bp_303,bx_314,C_315,CZ_308,di_307,ds_312,dx_313,SCZO_305,si_306,SO_316,sp_302,ss_304,SZO_311,Z_309
	branch ax_310 > 0x0000 l0800_B8AA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B89A:
	word16 dx_439 = Mem301[ss:bp_303 - 0x0004:word16] + Mem301[ds_312:0x4EE8:word16]
	Mem441[ss:bp_303 - 0x0002:word16] = Mem301[ss:bp_303 - 0x0002:word16]
	Mem442[ss:bp_303 - 0x0004:word16] = dx_439
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B8AA:
	word16 dx_323 = Mem301[ss:bp_303 - 0x0004:word16] - Mem301[ds_312:0x4EE8:word16]
	Mem325[ss:bp_303 - 0x0012:word16] = Mem301[ss:bp_303 - 0x0002:word16]
	Mem326[ss:bp_303 - 0x0014:word16] = dx_323
	word16 dx_328 = Mem326[ss:bp_303 + 0x0006:word16]
	Mem329[ss:bp_303 - 0x000E:word16] = Mem326[ss:bp_303 + 0x0008:word16]
	Mem330[ss:bp_303 - 0x0010:word16] = dx_328
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B8E0:
	branch Mem330[ss:bp_303 - 0x0010:word16] >=u Mem330[ss:bp_303 - 0x000C:word16] l0800_B8F0
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B8E8:
	branch Mem330[ss:bp_303 - 0x0014:word16] >=u Mem330[ss:bp_303 - 0x000C:word16] l0800_B8C8
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B8C8:
	Mem419[ss:sp_302 + 0x0006:word16] = Mem330[ss:bp_303 - 0x000E:word16]
	Mem422[ss:sp_302 + 0x0004:word16] = Mem419[ss:bp_303 - 0x0010:word16]
	Mem425[ss:sp_302 + 0x0002:word16] = Mem422[ss:bp_303 - 0x0012:word16]
	Mem428[ss:sp_302:word16] = Mem425[ss:bp_303 - 0x0014:word16]
	fn0800_B6A8(ds_312, ptrArg00, ptrArg04)
	word16 ax_431 = Mem428[ds_312:0x4EE8:word16]
	Mem433[ss:bp_303 - 0x0010:word16] = Mem428[ss:bp_303 - 0x0010:word16] + ax_431
	Mem435[ss:bp_303 - 0x0014:word16] = Mem433[ss:bp_303 - 0x0014:word16] - ax_431
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B8F0:
	Mem337[ss:sp_302 + 0x0006:word16] = 0x0000
	Mem340[ss:sp_302 + 0x0004:word16] = Mem337[ds_312:0x4EE8:word16]
	word16 ax_343 = Mem340[ss:bp_303 - 0x0004:word16] - Mem340[ss:bp_303 - 0x000C:word16]
	Mem349[ss:sp_302 + 0x0002:word16] = 0x0000 - (ax_343 <u 0x0000)
	Mem351[ss:sp_302:word16] = ax_343
	word16 dx_352
	word16 bp_353
	word16 si_354
	word16 di_355
	word16 ax_356 = fn0800_8BBB(bp_303, si_306, di_307, bp, out dx_352, out bp_353, out si_354, out di_355)
	Mem360[ss:sp_302 - 0x0002:word16] = 0x0000
	Mem363[ss:sp_302 - 0x0004:word16] = Mem360[ds_312:0x4EE8:word16]
	word16 dx_370 = Mem363[ss:bp_353 + 0x0006:word16] + (word16) (Mem363[ds_312:0x4EE8:word16] *s si_354) - Mem363[ss:bp_353 - 0x0004:word16]
	Mem376[ss:sp_302 - 0x0006:word16] = 0x0000 - (dx_370 <u 0x0000)
	Mem378[ss:sp_302 - 0x0008:word16] = dx_370
	word16 dx_379
	word16 si_381
	word16 di_382
	word16 ax_383 = fn0800_8BBB(bp_353, si_354, ax_356, bp, out dx_379, out bp_38, out si_381, out di_382)
	si_15 = ax_383
	branch ax_383 >=u di_382 l0800_B93D
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B93D:
	Mem402[ss:sp_302 - 0x000A:word16] = Mem378[ss:bp_38 + 0x0008:word16]
	Mem405[ss:sp_302 - 0x000C:word16] = Mem402[ss:bp_38 + 0x0006:word16]
	Mem407[ss:sp_302 - 0x000E:word16] = di_382
	ds = fn0800_B6D6(bp_38, ds_312, wArg00)
	word16 dx_411 = Mem407[ss:bp_38 - 0x0004:word16]
	Mem412[ss:bp_38 + 0x0008:word16] = Mem407[ss:bp_38 - 0x0002:word16]
	Mem413[ss:bp_38 + 0x0006:word16] = dx_411
	sp_11 = sp_302 - 0x0008
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B92E:
	Mem390[ss:sp_302 - 0x000A:word16] = Mem378[ss:bp_38 - 0x0002:word16]
	Mem393[ss:sp_302 - 0x000C:word16] = Mem390[ss:bp_38 - 0x0004:word16]
	Mem395[ss:sp_302 - 0x000E:word16] = ax_383
	ds = fn0800_B6D6(bp_38, ds_312, wArg00)
	sp_11 = sp_302 - 0x0008
	si_15 = di_382
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B7C5:
	word16 sp_230 = sp_226 - 2
	Mem231[ss_196:sp_230:word16] = Mem193[ss_196:bp_195 + 0x0008:word16]
	Mem234[ss_196:sp_230 - 2:word16] = Mem231[ss_196:bp_195 + 0x0006:word16]
	Mem237[ss_196:sp_230 - 4:word16] = Mem234[ss_196:bp_195 - 0x0002:word16]
	Mem240[ss_196:sp_230 - 6:word16] = Mem237[ss_196:bp_195 - 0x0004:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B6E6:
	branch si_15 == 0x0002 l0800_B6EE
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B6EE:
	word16 ax_84 = Mem0[ss:bp_38 + 0x0008:word16]
	word16 dx_86 = Mem0[ss:bp_38 + 0x0006:word16] + Mem0[ds:0x4EE8:word16]
	Mem88[ss:bp_38 - 0x0006:word16] = ax_84
	Mem89[ss:bp_38 - 0x0008:word16] = dx_86
	word16 sp_90 = sp_11 - 2
	Mem91[ss:sp_90:word16] = ax_84
	Mem93[ss:sp_90 - 2:word16] = dx_86
	Mem96[ss:sp_90 - 4:word16] = Mem93[ss:bp_38 + 0x0008:word16]
	Mem99[ss:sp_90 - 6:word16] = Mem96[ss:bp_38 + 0x0006:word16]
	word16 sp_100
	word16 bp_101
	selector ss_102
	byte SCZO_103
	word16 si_104
	word16 di_105
	byte CZ_106
	bool Z_107
	word16 ax_108
	byte SZO_109
	word16 dx_111
	word16 bx_112
	bool C_113
	byte SO_114
	call SEQ(0x0800, Mem99[ds:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_84,bp_38,bx_28,C_34,CZ_41,di_36,ds_30,dx_86,SCZO_87,si_37,SO_27,sp_98,ss_32,SZO_33,wLoc02_4,wLoc18_10,wLoc1A_13,Z_83
		defs: ax_108,bp_101,bx_112,C_113,CZ_106,di_105,ds_110,dx_111,SCZO_103,si_104,SO_114,sp_100,ss_102,SZO_109,Z_107
	branch ax_108 > 0x0000 l0800_B714
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B714:
	Mem121[ss_102:sp_100 + 0x0006:word16] = Mem99[ss_102:bp_101 + 0x0008:word16]
	Mem124[ss_102:sp_100 + 0x0004:word16] = Mem121[ss_102:bp_101 + 0x0006:word16]
	Mem127[ss_102:sp_100 + 0x0002:word16] = Mem124[ss_102:bp_101 - 0x0006:word16]
	Mem130[ss_102:sp_100:word16] = Mem127[ss_102:bp_101 - 0x0008:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B720:
	fn0800_B6A8(ds, ptrArg00, ptrArg04)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_B711:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_B6EB:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_B956:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_B6D6_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> ds:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_B95E(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_B95E_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_B95E:
	Mem8[ds:0x4EE8:word16] = wArg08
	branch wArg08 == 0x0000 l0800_B97D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +000A(16)

l0800_B96B:
	Mem28[ds:0x4EEA:word16] = wArg0A
	ds = fn0800_B6D6(fp - 2, ds, wArg06)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> -2(fp):bp

l0800_B97D:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> ds:<invalid> al:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_B95E_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> si:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> ds:<invalid> al:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_B97F(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg06, word16 wArg08, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp di es si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_B97F_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0005(8) Local -000E(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B97F:
	word16 ax_128
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_B99A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0005(8) Local -000E(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B99A:
	byte al_100 = (byte) (wArg08 + 0x0001)
	branch wArg08 <u 0xFFFF l0800_B9B0
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9A3:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_B9B5
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9B5:
	ptrLoc10 = DPB(ptrLoc10, wArg04, 0) (alias)
	word16 ax_118 = fn0800_8F50(al_100, ds, wArg02, ptrLoc10, wArg08)
	branch ax_118 <u 0xFFFF l0800_B9DD
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(32) Stack +0006(16) Stack +0008(16)

l0800_B9D0:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_B9E2
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(32) Stack +0006(16) Stack +0008(16)

l0800_B9E2:
	word16 si_138 = (word16) ptrArg04
	word16 cx_135 = ax_118
	selector es_139 = SLICE(ptrArg04, selector, 16)
	word16 di_140 = si_138
	si_146 = si_138
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9ED:
	word16 si_146
	al_100 = Mem0[ds:si_146:byte]
	si_146 = si_146 + 0x0001
	branch al_100 == 0x1A l0800_BA21
// DataOut: al bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> al:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA21:
	word16 cx_238 = -cx_135
	word16 ax_240 = 0x0000 - (cx_238 == 0x0000)
	word16 dx_250
	fn0800_8E29((byte) ax_240, ds, wArg02, cx_238, ax_240, 0x01, out dx_250)
	Mem256[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x0200
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B9F3:
	branch al_100 == 0x0D l0800_B9FC
// DataOut: al bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FC:
	cx_135 = cx_135 - 0x0001
	branch cx_135 != 0x0000 l0800_B9ED
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FE:
	ptrLoc14 = DPB(ptrLoc14, fp - 0x0005, 0) (alias)
	fn0800_8F50((byte) (fp - 0x0005), ds, wArg02, ptrLoc14, 0x0001)
	Mem230[es_139:di_140:byte] = bLoc05
	al_100 = bLoc05
	di_140 = di_140 + 0x0001
// DataOut: al bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9F7:
	Mem197[es_139:di_140:byte] = al_100
	di_140 = di_140 + 0x0001
	cx_135 = cx_135 - 0x0001
	branch cx_135 != 0x0000 l0800_B9ED
// DataOut: al bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FA:
// DataOut: al bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA19:
	branch di_140 != si_138 l0800_BA1F
// DataOut: al bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA1F:
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_BA41:
	ax_128 = di_140 - si_138
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_BA1D:
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9DD:
	ax_128 = ax_118
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B9B0:
	ax_128 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B990:
	ax_128 = fn0800_8D2B(ds, 0x0006)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BA44:
	return ax_128
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_B97F_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> Sequence es:si:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_BA4A(byte al, selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax dh di dil dl ds dx eax edi edx es rax rdi rdx
// Preserved: bp di ds sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BA4A_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BA4A:
	word16 ax_26
	word16 ax_19
	branch msdos_rename_file(ptrArg02, ptrArg06, out ax_19) l0800_BA60
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_BA60:
	ax_26 = fn0800_8D2B(ds, ax_19)
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ah:0x56 Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BA5C:
	ax_26 = 0x0000
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ah:0x56 Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BA64:
	return ax_26
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ah:<invalid> Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds ax:<invalid> al:0xFF -6(fp):<invalid> -4(fp):di -2(fp):bp

fn0800_BA4A_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds ax:<invalid> di:di al:0xFF -6(fp):<invalid> -4(fp):di -2(fp):bp



selector fn0800_BA67(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_BA67_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_BA67:
	selector ds_26
	branch fn0800_ACB3(ds, DPB(ptrLoc0C, wArg02, 0), wArg04, 0x0000, 0x0000, 0x0000, out ds_26) != 0x0000 l0800_BA87
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(32)

l0800_BA7F:
	Mem49[ptrArg02 + 0x0002:word16] = Mem0[ptrArg02 + 0x0002:word16] & 0xFFEF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp

l0800_BA87:
	return ds_26
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp

fn0800_BA67_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp



word16 fn0800_BA89(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_BA89_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_BA89:
	word16 ax_153
	word16 bp_175 = fp - 2
	word16 di_13 = wArg0A
	branch Mem0[ptrArg02 + 0x0012:word16] != wArg02 l0800_BAAB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAA0:
	branch wArg0A > 0x0002 l0800_BAAB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAA5:
	byte SCZO_91 = cond(wArg0C - 0x7FFF)
	branch wArg0C <=u 0x7FFF l0800_BAB1
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAB1:
	branch Mem0[ds:0x26B2:word16] != 0x0000 l0800_BAC7
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAB8:
	branch wArg02 != 0x236C l0800_BAC7
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAC7:
	branch Mem0[ds:0x26B0:word16] != 0x0000 l0800_BADB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BACE:
	branch wArg02 != 0x2358 l0800_BADB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAD5:
	Mem252[ds:0x26B0:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BABF:
	Mem255[ds:0x26B2:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BADB:
	word16 bx_96 = (word16) ptrArg02
	branch Mem0[ptrArg02:word16] == 0x0000 l0800_BAF6
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAE4:
	fn0800_ACB3(ds, DPB(ptrLoc10, bx_96, 0), wArg04, 0x0000, 0x0000, 0x0001, out ds)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAF6:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0004) == 0x0000 l0800_BB0E
// DataOut: bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):0x0001 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BB01:
	fn0800_9E75(ds, Mem0[ptrArg02 + 0x000A:word16], out ds)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):0x0001 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BB0E:
	Mem126[ptrArg02 + 0x0002:word16] = Mem0[ptrArg02 + 0x0002:word16] & 0xFFF3
	Mem128[ptrArg02 + 0x0006:word16] = 0x0000
	Mem133[ptrArg02 + 0x000A:word16] = wArg04
	Mem134[ptrArg02 + 0x0008:word16] = wArg02 + 0x0005
	Mem135[ptrArg02 + 0x000E:word16] = wArg04
	Mem136[ptrArg02 + 0x000C:word16] = wArg02 + 0x0005
	branch wArg0A == 0x0002 l0800_BB92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Stack +0006(16) Stack +0008(16)

l0800_BB3A:
	word16 si_156 = wArg0C
	branch DPB(SCZO_91, false, 0) l0800_BB92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Stack +0006(16) Stack +0008(16)

l0800_BB3E:
	Mem160[ds:0x2352:word16] = 0xC7F0
	branch (wArg06 | wArg08) != 0x0000 l0800_BB6B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0)

l0800_BB4C:
	word16 dx_195
	selector ds_199
	word16 ax_200 = fn0800_9F7F(fp - 2, ds, wArg0C, out dx_195, out bp_175, out si_156, out di_13, out ds_199)
	Mem203[ss:bp_175 + 0x000A:word16] = dx_195
	Mem204[ss:bp_175 + 0x0008:word16] = ax_200
	branch (ax_200 | dx_195) != 0x0000 l0800_BB5E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB5E:
	ptr32 es_bx_209 = Mem204[ss:bp_175 + 0x0004:segptr32]
	Mem213[es_bx_209 + 0x0002:word16] = Mem204[es_bx_209 + 0x0002:word16] | 0x0004
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB6B:
	ptr32 es_bx_177 = Mem160[ss:bp_175 + 0x0004:segptr32]
	word16 ax_180 = Mem160[ss:bp_175 + 0x000A:word16]
	word16 dx_181 = Mem160[ss:bp_175 + 0x0008:word16]
	Mem182[es_bx_177 + 0x000E:word16] = ax_180
	Mem183[es_bx_177 + 0x000C:word16] = dx_181
	Mem184[es_bx_177 + 0x000A:word16] = ax_180
	Mem185[es_bx_177 + 0x0008:word16] = dx_181
	Mem186[es_bx_177 + 0x0006:word16] = si_156
	branch di_13 != 0x0001 l0800_BB92
// DataOut: bx ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB8D:
	Mem190[es_bx_177 + 0x0002:word16] = Mem186[es_bx_177 + 0x0002:word16] | 0x0008
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB92:
	ax_153 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB5B:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BAAB:
	ax_153 = 0xFFFF
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB94:
	return ax_153
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_BA89_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di si:si Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



void fn0800_BB98(word16 wArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_BB98_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_BB98:
	branch (wArg08 | wArg0A) == 0x0000 l0800_BBE4
// DataOut: si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Local -000E(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_BBA7:
	branch fn0800_BFC7(DPB(ptrLoc08, wArg04, 0), wArg06) <u wArg02 l0800_BBD2
// DataOut: si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_BBD2:
	fn0800_BF9E(DPB(ptrLoc0C, wArg08, 0), wArg0A, DPB(ptrLoc08, wArg04, 0))
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BBB6:
	fn0800_C01E(DPB(ptrLoc0E, wArg08, 0), wArg0A, DPB(ptrLoc0A, wArg04, 0), wArg02)
	Mem90[ptrArg08 + wArg02:byte] = 0x00
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BBE4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_BB98_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



void fn0800_BBE9(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx eax ebp ebx ecx es rax rbp rbx rcx
// Preserved: sp
// Stack args: Stack +0002(32)
fn0800_BBE9_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BBE9:
	branch Mem0[ptrArg02 - 0x0001:byte] != 0x2E l0800_BBFC
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BBF9:
	wArg02 = wArg02 - 0x0001
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 Sequence es:bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BBFC:
	word16 v12_16 = wArg02 - 0x0001
	selector es_22 = SLICE(DPB(ptrArg02, v12_16, 0), selector, 16)
	byte al_23 = Mem0[es_22:v12_16:byte]
	word16 ax_24 = (int16) al_23
	word16 cx_26 = 0x0004
	word16 bx_27 = 0xBC39
// DataOut: bx cx
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 Sequence es:bx:<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_BC0F:
	word16 ax_32 = Mem0[0x0800:bx_27:word16]
	branch ax_32 == ax_24 l0800_BC1E
// DataOut: bx cx
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_BC1E:
	word16 sp_60
	word16 bp_61
	selector ss_62
	byte SCZO_63
	word16 bx_64
	selector es_65
	bool Z_66
	byte SZO_67
	byte al_68
	word16 ax_69
	word16 cx_70
	bool C_71
	call Mem0[0x0800:bx_27 + 0x0008:word16] (retsize: 2; depth: 6)
		uses: al_23,ax_32,bp_5,bx_29,C,cx_31,es_22,SCZO_33,sp_6,ss,SZO_19,wLoc02_4,wLoc04_25,Z_34
		defs: al_68,ax_69,bp_61,bx_64,C_71,cx_70,es_65,SCZO_63,sp_60,ss_62,SZO_67,Z_66
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>

l0800_BC17:
	bx_27 = bx_27 + 0x0002
	cx_26 = cx_26 - 0x0001
	branch cx_26 != 0x0000 l0800_BC0F
// DataOut: bx cx
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_BC1C:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16)

l0800_BC31:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>

fn0800_BBE9_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>



void fn0800_BC49(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg08, segptr32 ptrArg0A, word16 wArg0C, segptr32 ptrArg0E, word16 wArg10, segptr32 ptrArg12, word16 wArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi rax rbp rbx rcx rdi rdx rsi si sil
// Preserved: sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)
fn0800_BC49_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC49:
	branch (wArg06 | wArg08) == 0x0000 l0800_BC62
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC5B:
	Mem189[ptrArg06:byte] = 0x00
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:0x0000 ax:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC62:
	branch (wArg0A | wArg0C) == 0x0000 l0800_BC71
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000A(32) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC6A:
	Mem184[ptrArg0A:byte] = 0x00
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC71:
	branch (wArg0E | wArg10) == 0x0000 l0800_BC80
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000E(32) Stack +0012(16) Stack +0014(16)

l0800_BC79:
	Mem179[ptrArg0E:byte] = 0x00
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0012(16) Stack +0014(16)

l0800_BC80:
	branch (wArg12 | wArg14) == 0x0000 l0800_BC8F
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0012(32)

l0800_BC88:
	Mem174[ptrArg12:byte] = 0x00
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC8F:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC9D:
	word16 bx_66 = (word16) ptrArg02
	branch Mem0[ptrArg02:byte] == 0x20 l0800_BC9A
// DataOut: bx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC9A:
	wArg02 = wArg02 + 0x0001
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BCA6:
	segptr32 ptrLoc62_78 = DPB(ptrLoc62, bx_66, 0)
	word16 ax_79 = fn0800_BFC7(ptrLoc62_78, wArg04)
	word16 si_166 = ax_79
	branch ax_79 <= 0x0050 l0800_BCB9
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(32) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_BCB6:
	si_166 = 0x0050
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> -98(fp):bx -96(fp):<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(32) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_BCB9:
	Mem92[ptrLoc06:byte] = 0x00
	segptr32 ptrLoc64_105 = DPB(ptrLoc64, wArg02, 0)
	segptr32 ptrLoc68_113 = DPB(ptrLoc68, fp - 0x0059, 0)
	fn0800_C01E(ptrLoc68_113, ss, ptrLoc64_105, si_166)
	word16 v23_115 = fp - 0x0059 + si_166
	segptr32 ptrLoc06_117 = DPB(ptrLoc06, v23_115, 0)
	Mem121[SLICE(ptrLoc06_117, selector, 16):v23_115:byte] = 0x00
	word16 wLoc06_116 = v23_115
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> -98(fp):bx -96(fp):<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32)

l0800_BCE2:
	word16 v24_129 = wLoc06_116 - 0x0001
	ptrLoc06_117 = DPB(ptrLoc06_117, v24_129, 0) (alias)
	selector es_135 = SLICE(ptrLoc06_117, selector, 16)
	byte al_136 = Mem121[es_135:v24_129:byte]
	wLoc06_116 = v24_129
	word16 ax_137 = (int16) al_136
	word16 cx_139 = 0x0007
	word16 bx_140 = 0xBE1F
// DataOut: bx cx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BCF5:
	word16 ax_145 = Mem121[0x0800:bx_140:word16]
	branch ax_145 == ax_137 l0800_BD04
// DataOut: bx cx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BD04:
	word16 sp_152
	word16 bp_153
	selector ss_154
	byte SCZO_155
	word16 si_156
	word16 di_157
	byte SZO_158
	bool C_159
	word16 ax_160
	bool Z_161
	word16 bx_162
	selector es_163
	word16 cx_164
	byte al_165
	call Mem121[0x0800:bx_140 + 0x000E:word16] (retsize: 2; depth: 96)
		uses: al_136,ax_145,bp_5,bx_142,C_124,cx_144,di_13,es_135,ptrLoc06_131,ptrLoc62_78,ptrLoc64_105,ptrLoc68_113,SCZO_146,si_122,sp_114,ss,SZO_132,wLoc02_4,wLoc04_59,wLoc06_130,wLoc08_138,wLoc5C_9,wLoc5E_12,wLoc60_97,wLoc62_100,wLoc64_103,wLoc66_108,wLoc68_111,Z_147
		defs: al_165,ax_160,bp_153,bx_162,C_159,cx_164,di_157,es_163,SCZO_155,si_156,sp_152,ss_154,SZO_158,Z_161
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>

fn0800_BC49_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:fp - 2 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>

l0800_BCFD:
	bx_140 = bx_140 + 0x0002
	cx_139 = cx_139 - 0x0001
	branch cx_139 != 0x0000 l0800_BCF5
// DataOut: bx cx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BD02:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 2 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32)



void fn0800_BE3B(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E, word16 wArg10, word16 wArg12, word16 wArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)
fn0800_BE3B_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BE3B:
	fn0800_BC49(DPB(ptrLoc16, wArg02, 0), wArg04, DPB(ptrLoc12, wArg06, 0), wArg08, DPB(ptrLoc0E, wArg0A, 0), wArg0C, DPB(ptrLoc0A, wArg0E, 0), wArg10, DPB(ptrLoc06, wArg12, 0), wArg14)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_BE3B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> al:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_BEA2(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di dl si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_BEA2_entry:
	*siOut = si
	*diOut = di
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_BEA2:
	Mem10[ptrArg02:byte] = 0x00
	return fn0800_9828(fp - 2, ds, fp + 0x000A, DPB(ptrLoc0C, wArg06, 0), wArg08)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_BEA2_exit:
// DataOut: di dl si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> di:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):fp + 0x000A -12(fp):<invalid> -10(fp):<invalid> -8(fp):fp + 0x0002 -6(fp):ss -4(fp):0xBE64 -2(fp):bp



byte fn0800_BF18(word16 bx, word16 di, selector ds, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx di ds ss
// LiveOut: di dl
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0006(16) Stack +0008(16)
fn0800_BF18_entry:
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16)

l0800_BF18:
	word16 di_34
	return fn0800_8F97(bx, fp - 2, di, ds, 0xBEE5, 0xBF0D, fp + 0x0002, ss, wArg06, wArg08, out di_34)
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_BF18_exit:
// DataOut: di dl
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -18(fp):0xBEE5 -16(fp):0xBF0D -14(fp):fp + 0x0002 -12(fp):ss -10(fp):<invalid> -8(fp):<invalid> -6(fp):fp + 0x000A -4(fp):ss -2(fp):bp



void fn0800_BF5F(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp di ds es si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BF5F_entry:
// DataOut: sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BF5F:
	word16 di_116 = (word16) ptrArg02
	selector es_19 = SLICE(ptrArg02, selector, 16)
	word16 cx_118 = 0xFFFF
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF70:
	branch cx_118 == 0x0000 l0800_BF72
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF70_1:
	di_116 = di_116 + 0x0001
	cx_118 = cx_118 - 0x0001
	branch 0x00 == Mem0[es_19:di_116:byte] l0800_BF70
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF72:
	word16 si_37 = di_116 - 0x0001
	word16 di_111 = (word16) ptrArg06
	selector es_41 = SLICE(ptrArg06, selector, 16)
	word16 cx_113 = 0xFFFF
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7C:
	branch cx_113 == 0x0000 l0800_BF7E
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:fp - 2 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7C_2:
	di_111 = di_111 + 0x0001
	cx_113 = cx_113 - 0x0001
	branch 0x00 == Mem0[es_41:di_111:byte] l0800_BF7C
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:fp - 2 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7E:
	word16 cx_107 = ~cx_113
	word16 di_52 = di_111 - cx_107
	word16 di_105 = si_37
	word16 si_104 = di_52
	branch (di_52 & 0x0001) == 0x0000 l0800_BF8F
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 10 bp:fp - 2 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF8D:
	Mem103[es_19:si_37:byte] = Mem0[es_41:di_52:byte]
	si_104 = di_52 + 0x0001
	di_105 = si_37 + 0x0001
	cx_107 = cx_107 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF8F:
	word16 cx_70 = cx_107 >>u 0x0001
	cx_78 = cx_70
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF91:
	word16 cx_78
	branch cx_78 == 0x0000 l0800_BF93
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF93:
	branch cx_70 >=u 0x0000 l0800_BF96
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF95:
	Mem99[es_19:di_105:byte] = Mem0[es_41:si_104:byte]
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF96:
	return
// DataOut: sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_BF5F_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> dx:es al:<invalid> cx:<invalid> di:di si:si ds:ds es:es ax:di -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_BF91_1:
	Mem81[es_19:di_105:word16] = Mem0[es_41:si_104:word16]
	si_104 = si_104 + 0x0002
	di_105 = di_105 + 0x0002
	cx_78 = cx_78 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)



void fn0800_BF9E(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BF9E_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BF9E:
	word16 di_15 = (word16) ptrArg06
	selector es_16 = SLICE(ptrArg06, selector, 16)
	word16 si_17 = di_15
	word16 cx_21 = 0xFFFF
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFAE:
	branch cx_21 == 0x0000 l0800_BFB0
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFAE_1:
	di_15 = di_70 + 0x0001
	cx_21 = cx_21 - 0x0001
	word16 di_70 = di_15
	branch 0x00 == Mem0[es_16:di_70:byte] l0800_BFAE
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFB0:
	word16 cx_32 = ~cx_21
	word16 di_40 = (word16) ptrArg02
	selector es_41 = SLICE(ptrArg02, selector, 16)
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BFBA:
	branch cx_32 == 0x0000 l0800_BFBC
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BFBC:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_BF9E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> si:si al:<invalid> cx:<invalid> di:di ax:<invalid> ds:ds dx:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_BFBA_2:
	Mem48[es_41:di_40:byte] = Mem0[es_16:si_17:byte]
	si_17 = si_17 + 0x0001
	di_40 = di_40 + 0x0001
	cx_32 = cx_32 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



word16 fn0800_BFC7(segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_BFC7_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_BFC7:
	word16 di_11 = (word16) ptrArg02
	selector es_12 = SLICE(ptrArg02, selector, 16)
	word16 ax_13 = 0x0000
	branch 0x0000 != wArg04 l0800_BFD9
// DataOut: al ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_BFD5:
	branch 0x0000 == di_11 l0800_BFE3
// DataOut: al ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFD9:
	word16 cx_33 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDD:
	branch cx_33 == 0x0000 l0800_BFDF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDD_1:
	di_11 = di_62 + 0x0001
	cx_33 = cx_33 - 0x0001
	word16 di_62 = di_11
	branch 0x00 == Mem0[es_12:di_62:byte] l0800_BFDD
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDF:
	ax_13 = ~cx_33 - 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFE3:
	return ax_13
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 Sequence es:di:<invalid> ax:<invalid> cx:0x0000 di:<invalid> -4(fp):di -2(fp):bp

fn0800_BFC7_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> di:di cx:0x0000 -4(fp):di -2(fp):bp



word16 fn0800_BFE6(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_BFE6_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_BFE6:
	word16 di_17 = (word16) ptrArg06
	selector es_18 = SLICE(ptrArg06, selector, 16)
	word16 ax_22 = wArg0A
	word16 cx_110 = wArg0A
	branch wArg0A == 0x0000 l0800_C018
// DataOut: ax cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFA:
	di_108 = di_17
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFE:
	word16 di_108
	branch cx_110 == 0x0000 l0800_C000
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFE_1:
	di_108 = di_111 + 0x0001
	cx_110 = cx_110 - 0x0001
	word16 di_111 = di_108
	branch 0x00 == Mem0[es_18:di_111:byte] l0800_BFFE
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C000:
	word16 bx_66 = wArg0A - cx_110
	word16 cx_105 = bx_66
	word16 di_103 = di_17
	selector ds_73 = SLICE(ptrArg02, selector, 16)
	word16 si_101 = (word16) ptrArg02
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C009:
	branch cx_105 == 0x0000 l0800_C00B
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C009_2:
	si_101 = si_113 + 0x0001
	di_103 = di_112 + 0x0001
	cx_105 = cx_105 - 0x0001
	word16 di_112 = di_103
	word16 si_113 = si_101
	branch Mem0[ds_73:si_113:byte] != Mem0[es_18:di_112:byte] l0800_C009
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C00B:
	ax_22 = DPB(wArg0A, 0x00, 8) - DPB(bx_66, 0x00, 8)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C018:
	return ax_22
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> di:<invalid> Sequence ds:si:<invalid> bl:<invalid> ah:<invalid> bh:0x00 -6(fp):di -4(fp):si -2(fp):bp

fn0800_BFE6_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:ds Sequence es:di:<invalid> si:si ax:<invalid> cx:<invalid> ds:ds di:di bx:<invalid> al:<invalid> Sequence ds:si:<invalid> bl:<invalid> ah:<invalid> bh:0x00 -6(fp):di -4(fp):si -2(fp):bp



void fn0800_C01E(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_C01E_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_C01E:
	word16 di_15 = (word16) ptrArg06
	selector es_16 = SLICE(ptrArg06, selector, 16)
	word16 si_17 = di_15
	word16 cx_23 = wArg0A
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C030:
	branch cx_23 == 0x0000 l0800_C032
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C030_1:
	di_15 = di_83 + 0x0001
	cx_23 = cx_23 - 0x0001
	word16 di_83 = di_15
	branch 0x00 == Mem0[es_16:di_83:byte] l0800_C030
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C032:
	word16 di_42 = (word16) ptrArg02
	selector es_43 = SLICE(ptrArg02, selector, 16)
	word16 cx_46 = wArg0A - cx_23
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C03E:
	branch cx_46 == 0x0000 l0800_C040
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C040:
	word16 cx_58 = cx_23
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C042:
	branch cx_58 == 0x0000 l0800_C044
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C044:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_C01E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> si:si al:<invalid> bx:<invalid> cx:<invalid> di:di ds:ds dx:<invalid> ax:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_C042_1:
	Mem62[es_43:di_42:byte] = 0x00
	di_42 = di_42 + 0x0001
	cx_58 = cx_58 - 0x0001
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C03E_2:
	Mem53[es_43:di_42:byte] = Mem0[es_16:si_17:byte]
	si_17 = si_17 + 0x0001
	di_42 = di_42 + 0x0001
	cx_46 = cx_46 - 0x0001
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 bp:fp - 2 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



word16 fn0800_C04F(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax di ds dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_C04F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_C04F:
	selector ds_12
	word16 di_13
	*diOut = fn0800_C379(ds, out ds_12)
	word16 si_29 = Mem0[ptrArg02:word16]
	int32 dx_ax_36 = (int32) (si_29 + 0xF844 >> 0x0002)
	int32 dx_ax_63 = (int32) (si_29 + 0xF844 & 0x0003)
	word16 dx_49
	word16 dx_76
	word16 v19_79 = (word16) (SEQ(Mem0[ds_12:0x26E4:word16], Mem0[ds_12:0x26E2:word16] + 0xA600) + 0x12CEA600) + fn0800_8F18(0x1F80, SLICE(dx_ax_36, word16, 16), 0x0786, (word16) dx_ax_36, out dx_49) + fn0800_8F18(0x3380, SLICE(dx_ax_63, word16, 16), 0x01E1, (word16) dx_ax_63, out dx_76)
	word16 wLoc06_292 = v19_79
	branch (si_29 + 0xF844 & 0x0003) == 0x0000 l0800_C0B9
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0B0:
	wLoc06_292 = v19_79 + 0x5180
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:0x80 di:<invalid> ah:0x33 bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0B9:
	word16 cx_107 = 0x0000
	word16 si_105 = (int16) Mem0[ptrArg02 + 0x0003:byte] - 0x0001
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:0x80 di:<invalid> ah:0x33 bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0D0:
	branch si_105 > 0x0000 l0800_C0C8
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0C8:
	si_105 = si_105 - 0x0001
	cx_107 = cx_107 + (int16) Mem0[ds_12:si_105 + 0x26B4:byte]
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0D4:
	word16 ax_121 = (int16) Mem0[ptrArg02 + 0x0002:byte]
	word16 cx_123 = cx_107 + (ax_121 - 0x0001)
	branch Mem0[ptrArg02 + 0x0003:byte] <= 0x02 l0800_C0EE
// DataOut: bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0E6:
	branch (Mem0[ptrArg02:word16] & 0x0003) != 0x0000 l0800_C0EE
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0ED:
	cx_123 = cx_123 + 0x0001
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0EE:
	word16 ax_148 = (word16) (cx_123 *s 0x0018) + DPB(ax_121 - 0x0001, 0x00, 8)
	word16 si_149 = ax_148
	branch Mem0[ds_12:0x26E6:word16] == 0x0000 l0800_C128
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C10B:
	branch fn0800_C553(ds_12, Mem0[ptrArg02:word16] + 0xF84E, 0x0000, cx_123, (byte) DPB(ax_148, 0x00, 8)) == 0x0000 l0800_C128
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0006(32)

l0800_C127:
	si_149 = ax_148 - 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0006(32)

l0800_C128:
	int32 dx_ax_161 = (int32) si_149
	word16 dx_176
	word16 ax_177 = fn0800_8F18(0x0E10, SLICE(dx_ax_161, word16, 16), 0x0000, (word16) dx_ax_161, out dx_176)
	int32 dx_ax_192 = (int32) DPB(ax_177, 0x00, 8)
	int32 dx_ax_220 = (int32) DPB((word16) ptrArg06, 0x00, 8)
	word16 dx_207
	word16 cx_226 = fn0800_8F18(0x003C, SLICE(dx_ax_192, word16, 16), 0x0000, (word16) dx_ax_192, out dx_207) + (word16) dx_ax_220
	word16 dx_239
	*dxOut = v31
	return wLoc06_292 + ax_177 + (word16) (SEQ(dx_207, cx_226) + dx_ax_220)
// DataOut: ax di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_C04F_exit:
// DataOut: ax di ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:si Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> es:<invalid> di:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_C177(word16 bp, word16 si, selector ds, word16 wArg02, word16 wArg04, segptr32 ptrArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(32) Stack +000A(32)
fn0800_C177_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +000A(32)

l0800_C177:
	selector ds_7
	word16 di_8 = fn0800_C379(ds, out ds_7)
	word16 v10_18 = wArg02 - (word16) (SEQ(Mem0[ds_7:0x26E4:word16], Mem0[ds_7:0x26E2:word16] + 0xA600) + 0x12CEA600)
	Mem30[ptrArg0A + 0x0002:byte] = 0x00
	word16 dx_47
	word16 bp_48
	word16 si_49
	word16 di_50
	byte al_52 = (byte) fn0800_8BCA(fp - 2, si, di_8, wLoc0C, out dx_47, out bp_48, out si_49, out di_50)
	Mem57[Mem30[ss:bp_48 + 0x000C:segptr32] + 0x0003:byte] = al_52
	Mem63[ss:fp - 12:word16] = 0x0000
	Mem65[ss:fp - 14:word16] = 0x003C
	Mem68[ss:fp - 16:word16] = Mem65[ss:bp_48 + 0x0006:word16]
	Mem71[ss:fp - 18:word16] = Mem68[ss:bp_48 + 0x0004:word16]
	word16 dx_72
	word16 bp_73
	word16 si_74
	word16 di_75
	word16 ax_76 = fn0800_8BBB(bp_48, si_49, di_50, bp, out dx_72, out bp_73, out si_74, out di_75)
	Mem77[ss:bp_73 + 0x0006:word16] = dx_72
	Mem78[ss:bp_73 + 0x0004:word16] = ax_76
	Mem84[ss:fp - 20:word16] = 0x0000
	Mem86[ss:fp - 22:word16] = 0x003C
	Mem89[ss:fp - 24:word16] = Mem86[ss:bp_73 + 0x0006:word16]
	Mem92[ss:fp - 26:word16] = Mem89[ss:bp_73 + 0x0004:word16]
	word16 dx_93
	word16 bp_94
	word16 si_95
	word16 di_96
	byte al_98 = (byte) fn0800_8BCA(bp_73, si_74, di_75, bp, out dx_93, out bp_94, out si_95, out di_96)
	Mem102[Mem92[ss:bp_94 + 0x000C:segptr32]:byte] = al_98
	Mem108[ss:fp - 28:word16] = 0x0000
	Mem110[ss:fp - 30:word16] = 0x003C
	Mem113[ss:fp - 32:word16] = Mem110[ss:bp_94 + 0x0006:word16]
	Mem116[ss:fp - 34:word16] = Mem113[ss:bp_94 + 0x0004:word16]
	word16 dx_117
	word16 bp_118
	word16 si_119
	word16 di_120
	word16 ax_121 = fn0800_8BBB(bp_94, si_95, di_96, bp, out dx_117, out bp_118, out si_119, out di_120)
	Mem122[ss:bp_118 + 0x0006:word16] = dx_117
	Mem123[ss:bp_118 + 0x0004:word16] = ax_121
	Mem129[ss:fp - 36:word16] = 0x0000
	Mem131[ss:fp - 38:word16] = 0x88F8
	Mem134[ss:fp - 40:word16] = Mem131[ss:bp_118 + 0x0006:word16]
	Mem137[ss:fp - 42:word16] = Mem134[ss:bp_118 + 0x0004:word16]
	word16 dx_138
	word16 bp_139
	word16 si_140
	word16 di_141
	word16 ax_145 = (fn0800_8BBB(bp_118, si_119, di_120, bp, out dx_138, out bp_139, out si_140, out di_141) << 0x0002) + 0x07BC
	Mem149[Mem137[ss:bp_139 + 0x0008:segptr32]:word16] = ax_145
	Mem155[ss:fp - 44:word16] = 0x0000
	Mem157[ss:fp - 46:word16] = 0x88F8
	Mem160[ss:fp - 48:word16] = Mem157[ss:bp_139 + 0x0006:word16]
	Mem163[ss:fp - 50:word16] = Mem160[ss:bp_139 + 0x0004:word16]
	word16 dx_164
	word16 si_166
	word16 di_167
	word16 bp_165
	word16 ax_168 = fn0800_8BCA(bp_139, si_140, di_141, bp, out dx_164, out bp_165, out si_166, out di_167)
	Mem169[ss:bp_165 + 0x0006:word16] = dx_164
	Mem170[ss:bp_165 + 0x0004:word16] = ax_168
	word16 sp_162 = fp - 50
	branch Mem170[ss:bp_165 + 0x0006:word16] < 0x0000 l0800_C26F
// DataOut: bp di ds si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_C22B:
	branch Mem170[ss:bp_165 + 0x0006:word16] != 0x0000 l0800_C234
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xF8 ds:<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C22D:
	branch Mem170[ss:bp_165 + 0x0004:word16] <u 0x2250 l0800_C26F
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xF8 ds:<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C234:
	Mem437[ss:bp_165 + 0x0004:word16] = Mem170[ss:bp_165 + 0x0004:word16] - 0x2250
	Mem441[ss:bp_165 + 0x0006:word16] = v32
	ptr32 es_bx_442 = Mem441[ss:bp_165 + 0x0008:segptr32]
	Mem446[es_bx_442:word16] = Mem441[es_bx_442:word16] + 0x0001
	Mem452[ss:fp - 52:word16] = 0x0000
	Mem454[ss:fp - 54:word16] = 0x2238
	Mem457[ss:fp - 56:word16] = Mem454[ss:bp_165 + 0x0006:word16]
	Mem460[ss:fp - 58:word16] = Mem457[ss:bp_165 + 0x0004:word16]
	word16 dx_461
	word16 bp_462
	word16 si_463
	word16 di_464
	word16 ax_465 = fn0800_8BBB(bp_165, si_166, di_167, bp, out dx_461, out bp_462, out si_463, out di_464)
	ptr32 es_bx_466 = Mem460[ss:bp_462 + 0x0008:segptr32]
	Mem470[es_bx_466:word16] = Mem460[es_bx_466:word16] + ax_465
	Mem476[ss:fp - 60:word16] = 0x0000
	Mem478[ss:fp - 62:word16] = 0x2238
	Mem481[ss:fp - 64:word16] = Mem478[ss:bp_462 + 0x0006:word16]
	Mem484[ss:fp - 66:word16] = Mem481[ss:bp_462 + 0x0004:word16]
	word16 dx_485
	word16 ax_489 = fn0800_8BCA(bp_462, si_463, di_464, bp, out dx_485, out bp_165, out si_166, out di_167)
	Mem490[ss:bp_165 + 0x0006:word16] = dx_485
	Mem491[ss:bp_165 + 0x0004:word16] = ax_489
	sp_162 = fp - 66
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xF8 ds:<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C26F:
	branch Mem170[ds_7:0x26E6:word16] == 0x0000 l0800_C2B4
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):0x2238 -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C276:
	word16 sp_372 = sp_162 - 2
	Mem373[ss:sp_372:word16] = 0x0000
	Mem375[ss:sp_372 - 2:word16] = 0x0018
	Mem378[ss:sp_372 - 4:word16] = Mem375[ss:bp_165 + 0x0006:word16]
	Mem381[ss:sp_372 - 6:word16] = Mem378[ss:bp_165 + 0x0004:word16]
	word16 dx_382
	word16 bp_383
	word16 si_384
	word16 di_385
	Mem388[ss:sp_372 - 8:word16] = fn0800_8BCA(bp_165, si_166, di_167, bp, out dx_382, out bp_383, out si_384, out di_385)
	Mem394[ss:sp_372 - 10:word16] = 0x0000
	Mem396[ss:sp_372 - 12:word16] = 0x0018
	Mem399[ss:sp_372 - 14:word16] = Mem396[ss:bp_383 + 0x0006:word16]
	Mem402[ss:sp_372 - 16:word16] = Mem399[ss:bp_383 + 0x0004:word16]
	word16 dx_403
	Mem409[ss:sp_372 - 18:word16] = fn0800_8BBB(bp_383, si_384, di_385, bp, out dx_403, out bp_165, out si_166, out di_167)
	Mem412[ss:sp_372 - 20:word16] = 0x0000
	Mem420[ss:sp_372 - 22:word16] = Mem412[Mem412[ss:bp_165 + 0x0008:segptr32]:word16] + 0xF84E
	sp_162 = sp_372 - 0x000E
	branch fn0800_C553(ds_7, wArg00, v10_18, v11, bArg06) == 0x0000 l0800_C2B4
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):0x2238 -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C2AC:
	Mem430[ss:bp_165 + 0x0004:word16] = Mem420[ss:bp_165 + 0x0004:word16] + 0x0001
	Mem434[ss:bp_165 + 0x0006:word16] = v44
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C2B4:
	word16 sp_202 = sp_162 - 2
	Mem203[ss:sp_202:word16] = 0x0000
	Mem205[ss:sp_202 - 2:word16] = 0x0018
	Mem208[ss:sp_202 - 4:word16] = Mem205[ss:bp_165 + 0x0006:word16]
	Mem211[ss:sp_202 - 6:word16] = Mem208[ss:bp_165 + 0x0004:word16]
	word16 dx_212
	word16 bp_213
	word16 si_214
	word16 di_215
	byte al_217 = (byte) fn0800_8BCA(bp_165, si_166, di_167, bp, out dx_212, out bp_213, out si_214, out di_215)
	Mem221[Mem211[ss:bp_213 + 0x000C:segptr32] + 0x0001:byte] = al_217
	Mem227[ss:sp_202 - 8:word16] = 0x0000
	Mem229[ss:sp_202 - 10:word16] = 0x0018
	Mem232[ss:sp_202 - 12:word16] = Mem229[ss:bp_213 + 0x0006:word16]
	Mem235[ss:sp_202 - 14:word16] = Mem232[ss:bp_213 + 0x0004:word16]
	word16 dx_236
	word16 bp_237
	word16 si_238
	word16 di_239
	word16 ax_240 = fn0800_8BBB(bp_213, si_214, di_215, bp, out dx_236, out bp_237, out si_238, out di_239)
	Mem241[ss:bp_237 + 0x0006:word16] = dx_236
	Mem242[ss:bp_237 + 0x0004:word16] = ax_240
	Mem244[ss:bp_237 + 0x0004:word16] = Mem242[ss:bp_237 + 0x0004:word16] + 0x0001
	Mem248[ss:bp_237 + 0x0006:word16] = v50
	branch (Mem248[Mem248[ss:bp_237 + 0x0008:segptr32]:word16] & 0x0003) != 0x0000 l0800_C326
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C2F3:
	branch Mem248[ss:bp_237 + 0x0006:word16] < 0x0000 l0800_C30B
// DataOut: bp ds sp ss
// DataOut (flags): SZO
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C2F9:
	branch Mem248[ss:bp_237 + 0x0006:word16] > 0x0000 l0800_C301
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C2FB:
	branch Mem248[ss:bp_237 + 0x0004:word16] <=u 0x003C l0800_C30B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C30B:
	branch Mem248[ss:bp_237 + 0x0006:word16] != 0x0000 l0800_C326
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C311:
	branch Mem248[ss:bp_237 + 0x0004:word16] != 0x003C l0800_C326
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C317:
	ptr32 es_bx_352 = Mem248[ss:bp_237 + 0x0008:segptr32]
	Mem355[es_bx_352 + 0x0003:byte] = 0x02
	Mem356[es_bx_352 + 0x0002:byte] = 0x1D
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C301:
	Mem360[ss:bp_237 + 0x0004:word16] = Mem248[ss:bp_237 + 0x0004:word16] - 0x0001
	Mem364[ss:bp_237 + 0x0006:word16] = v53
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C326:
	Mem284[Mem248[ss:bp_237 + 0x0008:segptr32] + 0x0003:byte] = 0x00
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C34D:
	int32 dx_ax_297 = (int32) (int16) Mem284[ds_7:(int16) Mem284[Mem284[ss:bp_237 + 0x0008:segptr32] + 0x0003:byte] + 0x26B4:byte]
	word16 ax_298 = (word16) dx_ax_297
	word16 dx_299 = SLICE(dx_ax_297, word16, 16)
	branch dx_299 < Mem284[ss:bp_237 + 0x0006:word16] l0800_C330
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C362:
	branch dx_299 != Mem284[ss:bp_237 + 0x0006:word16] l0800_C369
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C364:
	branch ax_298 <u Mem284[ss:bp_237 + 0x0004:word16] l0800_C330
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C330:
	ptr32 es_bx_308 = Mem284[ss:bp_237 + 0x0008:segptr32]
	Mem319[ss:bp_237 + 0x0004:word16] = Mem284[ss:bp_237 + 0x0004:word16] - (word16) ((int32) ((int16) Mem284[ds_7:(int16) Mem284[es_bx_308 + 0x0003:byte] + 0x26B4:byte]))
	Mem323[ss:bp_237 + 0x0006:word16] = v57
	selector es_310 = SLICE(es_bx_308, selector, 16)
	word16 bx_325 = Mem323[ss:bp_237 + 0x0008:word16]
	Mem327[es_310:bx_325 + 0x0003:byte] = Mem323[es_310:bx_325 + 0x0003:byte] + 0x01
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C369:
	ptr32 es_bx_331 = Mem284[ss:bp_237 + 0x0008:segptr32]
	Mem335[es_bx_331 + 0x0003:byte] = Mem284[es_bx_331 + 0x0003:byte] + 0x01
	Mem338[es_bx_331 + 0x0002:byte] = Mem335[ss:bp_237 + 0x0004:byte]
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C377:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_C177_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



word16 fn0800_C379(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: di ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
fn0800_C379_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Local -0012(16)

l0800_C379:
	segptr32 ptrLoc0C_118 = DPB(ptrLoc0C, 0x26E8, 0)
	word16 dx_19
	word16 ax_20 = fn0800_AFCB(ds, ptrLoc0C_118, out dx_19)
	branch (ax_20 | dx_19) != 0x0000 l0800_C397
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -000E(16) Local -0012(16)

l0800_C397:
	ptrLoc0C_118 = DPB(ptrLoc0C, ax_20, 0) (alias)
	branch fn0800_BFC7(ptrLoc0C_118, dx_19) >=u 0x0004 l0800_C3AA
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:ds es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):0x26E8 -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3AA:
	selector es_129 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem0[ds:(int16) Mem0[ptrLoc06:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3BD:
	branch ((int16) Mem0[ds:(int16) Mem0[es_129:ax_20 + 0x0001:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3D1:
	branch ((int16) Mem0[ds:(int16) Mem0[es_129:ax_20 + 0x0002:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3E5:
	branch Mem0[es_129:ax_20 + 0x0003:byte] == 0x2D l0800_C404
// DataOut: bx ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3EF:
	branch Mem0[es_129:ax_20 + 0x0003:byte] == 0x2B l0800_C404
// DataOut: bx ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3F6:
	branch (Mem0[ds:(int16) Mem0[es_129:ax_20 + 0x0003:byte] + 0x2251:byte] & 0x02) == 0x00 l0800_C42C
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C404:
	selector es_168 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem0[ds:(int16) Mem0[ptrLoc06 + 0x0003:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C418:
	branch ((int16) Mem0[ds:(int16) Mem0[es_168:ax_20 + 0x0004:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C467:
	fn0800_B083(Mem0[ds:0x26DE:word16], Mem0[ds:0x26E0:word16], 0x00, 0x0004)
	fn0800_C01E(DPB(ptrLoc12, Mem0[ds:0x26DA:word16], 0), Mem0[ds:0x26DC:word16], DPB(ptrLoc0E, ax_20, 0), 0x0003)
	ptr32 es_bx_215 = Mem0[ds:0x26DA:segptr32]
	Mem219[es_bx_215 + 0x0003:byte] = 0x00
	word16 dx_229
	word16 ax_230 = fn0800_A471((byte) es_bx_215, ds, DPB(ptrLoc0C, ax_20 + 0x0003, 0), out dx_229)
	word16 dx_247
	word16 ax_248 = fn0800_8F18(0x0E10, dx_229, 0x0000, ax_230, out dx_247)
	Mem249[ds:0x26E4:word16] = dx_247
	Mem250[ds:0x26E2:word16] = ax_248
	Mem251[ds:0x26E6:word16] = 0x0000
	word16 si_252 = 0x0003
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C542:
	branch Mem251[ptrLoc06 + si_252:byte] == 0x00 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C54B:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C4CA:
	branch (Mem251[ds:(int16) Mem251[ptrLoc06 + si_252:byte] + 0x2251:byte] & 0x0C) == 0x00 l0800_C541
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C541:
	si_252 = si_252 + 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C4DA:
	branch fn0800_BFC7(DPB(ptrLoc0C, ax_20 + si_252, 0), dx_19) <u 0x0003 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_C4ED:
	selector es_290 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem251[ds:(int16) Mem251[es_290:(word16) ptrLoc06 + 0x0001 + si_252:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_C501:
	branch ((int16) Mem251[ds:(int16) Mem251[es_290:ax_20 + 0x0002 + si_252:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_C515:
	fn0800_C01E(DPB(ptrLoc12, Mem251[ds:0x26DE:word16], 0), Mem251[ds:0x26E0:word16], DPB(ptrLoc0E, ax_20 + si_252, 0), 0x0003)
	Mem333[Mem251[ds:0x26DE:segptr32] + 0x0003:byte] = 0x00
	Mem334[ds:0x26E6:word16] = 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_C3A7:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0012(16)

l0800_C394:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:ds es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):0x26E8 -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0012(16)

l0800_C42C:
	Mem69[ds:0x26E6:word16] = 0x0001
	Mem70[ds:0x26E4:word16] = 0x0000
	Mem71[ds:0x26E2:word16] = 0x4650
	fn0800_BF9E(DPB(ptrLoc10, Mem71[ds:0x26DA:word16], 0), Mem71[ds:0x26DC:word16], DPB(ptrLoc0C_118, 0x26EB, 0))
	fn0800_BF9E(DPB(ptrLoc10, Mem71[ds:0x26DE:word16], 0), Mem71[ds:0x26E0:word16], DPB(ptrLoc0C_118, 0x26EF, 0))
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_C54E:
	return di
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_C379_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cx:<invalid> si:si Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_C553(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)
fn0800_C553_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C553:
	branch wArg04 != 0x0000 l0800_C589
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C589:
	branch wArg04 <u 0x0003 l0800_C59A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C58F:
	branch (wArg02 + 0x0046 & 0x0003) == 0x0000 l0800_C59D
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C59A:
	wArg06 = wArg06 - 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C59D:
	wArg06 = wArg06 + Mem0[ds:(wArg04 - 0x0001 << 0x0001) + 0x26C0:word16]
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C55D:
	word16 si_134 = wArg06
	branch wArg06 <u 0x003B l0800_C572
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C566:
	branch (wArg02 + 0x0046 & 0x0003) != 0x0000 l0800_C572
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C571:
	si_134 = wArg06 - 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C572:
	wArg04 = 0x0000
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C57C:
	branch Mem0[ds:(wArg04 << 0x0001) + 0x26C0:word16] <=u si_134 l0800_C579
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C579:
	wArg04 = wArg04 + 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C587:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5AA:
	word16 ax_34
	branch wArg04 <u 0x0004 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B0:
	branch wArg04 == 0x0004 l0800_C5BA
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B2:
	branch wArg04 >u 0x000A l0800_C62B
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B8:
	branch wArg04 != 0x000A l0800_C626
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5BA:
	word16 cx_116
	word16 bx_66 = wArg04 << 0x0001
	branch wArg02 <= 0x0010 l0800_C5D4
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5C5:
	branch wArg04 != 0x0004 l0800_C5D4
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5D4:
	cx_116 = Mem0[ds:bx_66 + 0x26C0:word16]
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5CB:
	cx_116 = Mem0[ds:bx_66 + 0x26BE:word16] + 0x0007
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5D8:
	branch ((byte) (wArg02 + 0x07B2) & 0x03) == 0x00 l0800_C5E5
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5E4:
	cx_116 = cx_116 - 0x0001
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5E5:
	word16 cx_96 = cx_116 - (uint16) ((uint32) ((uint16) (((wArg02 + 0x0001 >> 0x0002) + cx_116) + 0x0171)) % 0x0007)
	branch wArg04 != 0x0004 l0800_C61A
// DataOut: ax cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C61A:
	branch wArg06 <u cx_96 l0800_C626
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C61E:
	branch wArg06 != cx_96 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C620:
	branch bArg08 >u 0x01 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C60C:
	branch wArg06 >u cx_96 l0800_C626
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C610:
	branch wArg06 != cx_96 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C612:
	branch bArg08 <u 0x02 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C62B:
	ax_34 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C618:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C626:
	ax_34 = 0x0001
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C62D:
	return ax_34
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>

fn0800_C553_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> si:si cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>



word16 fn0800_C632(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax dl ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_C632_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0098(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C632:
	word16 ax_124
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_C64E
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0098(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C64E:
	byte al_102 = (byte) (wArg08 + 0x0001)
	branch wArg08 >=u 0xFFFF l0800_C65C
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C65C:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_C677
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C668:
	word16 dx_395
	al_102 = (byte) fn0800_8E29(0x00, ds, wArg02, 0x0000, 0x0000, 0x02, out dx_395) (alias)
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C677:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_C696
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C696:
	Mem131[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	word16 wLoc08_139 = wArg08
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C727:
	word16 wLoc06_165 = fp - 0x0090
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C731:
	word16 si_251
	word16 ax_250
	word16 dx_240
	branch wLoc08_139 == 0x0000 l0800_C73A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(32) Local -000E(32) Stack +0008(16)

l0800_C73A:
	si_251 = wLoc06_165 - (fp - 0x0090)
	byte dl_341
	*dlOut = (byte) (0x0000 - (si_251 <u 0x0000))
	branch DPB(CZ, false, 0) l0800_C770
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Stack +0008(16)

l0800_C74E:
	byte dl_370
	word16 ax_371 = fn0800_C779((byte) (fp - 0x0090), ds, wArg02, DPB(ptrLoc9A, fp - 0x0090, 0), si_251, out dl_370)
	dx_240 = ax_371
	byte dl_374
	*dlOut = (byte) ax_371
	branch ax_371 == si_251 l0800_C770
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> Sequence es:bx:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Stack +0008(16)

l0800_C770:
	ax_124 = wArg08
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C762:
	branch ax_371 == 0xFFFF l0800_C71A
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Stack +0008(16)

l0800_C767:
	ax_250 = wArg08
// DataOut: ax dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C737:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -0008(32) Local -000E(32) Stack +0008(16)

l0800_C6B4:
	word16 v20_257 = wLoc08_139 - 0x0001
	wLoc08_139 = v20_257
	byte al_265 = Mem131[ptrLoc0E:byte]
	branch al_265 != 0x0A l0800_C6D1
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -0008(0) Local -0009(8) Local -000E(32) Stack +0008(16)

l0800_C6C7:
	Mem330[ptrLoc06:byte] = 0x0D
	wLoc06_165 = wLoc06_165 + 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -0008(0) Local -0009(8) Local -000E(32) Stack +0008(16)

l0800_C6D1:
	Mem275[ptrLoc06:byte] = al_265
	word16 v26_276 = wLoc06_165 + 0x0001
	word16 dx_281 = v26_276 - (fp - 0x0090)
	wLoc06_165 = v26_276
	word16 bx_285 = 0x0000 - (dx_281 <u 0x0000)
	CZ = DPB(CZ, false, 0) (alias)
	branch bx_285 < 0x0000 l0800_C731
// DataOut: di ds dx ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C6EF:
	branch bx_285 != 0x0000 l0800_C6F7
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C6F1:
	branch dx_281 <u 0x0080 l0800_C731
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C6F7:
	si_251 = v26_276 - (fp - 0x0090)
	ptrLoc9A = DPB(ptrLoc9A, fp - 0x0090, 0) (alias)
	byte dl_312
	word16 ax_313 = fn0800_C779((byte) (fp - 0x0090), ds, wArg02, ptrLoc9A, si_251, out dl_312)
	dx_240 = ax_313
	byte dl_316
	*dlOut = (byte) ax_313
	branch ax_313 == si_251 l0800_C727
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C715:
	branch ax_313 != 0xFFFF l0800_C71F
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +0008(16)

l0800_C71F:
	ax_250 = wArg08 - v20_257
// DataOut: ax dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C76A:
	ax_124 = ax_250 + dx_240 - si_251
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C71A:
	ax_124 = 0xFFFF
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C76E:
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C683:
	byte dl_123
	ax_124 = fn0800_C779(al_102, ds, wArg02, DPB(ptrLoc9A, wArg04, 0), wArg08, out dl_123)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C657:
	ax_124 = 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C644:
	ax_124 = fn0800_8D2B(ds, 0x0006)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C773:
	return ax_124
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 2 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp

fn0800_C632_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di ax:<invalid> si:si bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp



word16 fn0800_C779(byte al, selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32) Stack +0008(16)
fn0800_C779_entry:
	*dlOut = dl
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_C779:
	word16 wLoc04_36
	word16 ax_23
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0001) == 0x0000 l0800_C78F
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_C78F:
	byte dl_59 = (byte) ptrArg04
	*dlOut = dl_59
	word16 ax_60
	branch msdos_write_file(wArg02, wArg08, ptrArg04, out ax_60) l0800_C7AF
// DataOut: ax di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16)

l0800_C7AF:
	wLoc04_36 = ax_60
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_C7A0:
	Mem70[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x1000
	ax_23 = ax_60
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_C789:
	wLoc04_36 = 0x0005
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_C7B0:
	ax_23 = fn0800_8D2B(ds, wLoc04_36)
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 bx:<invalid> ax:0x0005 ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):<invalid> -2(fp):bp

l0800_C7B3:
	return ax_23
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 bx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_C779_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp



void fn1483_0ADB()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn1483_0ADB_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0ADB:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1483_0ADB_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



real64 fn1483_0ADC(byte al, byte ah, word16 cx, word16 dx, byte bl, byte bh, word16 bp, word16 si, word16 di, selector es, selector ds, selector fs, real64 rArg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah al bh bl bp ch cl cs cx dh di dl ds dx es fs si sil ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl ss
// Preserved:
fn1483_0ADC_entry:
// DataOut: ah al bh bl bp ch cl cs cx dh di dl ds dx es fs si sil ss
// DataOut (flags): P
// SymbolicIn: sp:fp

l1483_0ADC:
	word16 cx_19
	word16 dx_20
	word16 bx_21
	word16 bp_22
	word16 si_23
	word16 di_24
	selector es_25
	word16 ax_26 = fn1483_0D3F(al, ah, cx, dx, bl, bh, bp, si, di, es, ds, fs, wLoc02, wArg00, wArg02, wArg04, wArg06, out cx_19, out dx_20, out bx_21, out bp_22, out si_23, out di_24, out es_25)
	real64 rArg0_29 = Mem0[es_25:di_24 + 0xE086:real32] - rArg0
	Mem32[ss:fp - 2:word16] = ax_26
	Mem35[ss:fp - 4:word16] = cx_19
	Mem37[ss:fp - 6:word16] = dx_20
	Mem39[ss:fp - 8:word16] = bx_21
	Mem41[ss:fp - 10:word16] = fp
	Mem43[ss:fp - 12:word16] = bp_22
	Mem45[ss:fp - 14:word16] = si_23
	Mem47[ss:fp - 16:word16] = di_24
	return rArg0_29
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1483_0ADC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> si:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> dl:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> eax:<invalid> bh:<invalid> ss:<invalid> ds:<invalid> -16(fp):di -14(fp):si -12(fp):bp -10(fp):fp -8(fp):bx -6(fp):dx -4(fp):cx -2(fp):ax



word16 fn1483_0C11(byte al, word16 cx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bh bl bp bx cs cx di ds es si ss
// LiveOut: ax bp bx cx di dx es ss
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl ss
// Preserved: si
l1483_0C11:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_0C11_entry:
// DataOut: al bh bl bp bx cs cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1483_0C11:
	branch al != Mem0[ss:si:byte] l1483_0C4D
// DataOut: al bh bl bp bx cs cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l1483_0C4D:
// DataOut: al bh bl bp bx cs cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 4 dx:0x8000 -4(fp):si -2(fp):cx

l1483_0C53_thunk_fn1483_0C55:
	word16 cx_85
	word16 dx_86
	word16 bx_87
	word16 bp_88
	word16 si_89
	word16 di_90
	selector es_91
	return fn1483_0C55(al + 0x01, cx, bx, bp, si, di, es, ds, wArg00, wArg02, wArg04, out cx_85, out dx_86, out bx_87, out bp_88, out si_89, out di_90, out es_91)
// DataOut: ax bp bx cx di dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:0x4000 si:si cx:cx al:al + 0x01 -4(fp):si -2(fp):cx

l1483_0C1B:
	branch al - 0x8C - (al <u Mem0[ss:si:byte]) != 0x00 && cx != 0x0001 l1483_0C22_thunk_fn1483_0C6C
// DataOut: al bh bl bp bx cl cs cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 dx:0x8000 -4(fp):si -2(fp):cx

l1483_0C22_thunk_fn1483_0C6C:
	word16 cx_62
	word16 dx_63
	word16 bx_64
	word16 bp_65
	word16 di_66
	selector es_67
	return fn1483_0C6C(0x55, cx - 0x0001, 0x8000, bx, bp, si, di, es, ds, out cx_62, out dx_63, out bx_64, out bp_65, out di_66, out es_67)
// DataOut: ax bp bx cx di dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 dx:0x8000 al:0x55 ax:0x1955 cx:cx - 0x0001 -8(fp):bx -6(fp):ax -4(fp):si -2(fp):cx

fn1483_0C11_exit:
// DataOut: ax bp bx cx di dx es ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> si:<invalid> di:<invalid> eax:<invalid> dh:<invalid> ch:<invalid> es:<invalid> dl:<invalid> bp:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> bh:<invalid> ss:<invalid> ds:<invalid> bx:<invalid> -8(fp):bx -6(fp):ax -4(fp):si -2(fp):cx

l1483_0C24:
	Mem52[es:di:word16] = 0x1955
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 dx:0x8000 al:0x55 ax:0x1955 cx:cx - 0x0001 -8(fp):bx -6(fp):ax -4(fp):si -2(fp):cx



word16 fn1483_0C55(byte al, word16 cx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, word16 wArg00, word16 wArg02, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z al bh bl bp bx cs cx di ds es si ss
// LiveOut: ax bp bx cx di dx es si ss
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl ss
// Preserved:
// Stack args: Stack +0000(16) Stack +0002(16) Stack +0004(16)
l1483_0C55:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_0C55_entry:
	*cxOut = cx
	*bxOut = bx
	*bpOut = bp
	*esOut = es
	*siOut = si
// DataOut: al ax bh bl bp bx cs cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16) Stack +0004(16)

l1483_0C55:
	branch Z l1483_0C55_thunk_fn1483_0C11
// DataOut: al ax bh bl bp bx cs cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16) Stack +0004(16)

l1483_0C55_thunk_fn1483_0C11:
	word16 cx_43
	word16 dx_44
	word16 bx_45
	word16 bp_46
	word16 di_47
	selector es_48
	return fn1483_0C11(al, cx, bx, bp, si, di, es, ds, out cx_43, out dx_44, out bx_45, out bp_46, out di_47, out es_48)
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0C57:
	word16 si_23
	*siOut = wArg00
	word16 dx_31
	*dxOut = wArg02
	word16 di_34
	*diOut = wArg04
	return ax
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1483_0C55_exit:
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> di:<invalid> al:<invalid> ax:<invalid> cx:<invalid> eax:<invalid> dh:<invalid> ch:<invalid> es:<invalid> dl:<invalid> bp:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> bh:<invalid> ss:<invalid> ds:<invalid> bx:<invalid>



word16 fn1483_0C6C(byte al, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bh bl bp bx cl cs cx di ds dx es si ss
// LiveOut: ax bp bx cx di dx es ss
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl ss
// Preserved: ebx sp
l1483_0C6C:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_0C6C_entry:
// DataOut: al bh bl bp bx cl cs cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0C6C:
	byte al_4
	__daa(al, &al_4)
	word16 cx_14
	byte dl_15
	byte dh_16
	word16 bx_17
	word16 bp_18
	word16 si_19
	word16 di_20
	selector es_21
	selector ds_22
	word16 ax_23 = fn1483_1BB8(al_4, cx, dx, bx, bp, si, di, es, ds, out cx_14, out dl_15, out dh_16, out bx_17, out bp_18, out si_19, out di_20, out es_21, out ds_22)
	word16 ax_26 = ax_23 + Mem0[ds_22:bx_17 + 0x3303:word16]
	byte dh_37 = dh_16 + Mem0[ds_22:si_19 + 0x147C:byte] + (ax_26 <u 0x0000)
	word16 di_25 = di_20 + Mem0[ds_22:bx_17:word16]
	word16 sp_47 = Mem0[ss:fp:word16]
	word16 v17_49 = Mem0[ds_22:ax_26 + 0x020E + di_25:word16] + di_25
	Mem50[ds_22:ax_26 + 0x020E + di_25:word16] = v17_49
	word16 ax_41 = (word16) ebx - 0x0903 - (dh_37 <u 0x00)
	word16 dx_38 = DPB(dx, dh_37, 8)
	byte al_42 = (byte) ax_41
	byte ah_45 = SLICE(ax_41, byte, 8)
	byte ch_54 = SLICE(cx_14 - 0x0001, byte, 8)
	branch v17_49 != 0x0000 && cx_14 != 0x0001 l1483_0C85_thunk_fn1483_0CA0
// DataOut: ah al bh bl bp bx ch cl cs cx di dl ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0C85_thunk_fn1483_0CA0:
	word16 cx_117
	word16 dx_118
	word16 bx_119
	word16 bp_120
	word16 di_121
	return fn1483_0CA0(al_42, ah_45, dl_15, ax_26, bp_18, si_19, di_25, es_21, ds_22, out cx_117, out dx_118, out bx_119, out bp_120, out di_121)
// DataOut: ax bp bx cx di dx es ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> di:<invalid> ax:<invalid> eax:<invalid> ebx:ebx dh:<invalid> cx:<invalid> dx:<invalid> si:<invalid> bp:<invalid> bh:<invalid> es:<invalid> ss:<invalid> ds:<invalid> bx:<invalid> ch:<invalid>

l1483_0C87:
	word16 ax_85 = Mem50[ds_22:ax_26:word16]
	Mem88[ss:sp_47:word16] = si_19
	Mem92[es_21:di_25:byte] = Mem88[ds_22:si_19:byte]
	word16 dx_81 = dx_38 | cx_14 - 0x0001
	word16 cx_90 = DPB(cx_14 - 0x0001, ch_54 + (byte) ax_85, 8)
// DataOut: ah al ax bh bl bp bx ch cs cx di ds dx si sil ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> al:<invalid> di:<invalid> ax:<invalid> eax:<invalid> ebx:ebx dh:<invalid> cx:<invalid> dx:<invalid> si:<invalid> bp:<invalid> bh:<invalid> es:<invalid> ss:<invalid> ds:<invalid> bx:<invalid> ch:<invalid>

l1483_0C8F_thunk_fn1483_0C91:
	word16 cx_105
	word16 dx_106
	word16 bx_107
	word16 bp_108
	word16 si_109
	word16 di_110
	selector es_111
	return fn1483_0C91(ax_85 * 0x0002, cx_90, dx_81, ax_26, bp_18, si_19 + 0x0001, di_25 + 0x0001, ds_22, psegArg00, out cx_105, out dx_106, out bx_107, out bp_108, out si_109, out di_110, out es_111)
// DataOut: ax bp bx cx di dx es ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> di:<invalid> ax:<invalid> eax:<invalid> ebx:ebx dh:<invalid> cx:<invalid> dx:<invalid> ch:<invalid> si:<invalid> bp:<invalid> bh:<invalid> es:<invalid> ss:<invalid> ds:<invalid> bx:<invalid>

fn1483_0C6C_exit:
// DataOut: ax bp bx cx di dx es ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> di:<invalid> ax:<invalid> eax:<invalid> ebx:ebx dh:<invalid> cx:<invalid> dx:<invalid> ch:<invalid> si:<invalid> es:<invalid> dl:<invalid> bp:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> bh:<invalid> ss:<invalid> ds:<invalid> bx:<invalid>



word16 fn1483_0C91(word16 ax, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector ds, selector psegArg00, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C ah al ax bh bl bp bx ch cs cx di ds dx si sil ss
// LiveOut: ax bp bx cx di dx es si ss
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl ss
// Preserved:
// Stack args: Stack +0000(16)
l1483_0C91:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_0C91_entry:
	*siOut = si
// DataOut: ah al ax bh bl bp bx ch cs cx di ds dx si sil ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) v13(8) v19(8) v21(8) v23(16) v25(16) v26(16) v27(16)

l1483_0C91:
	byte al_11 = al + ch
	selector es_3 = psegArg00
	*esOut = es_3
	word16 ax_12 = DPB(ax, al_11, 0)
	branch !OVERFLOW(al_11) l1483_0C96_thunk_fn1483_0C55
// DataOut: ah al ax bh bl bp bx cs cx di ds es si sil ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) v13(8) v19(8) v21(8) v23(16) v25(16) v26(16) v27(16)

l1483_0C96_thunk_fn1483_0C55:
	word16 cx_164
	word16 dx_165
	word16 bx_166
	word16 bp_167
	word16 si_168
	word16 di_169
	selector es_170
	return fn1483_0C55(al_11, cx, bx, bp, si, di, psegArg00, ds, psegArg00, wArg02, wArg04, out cx_164, out dx_165, out bx_166, out bp_167, out si_168, out di_169, out es_170)
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 es:<invalid> dx:<invalid> al:al + ch

l1483_0C98:
	word16 dx_54 = Mem0[ds:bx + si:word16] *s 0x0018
	byte dl_55 = (byte) dx_54
	branch dx_54 == 0x0000 && cx != 0x0001 l1483_0CA9_in_fn1483_0C91
// DataOut: ah al ax bl bp bx cx di dl ds es si sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 es:<invalid> dx:<invalid> al:al + ch
// LocalsOut: fp(16) v13(8) v19(8) v21(8) v23(16) v25(16) v26(16) v27(16)

l1483_0CA9_in_fn1483_0C91:
	Mem85[ds:bx:byte] = v13
	byte bl_87 = bl + ah
	word16 bx_88 = DPB(bx, bl_87, 0)
	Mem92[ds:bx_88 - 0x0056 + di:byte] = __rol(Mem85[ds:bx_88 - 0x0056 + di:byte], 0xE2)
	Mem94[ss:bp + 0x007B:word16] = __ror(Mem92[ss:bp + 0x007B:word16], 0x01)
	Mem99[ds:bx_88:byte] = v21
	byte bl_100 = bl_87 & Mem99[ds:bx_88:byte]
	byte al_90 = (byte) (ax_12 - 0x32AC)
	Mem103[psegArg00:di:byte] = al_90
	word16 bx_101 = DPB(bx, bl_100, 0)
	Mem108[ds:bx_101:word16] = v23
	Mem115[ds:di + 0x0015:word16] = ax_12 - 0xBDCB
	word16 sp_118
	selector es_119
	selector ss_120
	bool C_121
	word16 dx_122
	word16 ax_123
	byte SCZO_124
	byte al_125
	byte ch_126
	bool O_127
	word16 bx_128
	word16 si_129
	selector ds_130
	word16 cx_131
	bool Z_132
	byte dl_133
	word16 bp_134
	byte SZO_135
	byte bl_136
	byte ah_137
	word16 di_138
	byte cl_139
	call fn1483_4FE0 (retsize: 2;)
		uses: ah,al_90,ax_117,bl_100,bp_86,bx_101,C_102,ch_111,cl_112,cx_110,di_104,dl_82,ds,dx_81,es_3,O_17,SCZO_113,si,sp_4,ss,SZO_16,wLoc02,wLoc04,Z_57
		defs: ah_137,al_125,ax_123,bl_136,bp_134,bx_128,C_121,ch_126,cl_139,cx_131,di_138,dl_133,ds_130,dx_122,es_119,O_127,SCZO_124,si_129,sp_118,ss_120,SZO_135,Z_132
	Mem142[ds_130:0xF7E3:word16] = v26
	Mem146[ds_130:bx_128 + di_138:word16] = v27
	word16 cx_155
	*cxOut = DPB(cx_131, cl_139 - Mem146[ss_120:(bp_134 + 0x027E) + di_138:byte] - (v27 <u 0x0000), 0)
	return __inw(0x8B)
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 es:<invalid> dx:<invalid> al:al + ch cx:cx - 0x0001

l1483_0C9D:
	Mem63[ds:bx + 0x2203 + si:word16] = Mem0[ds:bx + 0x2203 + si:word16] + (cx - 0x0001)
// DataOut: ah al bl bp bx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 es:<invalid> dx:<invalid> al:al + ch cx:cx - 0x0001

l1483_0C9D_thunk_fn1483_0CA1:
	word16 cx_68
	word16 dx_69
	word16 bx_70
	word16 bp_71
	word16 di_72
	return fn1483_0CA1(al_11, ah, dl_55, bx, bp, si, di, psegArg00, ds, out cx_68, out dx_69, out bx_70, out bp_71, out di_72)
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 es:<invalid> dx:<invalid> al:al + ch cx:cx - 0x0001

fn1483_0C91_exit:
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> dx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> bp:<invalid> bl:<invalid> ax:<invalid> di:<invalid> cl:<invalid> si:<invalid> ah:<invalid> eax:<invalid> dh:<invalid> ch:<invalid> bh:<invalid> ss:<invalid> ds:<invalid> bx:<invalid> 0(fp):si 2(fp):<invalid> 4(fp):si



word16 fn1483_0CA0(byte al, byte ah, byte dl, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah al bl bp bx di dl ds es si ss
// LiveOut: ax bp bx cx di dx
// Trashed: SCZO ah al ax bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx rax rbp rbx rcx rdi rdx
// Preserved: sp
l1483_0CA0:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_0CA0_entry:
// DataOut: ah al bl bp bx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0CA0:
	byte al_5 = al & Mem0[ds:0x3101:byte]
// DataOut: ah al bl bp bx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0CA0_thunk_fn1483_0CA1:
	word16 cx_17
	word16 dx_18
	word16 bx_19
	word16 bp_20
	word16 di_21
	return fn1483_0CA1(al_5, ah, dl, bx, bp, si, di, es, ds, out cx_17, out dx_18, out bx_19, out bp_20, out di_21)
// DataOut: ax bp bx cx di dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid>

fn1483_0CA0_exit:
// DataOut: ax bp bx cx di dx
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> ah:<invalid> dl:<invalid> dx:<invalid> bp:<invalid> bl:<invalid> ax:<invalid> di:<invalid> cx:<invalid> cl:<invalid>



word16 fn1483_0CA1(byte al, byte ah, byte dl, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah al bl bp bx di dl ds es si ss
// LiveOut: ax bp bx cx di dx
// Trashed: SCZO ah al ax bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx rax rbp rbx rcx rdi rdx
// Preserved: sp
l1483_0CA1:
	ah = ah + Mem0[ds:bx + si:byte]
	ax = DPB(ax, ah, 8) (alias)
	SCZO = cond(ah)
	call fn1483_FD4E (retsize: 2;)
		defs: ah,al,ax,bl,bp,bx,C,cl,cx,di,dl,ds,dx,es,SCZO,si,sp,ss,SZO
// DataOut: ah ax bl bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn:

l1483_0CA9:
	dl = dl + Mem0[ds:bx:byte]
	dx = Mem0[ds:si + 0x173E:word16] *s 0x0C62
	dl = (byte) dx (alias)
	v43 = Mem0[ds:bx:byte] + dl
	Mem0[ds:bx:byte] = v43
	bp = bp - 0x0001
	bl = bl + ah
	bx = DPB(bx, bl, 0) (alias)
	ax = ax - 0x32AC
	al = (byte) ax (alias)
	v44 = (Mem0[ds:bx - 0x0056 + di:byte] & 0x40) != 0x00
	Mem0[ds:bx - 0x0056 + di:byte] = __rol(Mem0[ds:bx - 0x0056 + di:byte], 0xE2)
	v45 = (Mem0[ss:bp + 0x007C:word16] & 0x0002) != 0x0000
	Mem0[ss:bp + 0x007C:word16] = __ror(Mem0[ss:bp + 0x007C:word16], 0x01)
	C = v45
	v46 = Mem0[ds:bx:byte] + bl + C
	Mem0[ds:bx:byte] = v46
	bl = bl & Mem0[ds:bx:byte]
	bx = DPB(bx, bl, 0) (alias)
	C = false
	Mem0[es:di:byte] = al
	di = di + 0x0001
	ax = ax - 0x8B1F - C
	v47 = Mem0[ds:bx:word16] + bx
	Mem0[ds:bx:word16] = v47
	cx = di
	cx = cx - si
	cl = (byte) cx (alias)
	SCZO = cond(cx)
	v48 = Mem0[ds:di + 0x0014:word16]
	Mem0[ds:di + 0x0014:word16] = ax
	ax = v48
	call fn1483_4FE0 (retsize: 2;)
		defs: ah,al,ax,bl,bp,bx,C,cl,cx,di,dl,ds,dx,es,SCZO,si,sp,ss,SZO
	v49 = Mem0[ds:0xF7E3:word16] - dx
	Mem0[ds:0xF7E3:word16] = v49
	ax = ax - sp
	v50 = Mem0[ds:bx + di:word16] + bp
	Mem0[ds:bx + di:word16] = v50
	SCZO = cond(v50)
	C = (bool) SCZO (alias)
	sp = sp - 2
	Mem0[ss:sp:word16] = si
	sp = sp - 2
	Mem0[ss:sp:word16] = cx
	cl = cl - Mem0[ss:(bp + 0x027E) + di:byte] - C
	cx = DPB(cx, cl, 0) (alias)
	SCZO = cond(cl)
	sp = sp - 2
	Mem0[ss:sp:word16] = si
	ax = __inw(0x8B)
	ah = SLICE(ax, byte, 8) (alias)
	al = (byte) ax (alias)
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn:

l1483_0CE5:
	return ax
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn:

fn1483_0CA1_entry:
	def fp
	def es
	def ds
	def bx
	def di
	def Mem0
	def si
	def ah
	def ax
	def v13
	def v19
	def v21
	def v23
	def v25
	def v26
	def v27
	def v27
	def cxOut
	def dxOut
	def bxOut
	def bpOut
	def diOut
// DataOut: ah al bl bp bx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) v13(8) v19(8) v21(8) v23(16) v25(16) v26(16) v27(16)

l1483_0CA1:
	sp_1 = fp
	sp_2 = fp - 2
	wLoc02_4 = es
	v9_10 = Mem0[ds:bx + di:word16] + si
	Mem11[ds:bx + di:word16] = v9_10
	ah_13 = ah + Mem11[ds:bx + si:byte]
	ax_15 = DPB(ax, ah_13, 8) (alias)
	SCZO_16 = cond(ah_13)
	call fn1483_FD4E (retsize: 2; depth: 4)
		uses: ah_13,ax_15,bx,di,ds,es,SCZO_16,si,sp_2,wLoc02_4
		defs: ah_25,al_33,ax_31,bl_30,bp_28,bx_20,C_32,cl_35,cx_34,di_21,dl_26,ds_22,dx_27,es_18,SCZO_24,si_23,sp_17,ss_19,SZO_29
// DataOut: ah ax bl bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v13(8) v19(8) v21(8) v23(16) v25(16) v26(16) v27(16)

l1483_0CA9_in_fn1483_0CA1:
	dl_36 = dl_26 + Mem11[ds_22:bx_20:byte]
	dx_37 = Mem11[ds_22:si_23 + 0x173E:word16] *s 0x0C62
	dl_38 = (byte) dx_37 (alias)
	v13_39 = Mem11[ds_22:bx_20:byte] + dl_38
	Mem41[ds_22:bx_20:byte] = v13
	bp_42 = bp_28 - 0x0001
	bl_43 = bl_30 + ah_25
	bx_44 = DPB(bx_20, bl_43, 0) (alias)
	ax_45 = ax_31 - 0x32AC
	al_46 = (byte) ax_45 (alias)
	v17_47 = (Mem41[ds_22:bx_44 - 0x0056 + di_21:byte] & 0x40) != 0x00
	Mem48[ds_22:bx_44 - 0x0056 + di_21:byte] = __rol(Mem41[ds_22:bx_44 - 0x0056 + di_21:byte], 0xE2)
	v19_49 = (Mem48[ss_19:bp_42 + 0x007C:word16] & 0x0002) != 0x0000
	Mem50[ss_19:bp_42 + 0x007C:word16] = __ror(Mem48[ss_19:bp_42 + 0x007C:word16], 0x01)
	C_52 = v19
	v21_53 = Mem50[ds_22:bx_44:byte] + bl_43 + C_52
	Mem55[ds_22:bx_44:byte] = v21
	bl_56 = bl_43 & Mem55[ds_22:bx_44:byte]
	bx_57 = DPB(bx_44, bl_56, 0) (alias)
	C_58 = false
	Mem59[es_18:di_21:byte] = al_46
	di_60 = di_21 + 0x0001
	ax_61 = ax_45 - 0x8B1F - C_58
	v23_62 = Mem59[ds_22:bx_57:word16] + bx_57
	Mem64[ds_22:bx_57:word16] = v23
	cx_65 = di_60
	cx_66 = cx_65 - si_23
	cl_67 = (byte) cx_66 (alias)
	SCZO_68 = cond(cx_66)
	v25_69 = Mem64[ds_22:di_60 + 0x0014:word16]
	Mem70[ds_22:di_60 + 0x0014:word16] = ax_61
	ax_72 = v25
	call fn1483_4FE0 (retsize: 2; depth: 2)
		uses: ah_25,al_46,ax_72,bl_56,bp_42,bx_57,C_58,cl_67,cx_66,di_60,dl_38,ds_22,dx_37,es_18,SCZO_68,si_23,sp_17,ss_19,SZO_29,wLoc02_4
		defs: ah_81,al_89,ax_87,bl_86,bp_84,bx_76,C_88,cl_91,cx_90,di_77,dl_82,ds_78,dx_83,es_74,SCZO_80,si_79,sp_73,ss_75,SZO_85
	v26_92 = Mem70[ds_78:0xF7E3:word16] - dx_83
	Mem94[ds_78:0xF7E3:word16] = v26
	ax_95 = ax_87 - sp_73
	v27_96 = Mem94[ds_78:bx_76 + di_77:word16] + bp_84
	Mem98[ds_78:bx_76 + di_77:word16] = v27
	SCZO_100 = cond(v27)
	C_101 = (bool) SCZO_100 (alias)
	sp_102 = sp_73 - 2
	Mem103[ss_75:sp_102:word16] = si_79
	sp_104 = sp_102 - 2
	Mem105[ss_75:sp_104:word16] = cx_90
	cl_106 = cl_91 - Mem105[ss_75:(bp_84 + 0x027E) + di_77:byte] - (v27 <u 0x0000)
	cx_107 = DPB(cx_90, cl_106, 0) (alias)
	SCZO_108 = cond(cl_106)
	sp_109 = sp_104 - 2
	Mem110[ss_75:sp_109:word16] = si_79
	ax_111 = __inw(0x8B)
	ah_112 = SLICE(ax_111, byte, 8) (alias)
	al_113 = (byte) ax_111 (alias)
	return ax_111
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ah:<invalid> -2(fp):es

fn1483_0CA1_exit:
	use cx_107 (=> cxOut)
	use dx_83 (=> dxOut)
	use bx_76 (=> bxOut)
	use bp_84 (=> bpOut)
	use di_77 (=> diOut)
// DataOut: ax bp bx cx di dx
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dl:<invalid> dx:<invalid> bp:bp - 0x0001 bl:<invalid> ax:<invalid> di:di + 0x0001 cx:<invalid> cl:<invalid> -2(fp):es 0(fp):si 2(fp):<invalid> 4(fp):si



word16 fn1483_0CFA(byte al, byte ah, word16 cx, word16 dx, byte bl, byte bh, word16 bp, word16 si, word16 di, selector ds, selector fs, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C ah al bh bl bp ch cs cx di ds dx fs si sil ss
// LiveOut: ax bp bx cx di dx es si ss
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl ss
// Preserved: sp
l1483_0CFA:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_0CFA_entry:
// DataOut: ah al bh bl bp ch cs cx di ds dx fs si sil ss
// DataOut (flags): C
// SymbolicIn: sp:fp

l1483_0CFA:
	Mem8[ds:si + 0xD832:byte] = Mem0[ds:si + 0xD832:byte] - ch - C
// DataOut: ah al bh bl bp ch cs cx di ds dx fs si sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0CFA_thunk_fn1483_0CFC:
	word16 cx_19
	word16 dx_20
	word16 bx_21
	word16 bp_22
	word16 si_23
	word16 di_24
	selector es_25
	return fn1483_0CFC(al, ah, cx, dx, bl, bh, bp, si, di, ds, fs, out cx_19, out dx_20, out bx_21, out bp_22, out si_23, out di_24, out es_25)
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1483_0CFA_exit:
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bl:<invalid> al:<invalid> es:<invalid> dx:<invalid> cx:<invalid> dl:<invalid> bp:<invalid> ax:<invalid> di:<invalid> cl:<invalid> ah:<invalid> si:<invalid> bx:<invalid> eax:<invalid> dh:<invalid> ch:<invalid> bh:<invalid> ss:<invalid> ds:<invalid>



word16 fn1483_0CFC(byte al, byte ah, word16 cx, word16 dx, byte bl, byte bh, word16 bp, word16 si, word16 di, selector ds, selector fs, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah al bh bl bp ch cs cx di ds dx fs si sil ss
// LiveOut: ax bp bx cx di dx es si ss
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl ss
// Preserved: sp
l1483_0CFC:
	al = Mem0[ds:bx + di:byte]
	ax = DPB(ax, al, 0) (alias)
	Mem0[ss:bp + si:word16] = 0xD1FF
	branch cx == 0x0000 l1483_0D04_thunk_fn1483_0C91
// DataOut: ah al ax bh bl bp bx ch cs cx di ds dx es fs si sil ss
// DataOut (flags): C
// SymbolicIn:

l1483_0D04_thunk_fn1483_0C91:
	ax = fn1483_0C91(ax, cx, dx, bx, bp, si, di, ds, psegArg00, out cx, out dx, out bx, out bp, out si, out di, out es)
	al = (byte) ax (alias)
	ah = SLICE(ax, byte, 8) (alias)
	return ax
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn:

l1483_0D02_thunk_fn1483_0D06:
	ax = fn1483_0D06(ax, dx, bx, ds, fs, out cx, out dx, out bx, out bp, out si, out di)
	al = (byte) ax (alias)
	ah = SLICE(ax, byte, 8) (alias)
	return ax
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn:

fn1483_0CFC_entry:
	def fp
	def bl
	def al
	def bx
	def ds
	def di
	def Mem0
	def ax
	def ss
	def bp
	def si
	def cx
	def cxOut
	def dxOut
	def bxOut
	def bpOut
	def siOut
	def diOut
	def esOut
	def dx
	def fs
	def es
	def psegLoc02
// DataOut: ah al bh bl bp ch cs cx di ds dx es fs si sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0CFC:
	sp_1 = fp
	bl_4 = bl ^ al
	bx_6 = DPB(bx, bl_4, 0) (alias)
	SZO_7 = cond(bl_4)
	C_8 = false
	al_12 = Mem0[ds:bx_6 + di:byte]
	ax_14 = DPB(ax, al_12, 0) (alias)
	Mem15[ss:bp + si:word16] = 0xD1FF
	branch cx == 0x0000 l1483_0D04_thunk_fn1483_0C91
// DataOut: ah al ax bh bl bp bx ch cs cx di ds dx es fs si sil ss
// DataOut (flags): C
// SymbolicIn: sp:fp

l1483_0D04_thunk_fn1483_0C91:
	ax_57 = fn1483_0C91(ax_14, cx, dx, bx_6, bp, si, di, ds, psegLoc02, out cx_50, out dx_51, out bx_52, out bp_53, out si_54, out di_55, out es_56)
	al_58 = (byte) ax_57 (alias)
	ah_59 = SLICE(ax_57, byte, 8) (alias)
	return ax_57
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp bl:bl ^ al al:<invalid>

l1483_0D04_thunk_fn1483_0D06:
	ax_45 = fn1483_0D06(ax_14, dx, bx_6, ds, fs, out cx_39, out dx_40, out bx_41, out bp_42, out si_43, out di_44)
	al_46 = (byte) ax_45 (alias)
	ah_47 = SLICE(ax_45, byte, 8) (alias)
	return ax_45
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp bl:bl ^ al al:<invalid>

fn1483_0CFC_exit:
	es_20 = PHI(es_56, es, es, es)
	cx_21 = PHI(cx_50, cx_39, cx, cx)
	dx_22 = PHI(dx_51, dx_40, dx, dx)
	bx_23 = PHI(bx_52, bx_41, bx, bx)
	bp_24 = PHI(bp_53, bp_42, bp, bp)
	si_25 = PHI(si_54, si_43, si, si)
	di_26 = PHI(di_55, di_44, di, di)
	ax_27 = PHI(ax_57, ax_45, ax, ax)
	al_28 = PHI(al_58, al_46, al, al)
	ah_29 = PHI(ah_59, ah_47, ah, ah)
	use cx_21 (=> cxOut)
	use dx_22 (=> dxOut)
	use bx_23 (=> bxOut)
	use bp_24 (=> bpOut)
	use si_25 (=> siOut)
	use di_26 (=> diOut)
	use es_20 (=> esOut)
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bl:<invalid> al:<invalid> es:<invalid> dx:<invalid> cx:<invalid> dl:<invalid> bp:<invalid> ax:<invalid> di:<invalid> cl:<invalid> ah:<invalid> si:<invalid> bx:<invalid> eax:<invalid> dh:<invalid> ch:<invalid> bh:<invalid> ss:<invalid> ds:<invalid>



word16 fn1483_0D06(word16 ax, word16 dx, word16 bx, selector ds, selector fs, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ax bx ds dx fs ss
// LiveOut: ax bp bx cx di dx si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi rax rbp rbx rcx rdi rdx rsi si sil
// Preserved: sp
fn1483_0D06_entry:
	*bxOut = bx
	*dxOut = dx
	*diOut = di
	*siOut = si
	*bpOut = bp
	*cxOut = cx
// DataOut: al ax bp bx cx di ds dx es fs si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l1483_0D06:
	Mem8[ds:bx + 0xE209:word16] = Mem0[ds:bx + 0xE209:word16] - dx - C
	word16 ax_10 = ax - 0x5EF1
	branch bx == dx l1483_0D2B
// DataOut: al ax bp bx cx di ds dx es fs si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0D11:
	msdos_display_string(SEQ(ds, 0x0D21))
	word16 ax_63 = Mem8[ss:v3 + 0x000E:word16]
	word16 di_49 = Mem8[ss:v3:word16]
	*diOut = di_49
	word16 bp_53 = Mem8[ss:v3 + 0x0004:word16]
	*bpOut = bp_53
	word16 si_51
	*siOut = Mem8[ss:v3 + 0x0002:word16]
	word16 bx_56 = Mem8[ss:v3 + 0x0008:word16]
	word16 dx_58
	*dxOut = Mem8[ss:v3 + 0x000A:word16]
	word16 cx_61
	*cxOut = Mem8[ss:v3 + 0x000C:word16]
	Mem68[fs:bp_53 + 0x0052 + di_49:byte] = Mem8[fs:bp_53 + 0x0052 + di_49:byte] & (byte) ax_63
	word16 bx_70
	*bxOut = bx_56 + 0x0001
	ax_10 = ax_63 | 0x240A
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:ax - 0x5EF1

l1483_0D2B:
	return ax_10
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> bx:<invalid> cx:<invalid>

fn1483_0D06_exit:
// DataOut: ax bp bx cx di dx si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> ah:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> bx:<invalid> cx:<invalid>



word16 fn1483_0D3F(byte al, byte ah, word16 cx, word16 dx, byte bl, byte bh, word16 bp, word16 si, word16 di, selector es, selector ds, selector fs, word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  P ah al bh bl bp ch cl cs cx dh di dl ds dx es fs si sil ss
// LiveOut: ax bp bx cx di dx es si sp ss
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl ss
// Preserved:
fn1483_0D3F_entry:
	*bpOut = bp
	*esOut = es
// DataOut: ah al bh bl bp ch cl cs cx dh di dl ds dx es fs si sil ss
// DataOut (flags): CP
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1483_0D3F:
	branch P l1483_0D40_thunk_fn1483_0CFA
// DataOut: ah al bh bl bp ch cl cs cx dh di dl ds dx es fs si sil ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1483_0D40_thunk_fn1483_0CFA:
	word16 cx_368
	word16 dx_369
	word16 bx_370
	word16 bp_371
	word16 si_372
	word16 di_373
	selector es_374
	return fn1483_0CFA(al, ah, cx, dx, bl, bh, bp, si, di, ds, fs, out cx_368, out dx_369, out bx_370, out bp_371, out si_372, out di_373, out es_374)
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 -2(fp):ax

l1483_0D42:
	word16 bx_61 = DPB(bx, 0xB4, 0)
	byte ch_65 = ch - Mem0[ds:(bx_61 + 0x0002) + si:byte]
	word16 ax_70 = DPB(ax, al + ch, 0) + 0xFC68 + (ch_65 <u 0x00)
	word16 cx_67 = DPB(cx, ch_65, 8)
	*cxOut = cx_67
	byte al_72 = (byte) ax_70
	byte ah_73 = SLICE(ax_70, byte, 8)
	word16 dx_79 = DPB(dx, dh ^ 0x17, 8)
	*dxOut = dx_79
	branch (dh ^ 0x17) < 0x00 l1483_0CED
// DataOut: ah al ax bh bp bx ch cs cx dh di dl ds dx es fs si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 -2(fp):ax
// LocalsOut: fp(16) Local -0004(16)

l1483_0CED:
	word16 si_323 = si + Mem0[ds:di:word16]
	*siOut = si_323
	word16 v37_324 = Mem0[ds:bx_61 + 0xF7E2 + si_323:word16] + (fp - 4)
	Mem325[ds:bx_61 + 0xF7E2 + si_323:word16] = v37_324
	Mem328[es:di:word16] = ax_70
	bool C_327 = (bool) cond(v37_324)
	word16 di_329
	*diOut = di + 0x0002
	word16 bx_331 = DPB(bx, 0xB5, 0)
	*bxOut = bx_331
	branch true l1483_0CE5_in_fn1483_0D3F
// DataOut: ah al ax bh bl bp bx cs cx di ds dx es fs si sil sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 4 al:<invalid> bl:0xB4 ch:<invalid> ax:<invalid> dh:dh ^ 0x17 -4(fp):si -2(fp):ax
// LocalsOut: fp(16) Local -0004(16)

l1483_0CE5_in_fn1483_0D3F:
	return ax_70
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 al:<invalid> bl:0xB5 ch:<invalid> ax:<invalid> dh:dh ^ 0x17 si:<invalid> di:di + 0x0002 -4(fp):si -2(fp):ax

l1483_0CF8:
	Mem345[ds:bx_331 + si_323:byte] = __rcr(Mem328[ds:bx_331 + si_323:byte], 0xAC, C_327)
// DataOut: ah al bh bl bp ch cs cx di ds dx fs si sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 al:<invalid> bl:0xB5 ch:<invalid> ax:<invalid> dh:dh ^ 0x17 si:<invalid> di:di + 0x0002 -4(fp):si -2(fp):ax

l1483_0CF9_thunk_fn1483_0CFC:
	word16 cx_347
	word16 dx_348
	word16 bx_349
	word16 bp_350
	word16 si_351
	word16 di_352
	selector es_353
	return fn1483_0CFC(al_72, ah_73, si, dx_79, 0xB5, bh, bp, si_323, di + 0x0002, ds, fs, out cx_347, out dx_348, out bx_349, out bp_350, out si_351, out di_352, out es_353)
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 al:<invalid> bl:0xB5 ch:<invalid> ax:<invalid> dh:dh ^ 0x17 si:<invalid> di:di + 0x0002 cx:si -4(fp):si -2(fp):ax

l1483_0D52:
	word16 v19_92 = Mem0[ds:bx_61 + 0x0043 + si:word16]
	Mem94[ds:bx_61 + 0x0043 + si:word16] = bp
	Mem97[ds:di:byte] = Mem94[ds:di:byte] << 0x68
	word16 v22_100 = -Mem97[ss:v19_92 - 0x0006:word16]
	Mem101[ss:v19_92 - 0x0006:word16] = v22_100
	branch !OVERFLOW(v22_100) l1483_0D69
// DataOut: al ax bp bx ch cs cx dh di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 al:<invalid> bl:0xB4 ch:<invalid> ax:<invalid> dh:dh ^ 0x17 -4(fp):si -2(fp):ax
// LocalsOut: fp(16)

l1483_0D68_1:
	__syscall(0x04)
// DataOut: al ax bp bx ch cs cx dh di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0008 al:<invalid> bl:0xB4 ch:<invalid> ax:<invalid> dh:dh ^ 0x17 ah:<invalid> bp:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es
// LocalsOut: fp(16)

l1483_0D69:
	Mem108[ds:si + 0x5C87:byte] = ch_65
	word16 sp_120
	word16 ax_121
	selector ss_122
	bool P_123
	byte al_124
	byte ch_125
	byte SCZO_126
	byte bl_127
	word16 bx_128
	word16 si_129
	selector ds_130
	bool C_131
	byte dh_132
	byte SZO_133
	byte SO_134
	byte ah_135
	word16 di_136
	word16 bp_137
	selector es_138
	bool O_139
	word16 dx_140
	word16 cx_141
	byte bh_142
	byte SCZDOP_143
	bool Z_144
	byte dl_145
	bool S_146
	byte cl_147
	selector cs_148
	selector fs_149
	call fn1483_8A82 (retsize: 2; depth: -6)
		uses: ah_85,al_72,ax_86,bh,bl_59,bp_95,bx_61,C_110,ch_65,cl,cs,cx_67,dh_77,di,dl,ds,dx_79,es,fs,O_103,P,S,SCZDOP,SCZO_102,si,SO_82,sp_105,ss,SZO_109,wLoc02_4,wLoc04_75,wLoc06_89,wLoc08_91,wLoc0A,Z
		defs: ah_135,al_124,ax_121,bh_142,bl_127,bp_137,bx_128,C_131,ch_125,cl_147,cs_148,cx_141,dh_132,di_136,dl_145,ds_130,dx_140,es_138,fs_149,O_139,P_123,S_146,SCZDOP_143,SCZO_126,si_129,SO_134,sp_120,ss_122,SZO_133,Z_144
	word16 bx_167 = bx_128 + Mem108[ds_130:(bx_128 - 0x0079) + di_136:word16] + C_131
	Mem172[ss_122:bp_137 + 0xF512 + di_136:byte] = Mem108[ss_122:bp_137 + 0xF512 + di_136:byte] + dh_132 + (bx_167 <u 0x0000)
	Mem174[ds_130:bx_167 + 0x007D:byte] = Mem172[ds_130:bx_167 + 0x007D:byte] & al_124
	word16 ax_186 = __aad(si_129)
	word16 ax_182 = DPB(ax_121 - 0x8747, (byte) (ax_121 - 0x8747) + ch_125 + (ax_121 <u 0x8747), 0)
	word16 v31_189 = Mem174[ds_130:ax_182 + 0x995D:word16]
	Mem190[ds_130:ax_182 + 0x995D:word16] = ax_182
	word16 bx_199 = bx_167 + Mem190[ds_130:bx_167 + v31_189:word16]
	*bxOut = bx_199
	byte ah_188 = SLICE(ax_186, byte, 8)
	word16 si_191
	*siOut = v31_189
	byte bl_200 = (byte) bx_199
	byte bh_201 = SLICE(bx_199, byte, 8)
	byte al_202 = (byte) ax_186 + 0x2A + ch_125
	word16 sp_214 = fp - 8
	word16 cx_215
	*cxOut = cx_141 - 0x0001
	byte cl_217 = (byte) (cx_141 - 0x0001)
	branch fp - 8 && cx_141 != 0x0001 l1483_0D99
// DataOut: ah al bh bl bp bx cl cs cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp + 0x0008 al:<invalid> bl:0xB4 ch:<invalid> ax:<invalid> dh:dh ^ 0x17 ah:<invalid> bp:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0D99:
	Mem321[ds_130:bx_199 + v31_189:byte] = Mem190[ds_130:bx_199 + v31_189:byte] - bl_200
// DataOut: al bp bx cl cs cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0D97:
	byte v36_307 = Mem190[ds_130:bx_199 + 0x0028 + di_136:byte] - ah_188 - (fp - 8)
	Mem308[ds_130:bx_199 + 0x0028 + di_136:byte] = v36_307
// DataOut: al bh bp bx cl cs cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0D9A:
	Mem318[ds_130:v31_189 + 0x005A:byte] = Mem308[ds_130:v31_189 + 0x005A:byte] - bh_201 - (v36_307 <u 0x00)
// DataOut: al bp bx cl cs cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0D9B:
	byte v40_224 = Mem190[ds_130:di_136 + 0x002D:byte] - (al_202 | 0x3F)
	Mem225[ds_130:di_136 + 0x002D:byte] = v40_224
	Mem236[es_138:di_136:byte] = al_202 | 0x3F
	word16 ax_220 = DPB(ax_186, al_202 | 0x3F, 0)
	word16 dx_235
	*dxOut = DPB(dx_140, 0x99, 0)
	branch v40_224 >= 0x00 l1483_0DB9
// DataOut: al ax bp bx cl cs cx di ds dx es si sp ss
// DataOut (flags): S
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DA7:
	Mem272[es_138:di_136 + 0x0001:byte] = al_202 | 0x3F
	word16 di_273
	*diOut = di_136 + 0x0002
	branch v40_224 >= 0x00 l1483_0DBE
// DataOut: al bp bx cl cs cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:di + 0x0001 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DBE:
	word16 ax_292 = DPB(ax_186, (al_202 | 0x3F) + Mem272[ds_130:0x0047:byte], 0)
// DataOut: ax bp bx cl cs cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:di + 0x0003 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DC2:
	Mem297[ss_122:fp - 10:word16] = cs_148
// DataOut: ax bp bx cl cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:di + 0x0003 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DC6:
	Mem300[ss_122:0x0B01:word16] = es_138
	Mem302[ds_130:0x8C00:byte] = Mem300[ds_130:0x8C00:byte] + cl_217
// DataOut: ax bp bx cl cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:0x0B03 al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:di + 0x0003 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DCB:
	Mem305[ss_122:bp_137 + 0x8CC3:word16] = __ror(Mem302[ss_122:bp_137 + 0x8CC3:word16], cl_217)
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:0x0B01 al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:di + 0x0003 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DCF:
	return ax_292
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:0x0B01 al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:di + 0x0003 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DAA:
	Mem275[ss_122:bp_137 + v31_189:word16] = -Mem272[ss_122:bp_137 + v31_189:word16]
	__cli()
	Mem277[ds_130:bx_199 + 0x0045 + (di_136 + 0x0001):word16] = Mem275[ss_122:fp - 8:word16]
	ax_220 = Mem277[ss_122:fp - 6:word16]
	Mem287[ds_130:bx_199 + 0xC079 + v31_189:word16] = Mem277[ds_130:bx_199 + 0xC079 + v31_189:word16] + (bp_137 + 0x0001)
	sp_214 = fp - 4
// DataOut: ax bp bx cl cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:di + 0x0003 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DB9:
	word16 dx_246
	*dxOut = Mem236[ss_122:sp_214:word16]
	Mem252[ds_130:bx_199 + (di_136 + 0x0001):byte] = Mem236[ds_130:bx_199 + (di_136 + 0x0001):byte] >>u 0x01
	Mem254[ds_130:bx_199 + 0x0002 + (di_136 + 0x0001):byte] = Mem252[ds_130:bx_199 + 0x0002 + (di_136 + 0x0001):byte] + cl_217
	word16 bp_238
	*bpOut = bp_137
	word16 sp_250 = sp_214 + 2
// DataOut: ax bp bx cl cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DBF:
	Mem257[ss_122:sp_250 - 2:word16] = es_138
	Mem260[ds_130:0x03BC:byte] = Mem257[ds_130:0x03BC:byte] + cl_217
	word16 di_258
	*diOut = di_136 + 0x0002
// DataOut: ax bp bx cl cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:<invalid> di:<invalid> dx:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DC5:
	word16 ax_262 = ax_220 | Mem260[ds_130:0x0E00:word16]
// DataOut: ax bp bx cl cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:<invalid> di:<invalid> dx:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DC9:
	Mem270[ds_130:v31_189 + 0x8ED3:byte] = Mem260[ds_130:v31_189 + 0x8ED3:byte] + cl_217
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:<invalid> di:<invalid> dx:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DCD:
	return ax_262
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:<invalid> di:<invalid> dx:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

fn1483_0D3F_exit:
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> si:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> dl:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> eax:<invalid> bh:<invalid> ss:<invalid> ds:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es



real64 fn1483_1104(word16 ax, byte dl, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, real64 rArg0, real64 rArg1, real64 rArg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bl bp bpl bx di dl ds es si ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn1483_1104_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_1104_entry:
// DataOut: ax bl bp bpl bx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1483_1104:
	byte al_4 = (byte) (ax - 0x5D97)
	word16 sp_1 = fp
	word16 dx_23 = DPB(dx, 0x26, 8)
	bool C_16 = (bool) cond(SEQ(al_4, __aam(al_4)) - 0x00755D97)
// DataOut: al bl bp bpl bx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp

l1483_110D:
	Mem40[ss:bp + 0x450F:word16] = Mem0[ss:bp + 0x450F:word16] + 0x9F59 + C_16
	word16 sp_43 = sp_1 - 2
	Mem44[ss:sp_43:word16] = es
	dx_23 = DPB(dx_23, 0x34, 8) (alias)
	Mem46[ss:bp + 0x005E + si:word16] = dx_23
	Mem49[ds:bx + 0x675E + di:word16] = Mem46[ds:bx + 0x675E + di:word16] - 0x007D
	Mem58[ss:sp_43 - 2:word16] = dx_23
	real64 rArg1_62 = rArg1 * lg2(rArg0 + 1.0)
	ptr32 es_bx_73 = Mem58[ds:0x9F59:segptr32]
	rArg1 = scalbn(rArg1_62, rArg2)
	word16 v27_83 = Mem58[ss:bp + 0x1EC4:word16] + bp
	Mem84[ss:bp + 0x1EC4:word16] = v27_83
	sp_1 = sp_43
	si = 0x9F59
	es = SLICE(es_bx_73, selector, 16) (alias)
	bx = (word16) es_bx_73 (alias)
	di = 0xBFC4
	C_16 = (bool) cond(v27_83) (alias)
// DataOut: al bl bp bpl bx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> dh:<invalid> al:<invalid> cl:0x1C bl:<invalid> si:0x9F59 Sequence es:bx:<invalid> di:0xBFC4 -4(fp):dx -2(fp):es



bool fn1483_1B91(byte al, word16 cx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, selector psegArg00, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bh bl bp bx cs cx di ds es si ss
// LiveOut: C di ds es sp ss
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl ss
// Preserved:
// Stack args: Stack +0000(16)
fn1483_1B91_entry:
// DataOut: al bh bl bp bx cs cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l1483_1B91:
	Mem17[ds:bx + 0x10F8 + di:word16] = ~Mem0[ds:bx + 0x10F8 + di:word16]
	word16 v18_36 = Mem17[psegArg00:bx + 0x3201 + di:word16]
	Mem37[psegArg00:bx + 0x3201 + di:word16] = di
	__inb(0x41)
	__sti()
	Mem45[psegArg00:0xFF1F:word16] = Mem37[psegArg00:0xFF1F:word16] + 0x0001
	word16 ax_5 = DPB(ax, al - 0x28, 0)
	word16 ax_10 = DPB(ax_5 ^ 0x2EF9, (byte) (ax_5 ^ 0x2EF9) - bh, 0)
	word16 ax_49 = DPB(cx, __inb(fp) - 0xF8 & 0x0A, 0)
// DataOut: al ax bh bl bp bx cl cs cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp

l1483_1BB7_thunk_fn1483_1BB9:
	word16 ax_57
	word16 cx_58
	byte dl_59
	byte dh_60
	word16 bx_61
	word16 bp_62
	word16 si_63
	word16 di_64
	selector es_65
	selector ds_66
	return fn1483_1BB9(ax_49, ax_10, fp, bx, bp, si, v18_36, es, psegArg00, out ax_57, out cx_58, out dl_59, out dh_60, out bx_61, out bp_62, out si_63, out di_64, out es_65, out ds_66)
// DataOut: cs di ds es sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp + 2 al:<invalid> ax:<invalid> cx:<invalid> dx:fp ds:<invalid> di:<invalid> -2(fp):fp

fn1483_1B91_exit:
// DataOut: di ds es sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> bh:<invalid> es:<invalid> ss:<invalid> bx:<invalid> dh:<invalid> ch:<invalid> -2(fp):fp



word16 fn1483_1BB8(byte al, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & cxOut, ptr16 & dlOut, ptr16 & dhOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bh bl bp bx cl cs cx di ds dx es si ss
// LiveOut: ax bp bx cx dh di dl ds es si ss
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl ss
// Preserved: sp
fn1483_1BB8_entry:
// DataOut: al bh bl bp bx cl cs cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_1BB8:
	word16 ax_8 = DPB(ax, al | Mem0[ds:si:byte], 0)
// DataOut: al ax bh bl bp bx cl cs cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp

l1483_1BB8_thunk_fn1483_1BB9:
	word16 ax_20
	word16 cx_21
	byte dl_22
	byte dh_23
	word16 bx_24
	word16 bp_25
	word16 si_26
	word16 di_27
	selector es_28
	selector ds_29
	fn1483_1BB9(ax_8, cx, dx, bx, bp, si, di, es, ds, out ax_20, out cx_21, out dl_22, out dh_23, out bx_24, out bp_25, out si_26, out di_27, out es_28, out ds_29)
	return ax_20
// DataOut: ax bp bx cs cx dh di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid>

fn1483_1BB8_exit:
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> dx:<invalid> cx:<invalid> si:<invalid> bp:<invalid> ax:<invalid> bh:<invalid> es:<invalid> ss:<invalid> di:<invalid> ds:<invalid> bx:<invalid> dh:<invalid> ch:<invalid>



bool fn1483_1BB9(word16 ax, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & axOut, ptr16 & cxOut, ptr16 & dlOut, ptr16 & dhOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ax bh bl bp bx cl cs cx di ds dx es si ss
// LiveOut: C ax bp bx cx dh di dl ds es si sp ss
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl ss
// Preserved:
fn1483_1BB9_entry:
// DataOut: al ax bh bl bp bx cl cs cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l1483_1BB9:
	sp = v3
	branch Test(UGE,C) l1483_1BBF
// DataOut: al ax bh bl bp bx cl cs cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bx:0xD909 ax:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> es:<invalid> bh:0xD9 ss:<invalid>
// LocalsOut: v3(16)

l1483_1BBF:
	ax = Mem0[ds:0xE10D:word16]
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 dx:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bx:0xD909 ax:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> es:<invalid> bh:0xD9 ss:<invalid>

l1483_1BBC:
// DataOut: al ax bh bl bp bx cl cs cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 dx:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bx:0xD909 ax:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> es:<invalid> bh:0xD9 ss:<invalid>
// LocalsOut: v3(16)

l1483_1B38:
	dx = dx - 0x0001
	dh = SLICE(dx, byte, 8) (alias)
	dl = (byte) dx (alias)
	SZO = cond(dx)
	Z = (bool) SZO (alias)
	SCZO = SZO (alias)
	branch Test(NE,Z) l1483_1B7F
// DataOut: al ax bh bl bp bx cl cs cx dh di dl ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:v3 dx:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bx:0xD909 ax:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> es:<invalid> bh:0xD9 ss:<invalid>
// LocalsOut: v3(16)

l1483_1B3B:
	cx = cx - 0x0001
	ecx = DPB(ecx, cx, 0) (alias)
	ch = SLICE(cx, byte, 8) (alias)
	cl = (byte) cx (alias)
	branch Test(EQ,Z) && cx != 0x0000 l1483_1B6D
// DataOut: al ax bh bl bp bx cs cx dh di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 dx:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bx:0xD909 ax:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> es:<invalid> bh:0xD9 ss:<invalid>
// LocalsOut: v3(16)

l1483_1B3D:
	es = Mem0[ss:sp:selector]
	sp = sp + 2
	v12 = ax
	ax = si
	ax_al = ax (alias)
	al = (byte) ax (alias)
	ah = SLICE(ax, byte, 8) (alias)
	si = v12
	SCZO = cond(ax - 0xD909)
	C = (bool) SCZO (alias)
	SZO = SCZO (alias)
	Z = (bool) SCZO (alias)
	branch Test(EQ,Z) l1483_1B51
// DataOut: ax bh bl bp bx cs cx di ds es si sp spl ss
// DataOut (flags): C
// SymbolicIn: sp:v3 dx:<invalid> cx:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bx:0xD909 ax:<invalid> al:<invalid> ds:<invalid> di:<invalid> si:<invalid> es:<invalid> bh:0xD9 ss:<invalid>
// LocalsOut: v3(16)

l1483_1B44:
	ax = ax - 0x0001
	dx = 0x02E2
	dh = SLICE(dx, byte, 8) (alias)
	dl = (byte) dx (alias)
	v16 = ax
	ax = sp
	al = (byte) ax (alias)
	ah = SLICE(ax, byte, 8) (alias)
	sp = v16
	al = al + 0xD9 + C
	ax = DPB(ax, al, 0) (alias)
	ax_al = SEQ(ax, al) (alias)
	SCZO = cond(al)
	C = (bool) SCZO (alias)
	SZO = SCZO (alias)
	Z = (bool) SCZO (alias)
	branch Test(EQ,Z) l1483_1B13
// DataOut: ah ax bh bl bp bx cs cx dh di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:v3 + 2 dx:<invalid> cx:<invalid> es:<invalid> ax:<invalid> si:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bx:0xD909 al:<invalid> ds:<invalid> di:<invalid> bh:0xD9 ss:<invalid>
// LocalsOut: v3(16)

l1483_1B13:
	ss = di
	__sti()
	call Mem0[0x1483:0xD909:ptr32] (retsize: 4; depth: 4)
	return C
// DataOut: ax bp bx cs cx dh di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> dx:0x02E2 cx:<invalid> es:<invalid> ax:<invalid> si:<invalid> al:<invalid> bp:<invalid> ch:<invalid> dh:0x02 bx:0xD909 ds:<invalid> di:<invalid> bh:0xD9 ss:<invalid>

l1483_1B4E:
	v21 = Mem0[ds:si:byte] + ah
	Mem0[ds:si:byte] = v21
	SCZO = cond(v21)
	sp = sp - 2
	Mem0[ss:sp:word16] = cs
// DataOut: bh bl bp bx cs cx ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:0x02E2 cx:<invalid> es:<invalid> ax:<invalid> si:<invalid> al:<invalid> bp:<invalid> ch:<invalid> dh:0x02 bx:0xD909 ds:<invalid> di:<invalid> bh:0xD9 ss:<invalid>
// LocalsOut: v3(16)

l1483_1B51:
	es = Mem0[ss:sp:selector]
	sp = sp + 2
	di = 0x02FB
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	Mem0[es:0x02FB:byte] = al
	di = 0x02FC
	C = fn1483_1B91(al, cx, bx, bp, si, di, es, ds, psegLoc02, out di, out es, out ds)
	__cli()
	di = di - 0x0001
	ax = 0x0A0D
	Mem0[es:di:word16] = 0x0A0D
	al = 0x24
	di = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	si = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	bp = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	sp = sp + 0x0002
	bx = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	dx = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	cx = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	ax = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	Mem0[es:di:byte] = al
	di = di + 0x0001
	ax = ax - 0xECBA - C
	dh = dh + bl
	v37 = Mem0[ds:bx + di:word16] + bx
	Mem0[ds:bx + di:word16] = v37
	SCZO = cond(v37)
	v38 = (Mem0[ds:di:byte] & 0x01 << 0x08 - cl) != 0x00
	Mem0[ds:di:byte] = __rcl(Mem0[ds:di:byte], cl, C)
	C = v38
// DataOut: al bh bl bp bx cs cx dh di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> es:<invalid> ax:<invalid> si:<invalid> al:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bx:0xD909 ds:<invalid> di:<invalid> bh:0xD9 ss:<invalid>
// LocalsOut: v3(16)

l1483_1B6D:
	al = al & 0x5C
	SZO = cond(al)
	C = false
	sp = sp - 2
	Mem0[ss:sp:word16] = si
	si = 0x7269
	branch Test(NE,Z) l1483_1BE8
// DataOut: al ax bh bl bp bx cs cx dh di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> es:<invalid> ax:<invalid> si:<invalid> di:<invalid> al:<invalid> ds:<invalid> bp:<invalid> bx:<invalid> dh:<invalid> ch:<invalid> bh:<invalid> ss:<invalid>
// LocalsOut: v3(16)

l1483_1BE8:
	bp = bp - 0x0001
	ax = ax - 0x85FE
	bp = bp - 0x0001
	bh = bh | Mem0[ds:bx + 0x0003:byte]
	sp = sp - 2
	Mem0[ss:sp:word16] = es
	SCZO = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	return C
// DataOut: ax bp bx cs cx dh di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:0x7269 es:<invalid> ax:<invalid> di:<invalid> ds:<invalid> bp:<invalid> bx:<invalid> dh:<invalid> ch:<invalid> bh:<invalid> ss:<invalid>

fn1483_1BB9_exit:
	use ax (=> axOut)
	use cx (=> cxOut)
	use dl (=> dlOut)
	use dh (=> dhOut)
	use bx (=> bxOut)
	use bp (=> bpOut)
	use si (=> siOut)
	use di (=> diOut)
	use es (=> esOut)
	use ds (=> dsOut)
// DataOut: ax bp bx cx dh di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> bp:<invalid> ax:<invalid> bh:<invalid> es:<invalid> ss:<invalid> di:<invalid> ds:<invalid> bx:<invalid> dh:<invalid> ch:<invalid> -2(fp):<invalid>

l1483_1B75:
	al = al & 0x20
	bx = bx + 0x0001
	sp = sp - 2
	Mem0[ss:sp:word16] = 0x6365
	sp = Mem0[ds:bx + si:word16] *s 0x0046
	SCZO = cond(sp)
	di = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	si = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	bp = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	sp = sp + 0x0002
	bx = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	dx = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	cx = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	ax = Mem0[ss:sp:word16]
	sp = sp + 0x0002
// DataOut: al bx cl cs dh di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:0x7269 es:<invalid> ax:<invalid> di:<invalid> ds:<invalid> bp:<invalid> bx:<invalid> dh:<invalid> ch:<invalid> bh:<invalid> ss:<invalid>
// LocalsOut: v3(16)

l1483_1B7F:
	bp = Mem0[ds:si + 0x0065:word16] *s 0x3A64
	v25 = Mem0[ss:bp + si:byte] & al
	Mem0[ss:bp + si:byte] = v25
	SZO = cond(Mem0[ss:bp + si:byte])
	ch = 0xAF
	dh = dh ^ Mem0[ds:bx + di:byte]
	bx = 0xD909
	ax = __inw(0x0C)
	v29 = Mem0[ds:0x2CF2:byte] ^ cl
	Mem0[ds:0x2CF2:byte] = v29
	SZO = cond(Mem0[ds:0x2CF2:byte])
	v30 = Mem0[ds:di:byte] - dh
	Mem0[ds:di:byte] = v30
	al = al - 0xD9
	SCZO = cond(al)
	v31 = ~Mem0[ds:bx + 0x10F8 + di:word16]
	Mem0[ds:bx + 0x10F8 + di:word16] = v31
	v32 = ax
	ax = cx
	cx = v32
	v33 = sp
	sp = sp - 2
	Mem0[ss:sp:word16] = v33
	dx = Mem0[ss:sp:word16]
	sp = sp + 2
	ds = Mem0[ss:sp:selector]
	sp = sp + 2
	v34 = Mem0[ds:bx + 0x3201 + di:word16]
	Mem0[ds:bx + 0x3201 + di:word16] = di
	di = v34
	ax_al = ax_al - 0x87D9
	al = __inb(0x41)
	al = al + Mem0[ds:ecx:byte]
	__sti()
	C = false
	v36 = Mem0[ds:0xFF1F:word16] + 0x0001
	Mem0[ds:0xFF1F:word16] = v36
	al = __inb(dx)
	al = al - 0xF8 - C
	al = al & 0x0A
	SZO = cond(al)
	C = false
// DataOut: al ax bh bl bp bx cl cs cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> bx:<invalid> di:<invalid> bp:<invalid> ax:<invalid> ch:<invalid> dh:<invalid> ds:<invalid> es:<invalid> bh:<invalid> ss:<invalid>
// LocalsOut: v3(16)



void fn1483_1C50(word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx
// LiveOut:
// Trashed: al ax eax rax
// Preserved: sp
fn1483_1C50_entry:
// DataOut: dx
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_1C50:
	byte al_3 = __inb(dx)
	word16 ax_5 = DPB(ax, al_3, 0)
	word16 sp_6
	byte al_7
	word16 dx_8
	word16 ax_9
	call ax_5 (retsize: 2; depth: 2)
		uses: al_3,ax_5,dx,sp_1
		defs: al_7,ax_9,dx_8,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1483_1C50_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid>



void fn1483_261E(word16 ax, byte cl, word16 bp, word16 si, selector psegArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp cl si
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0000(16)
// Terminates process
fn1483_261E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_261E_entry:
// DataOut: ax bp cl si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l1483_261E:
	ui32 al_ax_5 = SEQ(al, ax + 0x1414)
	byte al_11 = (byte) (al_ax_5 + 0x00141414) + 0x14 + (al_ax_5 <u 0x00141414)
	byte al_14 = al_11 + 0x14 + (al_11 <u 0x00)
	__invd()
	byte al_17 = al_14 + 0x14 + (al_14 <u 0x00)
	byte al_20 = al_17 + 0x0F + (al_17 <u 0x00)
	byte al_26 = al_20 + 0x14 + (al_20 <u 0x00)
	byte al_29 = al_26 + 0x07 + (al_26 <u 0x00)
	byte al_32 = al_29 + 0x16 + (al_29 <u 0x00)
	byte al_35 = al_32 + 0x14 + (al_32 <u 0x00)
	byte al_38 = al_35 + 0x14 + (al_35 <u 0x00)
	byte al_41 = al_38 + 0x14 + (al_38 <u 0x00)
	byte al_44 = al_41 + 0x14 + (al_41 <u 0x00)
	byte al_47 = al_44 + 0x0D + (al_44 <u 0x00)
	byte al_50 = al_47 + 0x14 + (al_47 <u 0x00)
	byte al_53 = al_50 + 0x14 + (al_50 <u 0x00)
	byte al_56 = al_53 + 0x14 + (al_53 <u 0x00)
	byte al_59 = al_56 + 0x14 + (al_56 <u 0x00)
	Mem70[psegArg00:bp + si:byte] = Mem0[psegArg00:bp + si:byte] + cl + ((al_59 + 0x14) + (al_59 <u 0x00) <u 0x00)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



